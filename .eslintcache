[{"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\index.js":"1","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\App.js":"2","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\pages\\index.js":"3","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\pages\\tournaments.js":"4","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\pages\\tournament.js":"5","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\pages\\videos.js":"6","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\pages\\podcasts.js":"7","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\pages\\content.js":"8","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\pages\\account-dashboard.js":"9","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\pages\\sign-in.js":"10","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\pages\\admin.js":"11","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\components\\header.js":"12","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\firebase\\config.js":"13","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\components\\footer.js":"14","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\utilities\\scrollToTop.js":"15","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\components\\display-card.js":"16","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\utilities\\formatDate.js":"17","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\components\\current-card.js":"18","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\components\\blog-card.js":"19","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\components\\upcoming-card.js":"20","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\components\\button.js":"21","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\utilities\\generateID.js":"22","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\components\\search-bar.js":"23","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\components\\free-agent-card.js":"24","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\components\\tag.js":"25","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\components\\podcast-card.js":"26","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\components\\edit-org-card.js":"27","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\components\\edit-tournament-card.js":"28","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\pages\\edit-organization.js":"29","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\pages\\edit-tournament.js":"30","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\components\\selected-item.js":"31","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\utilities\\areEqual.js":"32","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\utilities\\useWindowSize.js":"33","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\index.js":"34","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\App.js":"35","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\pages\\content.js":"36","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\pages\\index.js":"37","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\pages\\tournaments.js":"38","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\pages\\podcasts.js":"39","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\pages\\tournament.js":"40","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\pages\\videos.js":"41","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\pages\\admin.js":"42","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\pages\\sign-in.js":"43","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\pages\\account-dashboard.js":"44","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\components\\header.js":"45","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\utilities\\scrollToTop.js":"46","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\firebase\\config.js":"47","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\components\\footer.js":"48","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\components\\button.js":"49","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\components\\blog-card.js":"50","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\components\\display-card.js":"51","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\components\\search-bar.js":"52","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\components\\current-card.js":"53","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\utilities\\generateID.js":"54","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\components\\upcoming-card.js":"55","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\components\\podcast-card.js":"56","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\utilities\\formatDate.js":"57","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\components\\free-agent-card.js":"58","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\components\\tag.js":"59","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\utilities\\useWindowSize.js":"60","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\pages\\edit-organization.js":"61","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\components\\edit-org-card.js":"62","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\pages\\edit-tournament.js":"63","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\components\\edit-tournament-card.js":"64","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\components\\selected-item.js":"65","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\utilities\\areEqual.js":"66"},{"size":230,"mtime":1614378769747,"results":"67","hashOfConfig":"68"},{"size":2631,"mtime":1614378769727,"results":"69","hashOfConfig":"68"},{"size":6962,"mtime":1614397482034,"results":"70","hashOfConfig":"68"},{"size":7535,"mtime":1614394612784,"results":"71","hashOfConfig":"68"},{"size":18566,"mtime":1614395971826,"results":"72","hashOfConfig":"68"},{"size":10260,"mtime":1614378769755,"results":"73","hashOfConfig":"68"},{"size":1889,"mtime":1614378769752,"results":"74","hashOfConfig":"68"},{"size":3085,"mtime":1614378769749,"results":"75","hashOfConfig":"68"},{"size":13574,"mtime":1614641266025,"results":"76","hashOfConfig":"68"},{"size":5112,"mtime":1614378769753,"results":"77","hashOfConfig":"68"},{"size":7031,"mtime":1614378769748,"results":"78","hashOfConfig":"68"},{"size":1949,"mtime":1614394527196,"results":"79","hashOfConfig":"68"},{"size":962,"mtime":1614378769745,"results":"80","hashOfConfig":"68"},{"size":140,"mtime":1614378769740,"results":"81","hashOfConfig":"68"},{"size":256,"mtime":1614378769758,"results":"82","hashOfConfig":"68"},{"size":764,"mtime":1614378769738,"results":"83","hashOfConfig":"68"},{"size":308,"mtime":1614378769757,"results":"84","hashOfConfig":"68"},{"size":1137,"mtime":1614378769737,"results":"85","hashOfConfig":"68"},{"size":460,"mtime":1614378769736,"results":"86","hashOfConfig":"68"},{"size":781,"mtime":1614378769744,"results":"87","hashOfConfig":"68"},{"size":362,"mtime":1614378769736,"results":"88","hashOfConfig":"68"},{"size":123,"mtime":1614378769757,"results":"89","hashOfConfig":"68"},{"size":320,"mtime":1614378769742,"results":"90","hashOfConfig":"68"},{"size":1150,"mtime":1614378769740,"results":"91","hashOfConfig":"68"},{"size":855,"mtime":1614378769743,"results":"92","hashOfConfig":"68"},{"size":795,"mtime":1614378769741,"results":"93","hashOfConfig":"68"},{"size":757,"mtime":1614378769738,"results":"94","hashOfConfig":"68"},{"size":896,"mtime":1614378769739,"results":"95","hashOfConfig":"68"},{"size":8144,"mtime":1614378769750,"results":"96","hashOfConfig":"68"},{"size":27376,"mtime":1614378769751,"results":"97","hashOfConfig":"68"},{"size":376,"mtime":1614378769743,"results":"98","hashOfConfig":"68"},{"size":1091,"mtime":1614378769756,"results":"99","hashOfConfig":"68"},{"size":1144,"mtime":1614624257087,"results":"100","hashOfConfig":"68"},{"size":230,"mtime":1614378769747,"results":"101","hashOfConfig":"102"},{"size":2631,"mtime":1614378769727,"results":"103","hashOfConfig":"102"},{"size":3113,"mtime":1614990245872,"results":"104","hashOfConfig":"102"},{"size":6962,"mtime":1614397482034,"results":"105","hashOfConfig":"102"},{"size":8896,"mtime":1615269006508,"results":"106","hashOfConfig":"102"},{"size":1889,"mtime":1614378769752,"results":"107","hashOfConfig":"102"},{"size":18654,"mtime":1615271971180,"results":"108","hashOfConfig":"102"},{"size":10260,"mtime":1614378769755,"results":"109","hashOfConfig":"102"},{"size":7031,"mtime":1614378769748,"results":"110","hashOfConfig":"102"},{"size":5112,"mtime":1614378769753,"results":"111","hashOfConfig":"102"},{"size":13486,"mtime":1615270892528,"results":"112","hashOfConfig":"102"},{"size":1949,"mtime":1614394527196,"results":"113","hashOfConfig":"102"},{"size":256,"mtime":1614378769758,"results":"114","hashOfConfig":"102"},{"size":962,"mtime":1614378769745,"results":"115","hashOfConfig":"102"},{"size":140,"mtime":1614378769740,"results":"116","hashOfConfig":"102"},{"size":375,"mtime":1615270224376,"results":"117","hashOfConfig":"102"},{"size":460,"mtime":1614378769736,"results":"118","hashOfConfig":"102"},{"size":807,"mtime":1615316595173,"results":"119","hashOfConfig":"102"},{"size":320,"mtime":1614378769742,"results":"120","hashOfConfig":"102"},{"size":1135,"mtime":1615316329087,"results":"121","hashOfConfig":"102"},{"size":123,"mtime":1614378769757,"results":"122","hashOfConfig":"102"},{"size":781,"mtime":1614378769744,"results":"123","hashOfConfig":"102"},{"size":795,"mtime":1614378769741,"results":"124","hashOfConfig":"102"},{"size":308,"mtime":1614378769757,"results":"125","hashOfConfig":"102"},{"size":1150,"mtime":1614378769740,"results":"126","hashOfConfig":"102"},{"size":855,"mtime":1614378769743,"results":"127","hashOfConfig":"102"},{"size":1144,"mtime":1614624257087,"results":"128","hashOfConfig":"102"},{"size":8240,"mtime":1615271819128,"results":"129","hashOfConfig":"102"},{"size":757,"mtime":1614378769738,"results":"130","hashOfConfig":"102"},{"size":33312,"mtime":1615315490536,"results":"131","hashOfConfig":"102"},{"size":896,"mtime":1614378769739,"results":"132","hashOfConfig":"102"},{"size":376,"mtime":1614378769743,"results":"133","hashOfConfig":"102"},{"size":1091,"mtime":1614378769756,"results":"134","hashOfConfig":"102"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},"upzuro",{"filePath":"138","messages":"139","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"137"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"137"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"137"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"137"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"137"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"137"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"137"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"137"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"137"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"137"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"137"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"137"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"137"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"137"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"137"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"137"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"137"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"137"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"137"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"137"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},"5cf6u7",{"filePath":"225","messages":"226","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"224"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"224"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"224"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"224"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"224"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"224"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"224"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"224"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"224"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":1,"source":"248","usedDeprecatedRules":"224"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"224"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"224"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"224"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"224"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"224"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"224"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"224"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"224"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"224"},"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\index.js",[],["294","295"],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\App.js",["296","297","298","299","300"],"import {useState,useEffect} from 'react'\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\r\nimport HomePage from './pages/index'\r\nimport TournamentsPage from './pages/tournaments'\r\nimport TournamentPage from './pages/tournament'\r\nimport ContentPage from './pages/content'\r\nimport VideosPage from './pages/videos'\r\nimport PodcastsPage from './pages/podcasts'\r\nimport AdminPage from './pages/admin'\r\nimport SignInPage from './pages/sign-in'\r\nimport AcctDashPage from './pages/account-dashboard'\r\nimport Header from './components/header'\r\nimport Footer from './components/footer'\r\n\r\nimport {firebase} from './firebase/config'\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\n\r\nimport ScrollToTop from './utilities/scrollToTop'\r\n\r\n\r\nfunction App() {\r\n\r\n  const auth = firebase.auth();\r\n\r\n  const [user, loading, error] = useAuthState(auth);\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Switch>\r\n          <Route path exact = '/'>\r\n            <Header user = {user}/>\r\n            <HomePage></HomePage>\r\n          </Route>\r\n          <Route path = '/tournaments'>\r\n            <ScrollToTop/>\r\n            <Header mainPath = \"tournaments\" user = {user}/>\r\n            <TournamentsPage></TournamentsPage>\r\n          </Route>\r\n          <Route path = '/content'>\r\n            <ScrollToTop/>\r\n            <Header mainPath = \"content\" user = {user}/>\r\n            <ContentPage></ContentPage>\r\n          </Route>\r\n          <Route path = '/tournament'>\r\n            <ScrollToTop/>\r\n            <Header mainPath = \"tournaments\" user = {user}/>\r\n            <TournamentPage user = {user}></TournamentPage>\r\n          </Route>\r\n          <Route path = '/videos'>\r\n            <ScrollToTop/>\r\n            <Header mainPath = \"content\" user = {user}/>\r\n            <VideosPage></VideosPage>\r\n          </Route>\r\n          <Route path = '/podcasts'>\r\n            <ScrollToTop/>\r\n            <Header mainPath = \"content\" user = {user}/>\r\n            <PodcastsPage></PodcastsPage>\r\n          </Route>\r\n          <Route path = \"/admin\">\r\n            <ScrollToTop/>\r\n            <Header user = {user}/>\r\n            <AdminPage></AdminPage>\r\n          </Route>\r\n          <Route path = \"/sign-in\">\r\n            <ScrollToTop/>\r\n            <Header user = {user}/>\r\n            <SignInPage></SignInPage>\r\n          </Route>\r\n          <Route path = \"/account-dashboard\">\r\n            <ScrollToTop/>\r\n            <Header user = {user}/>\r\n            <AcctDashPage user = {user} ></AcctDashPage>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n\r\n      {/*<Footer/>*/}\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\pages\\index.js",["301","302","303","304","305","306","307","308"],"import React from 'react'\r\nimport DisplayCard from '../components/display-card'\r\nimport BlogCard from '../components/blog-card'\r\nimport CurrentCard from '../components/current-card'\r\n\r\nimport upcomingIcon from '../assets/upcoming.svg'\r\nimport pastIcon from '../assets/past.svg'\r\nimport contentIcon from '../assets/content.svg'\r\n\r\nimport {firebase} from '../firebase/config'\r\nimport {useCollection} from 'react-firebase-hooks/firestore'\r\n\r\nimport formatDate from '../utilities/formatDate'\r\n\r\nconst HomePage = () => {\r\n\r\n    const db = firebase.firestore()\r\n\r\n    const [tournaments, loadingTournaments, tournamentsError] = useCollection(db.collection('tournaments')) \r\n    const [blogPosts, loadingPosts, postsError] = useCollection(db.collection('tournaments'))\r\n\r\n\r\n    //TODO: Make more flexible to compare any two dates\r\n    const isSameDay = (date) => {\r\n\r\n        const tourneyDate = new Date(date.seconds*1000);\r\n\r\n        const today = new Date()\r\n        today.setHours(0,0,0,0)\r\n\r\n        return tourneyDate.getTime() == today.getTime();\r\n    }\r\n\r\n    const getSoonestTournaments = (tArray) => {\r\n        const sortedUpcoming = tArray.filter((tournament)=>{\r\n                return new Date(tournament.data().date.seconds*1000) > new Date()\r\n            }).sort((a,b) => {\r\n            const dateA = new Date(a.data().date.seconds*1000)\r\n            const dateB = new Date(b.data().date.seconds*1000)\r\n            if(dateA > dateB){\r\n                return 1\r\n            }\r\n            else{\r\n                return -1\r\n            }\r\n        })\r\n\r\n        if(sortedUpcoming.length > 0){\r\n            const soonestDate = new Date(sortedUpcoming[0].data().date.seconds*1000);\r\n        \r\n            return sortedUpcoming.filter((tournament) => {\r\n                return new Date(tournament.data().date.seconds*1000).getTime() == soonestDate.getTime();\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div style = {{backgroundColor: 'var(--red)', minHeight:'calc(100vh - 3rem)', width:'100%', display:'inline-block'}}>\r\n            <div className = \"content\">\r\n                <p className = \"small-heading\">WELCOME TO SPIKEHUB</p>\r\n                <h2 className = \"large-heading\">\r\n                    The one-stop shop <br/> for all things roundnet.\r\n                </h2>\r\n            </div>\r\n            <section className = 'display-section'>\r\n                <div className = 'grid display-grid'>\r\n                        <DisplayCard \r\n                            imgSrc = {upcomingIcon}\r\n                            heading = \"Upcoming Events\" \r\n                            content = \"Find a partner and sign up for a tournament\"\r\n                            link = \"/tournaments/upcoming\"\r\n                        />\r\n                        <DisplayCard\r\n                            imgSrc = {pastIcon}\r\n                            heading = \"Past Events\"\r\n                            content = \"See results and info from past tournaments\"\r\n                            link = \"/tournaments/past\"\r\n                        />\r\n                        <DisplayCard\r\n                            imgSrc = {contentIcon}\r\n                            heading = \"Community Content\"\r\n                            content = \"Find the best podcasts, highlight videos, and more\"\r\n                            link = \"/content\"\r\n                            comingSoon = 'true'\r\n                        />\r\n                </div>\r\n            </section>\r\n            <section>\r\n                <h2 className = \"section-header\">Happening Now</h2>\r\n                <h4 className = \"section-subheader\">Stay up-to-date and follow along with <br/> tournaments across the world</h4>\r\n                {console.log(tournaments)}\r\n                {tournaments && tournaments.docs.filter((tournament) => isSameDay(tournament.data().date)).length > 0 ? \r\n                    (<div className = \"grid happening-now-grid\">\r\n                        {tournaments.docs.filter((tournament) => isSameDay(tournament.data().date)).map((tournament) =>\r\n                        (\r\n                            <CurrentCard\r\n                                imgSrc = {tournament.data().img}\r\n                                heading = {tournament.data().name}\r\n                                bracketLink = {tournament.data().bracketLink}\r\n                                liveLink = {tournament.data().liveLink}\r\n                            />\r\n                        ))\r\n                        }\r\n                    </div>)\r\n                    :\r\n                    <div className = \"no-tournaments\">\r\n                    {tournaments && tournaments.docs.length > 0 ?\r\n                        <>\r\n                            <h4 style = {{margin:'0 auto'}}>Come back on <b>{formatDate(new Date(getSoonestTournaments(tournaments.docs)[0].data().date.seconds*1000))}</b> for the next event{tournaments && getSoonestTournaments(tournaments.docs).length > 1 ? \"s\" : null}</h4>\r\n                            <div style = {{marginTop:'2rem', display:'flex', alignItems:'center', justifyContent:'center'}}>\r\n                                {tournaments && getSoonestTournaments(tournaments.docs).map((tournament)=> \r\n                                    <img src = {tournament.data().img} style = {{width:'10rem', margin:'0 1rem'}}></img>\r\n                                )}\r\n                            </div>\r\n                        </>\r\n                        :\r\n                        <h4 style = {{margin:'0 auto'}}>Come back soon for the next event</h4>\r\n                        }\r\n                    </div>\r\n                } \r\n            </section>\r\n            <section>\r\n                <h2 className = \"section-header\">Spikehub News</h2>\r\n                <h4 className = \"section-subheader\">Check out the latest features and see <br/> what’s coming soon to SpikeHub</h4>\r\n                <div className = 'grid two-column' style = {{margin:'2rem 0'}}>\r\n                    <BlogCard\r\n                        heading = \"Spikehub 2.0 Released!\"\r\n                        date = \"1/19/2021\"\r\n                        content = \"Little blurb about the blog or whatever post this is. If it is too long for like a couple of lines, like it will be once I type the rest of this, I’ll just cut it off with an ellipse like this...\"\r\n                        link = \"https://thespikehub.com\"\r\n                    />\r\n                    <BlogCard\r\n                        heading = \"Spikehub 2.0 Released!\"\r\n                        date = \"1/19/2021\"\r\n                        content = \"Little blurb about the blog or whatever post this is. If it is too long for like a couple of lines, like it will be once I type the rest of this, I’ll just cut it off with an ellipse like this...\"\r\n                        link = \"https://thespikehub.com\"\r\n                    />\r\n                </div>\r\n            </section>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\pages\\tournaments.js",["309","310","311","312","313","314","315","316","317"],"import React, {useState, useEffect} from 'react'\r\nimport {BrowserRouter as Router, Route, Switch, Link, useRouteMatch} from 'react-router-dom'\r\nimport {firebase} from '../firebase/config'\r\nimport {useCollection} from 'react-firebase-hooks/firestore'\r\n\r\nimport SearchBar from '../components/search-bar'\r\nimport Button from '../components/button'\r\nimport UpcomingCard from '../components/upcoming-card'\r\n\r\nimport tourneyIcon from '../assets/ex-tourney-icon.png'\r\n\r\nimport formatDate from '../utilities/formatDate'\r\n\r\nconst TournamentsPage = () => {\r\n\r\n    const db = firebase.firestore()\r\n\r\n    const [currentTab, setCurrentTab] = useState(window.location.pathname.split(\"/\")[2])\r\n    const [tournaments, loadingTournaments , error] = useCollection(db.collection('tournaments'))\r\n    const [upcoming, setUpcoming]= useState([])\r\n    const [past, setPast] = useState([])\r\n    const [keyword, setKeyword] = useState(\"\")\r\n\r\n    useEffect(() => {console.log(keyword)}, [keyword])\r\n\r\n    //whenever tournaments or search keyword changes, reset upcoming and past\r\n    useEffect(() => {\r\n        if(tournaments){\r\n            let queriedTournaments = tournaments.docs.sort((a,b) => {\r\n                const dateA = a.data().date.seconds\r\n                const dateB = b.data().date.seconds\r\n                if(dateA > dateB){\r\n                    return 1\r\n                }\r\n                else{\r\n                    return -1\r\n                }\r\n            }).filter((tournament) => tournament.data().name.includes(keyword))\r\n\r\n            const today = new Date()\r\n            const yesterday = new Date()\r\n            yesterday.setDate(today.getDate() - 1)\r\n\r\n            setUpcoming(queriedTournaments.filter((tournament) => {\r\n                return new Date(tournament.data().date.seconds*1000) > today\r\n            }))\r\n\r\n            setPast(queriedTournaments.filter((tournament) => {\r\n                return new Date(tournament.data().date.seconds*1000) < yesterday\r\n            }))\r\n\r\n            console.log(upcoming.map((a)=> a.data()))\r\n            console.log(past.map((a)=> a.data()))\r\n        }\r\n    },[tournaments,keyword])\r\n\r\n    //whenever the keyword or either list changes, filter the respective list\r\n    // useEffect(() => {\r\n    //     if(currentTab == \"upcoming\" && tournaments){\r\n    //         console.log(tournaments)\r\n    //         setUpcoming(tournaments.docs.filter((tournament)=> tournament.data().name.includes(keyword))\r\n    //     }\r\n    // },[keyword])\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div style = {{backgroundColor: 'var(--red)', minHeight:'calc(100vh - 3rem)', width:'100%', display:'inline-block'}}>\r\n            <section className = \"connected-header\">\r\n                <div className = \"connected-header-content\">\r\n                    <div className = \"tournaments-heading-container\">\r\n                        <Link to = {\"/tournaments/upcoming\"} className = \"link\" onClick = {() => setCurrentTab(\"upcoming\")}>\r\n                            <h3 className = {`tournaments-heading ${currentTab == \"upcoming\" ? \"selected\" : \"\"}`}>Upcoming Events</h3>\r\n                        </Link>\r\n                        <Link to = {\"/tournaments/past\"} className = \"link\" onClick = {() => setCurrentTab(\"past\")}>\r\n                            <h3 className = {`tournaments-heading ${currentTab == \"past\" ? \"selected\" : \"\"}`}>Past Events</h3>\r\n                        </Link>\r\n                    </div>\r\n                    <SearchBar keyword = {keyword} setKeyword = {setKeyword} placeholder = {currentTab.charAt(0).toUpperCase() + currentTab.slice(1) + \" Events\"}/>\r\n                </div>\r\n            </section>\r\n\r\n                <Route path = \"/tournaments/upcoming\" >\r\n                <section>\r\n                    {upcoming && upcoming.length > 0 ? \r\n                        <div className = \"grid four-column\" style = {{margin: '1rem', gap:'1rem', width: 'calc(100% - 2rem)'}}>\r\n                                {upcoming && upcoming.map((tournament) => (\r\n                                    <>\r\n                                    <UpcomingCard\r\n                                        img = {tournament.data().img}\r\n                                        tournamentName = {tournament.data().name}\r\n                                        date = {new Date(tournament.data().date.seconds*1000).toDateString()}\r\n                                        slug = {tournament.data().slug}\r\n                                        id = {tournament.data().id}\r\n                                    />\r\n                                        {/*<button onClick = {() => db.collection('tournaments').doc('example-current').set(tournament.data())}> BUTTON</button>*/}\r\n                                    </>\r\n                                ))}\r\n                        </div>\r\n                        :\r\n                        <h4 style = {{margin:'2rem auto'}}>No tournaments coming soon!</h4>\r\n                    }\r\n\r\n                </section>\r\n                </Route>\r\n                <Route path = \"/tournaments/past\">\r\n                    <section style = {{padding:0}}>\r\n                        {past && past.length > 0 ? \r\n                            <table className = \"past-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th className = \"name-col\">Event Name</th>\r\n                                        <th className = \"loc-col\">Location</th>\r\n                                        <th className = \"date-col\">Date</th>\r\n                                        <th className = \"teams-col\"># Teams</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {past && past.map((tournament)=>(\r\n                                        <tr>\r\n                                            <td className = \"name-col\">{tournament.data().name}</td>\r\n                                            <td className = \"loc-col\" style = {{whiteSpace:'nowrap'}}>{tournament.data().location}</td>\r\n                                            <td className = \"date-col\" style = {{whiteSpace:'nowrap'}}>{formatDate(new Date(tournament.data().date.seconds*1000))}</td>\r\n                                            <td className = \"teams-col\">{tournament.data().numTeams}</td>\r\n                                            <td>\r\n                                                <Link className = \"link\" to = {`/tournament?id=${tournament.data().slug + tournament.data().id}`}>\r\n                                                    <Button\r\n                                                        size = \"medium\"\r\n                                                        color = 'red'\r\n                                                        label = 'See More'\r\n                                                    />\r\n                                                </Link>\r\n                                            </td>\r\n                                        </tr>   \r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                            :\r\n                            <h4 style = {{padding:'2rem 0', margin:'0 auto'}}>No past tournaments!</h4>\r\n                        }\r\n\r\n                    </section>\r\n                </Route>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default TournamentsPage","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\pages\\tournament.js",["318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337"],"import React, {useState, useEffect} from 'react'\r\nimport {useLocation} from 'react-router-dom'\r\n\r\nimport Button from '../components/button'\r\nimport FreeAgentCard from '../components/free-agent-card'\r\n\r\nimport tourneyIcon from '../assets/ex-tourney-icon.png'\r\n\r\nimport {firebase} from '../firebase/config'\r\nimport {useDocument} from 'react-firebase-hooks/firestore'\r\nimport axios from 'axios'\r\nimport TournamentsPage from './tournaments'\r\n\r\nimport formatDate from '../utilities/formatDate'\r\nimport generateID from '../utilities/generateID'\r\n\r\nconst useQueryString = () =>{\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\n\r\nconst TournamentPage = ({user}) => {\r\n\r\n    const db = firebase.firestore()\r\n\r\n    //in the form of [...slug, id] (slug in multiple parts if \"_\" in it)\r\n    const slugIdArray = useQueryString().get('id').split(\"_\");\r\n    \r\n    console.log(slugIdArray)\r\n\r\n    const id = `_${slugIdArray[slugIdArray.length-1]}`\r\n    const slug = slugIdArray.slice(0,slugIdArray.length-1).join(\"_\")\r\n\r\n    console.log(id)\r\n\r\n    const [tournament, loading, error] = useDocument(db.doc(`tournaments/${id}`))\r\n\r\n    const [isFreeAgentsOpen, setIsFreeAgentsOpen] = useState(true)\r\n    const [isScheduleOpen, setIsScheduleOpen] = useState(false)\r\n    const [isPrizesOpen, setIsPrizesOpen] = useState(false)\r\n    const [isTeamsOpen, setIsTeamsOpen] = useState(false)\r\n    const [isResultsOpen, setIsResultsOpen] = useState(true)\r\n\r\n    const [userData, setUserData] = useState({})\r\n    const [isOverlayOpen, setIsOverlayOpen] = useState(false)\r\n    const [manualEntry, setManualEntry] = useState(false)\r\n    const [freeAgent, setFreeAgent] = useState({})\r\n    const [profileAlert, setProfileAlert] = useState(false)\r\n\r\n    const [hostName, setHostName] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        if(tournament){\r\n            const hostType = tournament.data().host.type;\r\n            const hostId = tournament.data().host.id;\r\n\r\n\r\n            if(hostType == \"organization\"){\r\n                db.collection(\"organizations\").doc(hostId).get().then((doc) => {\r\n                    setHostName(doc.data().name)\r\n                })\r\n            }\r\n            if(hostType == \"user\"){\r\n                db.collection(\"users\").doc(hostId).get().then((doc) => {\r\n                    setHostName(doc.data().fName + \" \" + doc.data().lName)\r\n                })\r\n            }\r\n\r\n            setFreeAgent({...freeAgent, division: tournament.data().divisions[0]})\r\n        }\r\n    },[tournament])\r\n\r\n    useEffect(()=>{\r\n        if(user){\r\n            db.collection('users').doc(user.uid).get().then((doc) => {\r\n                setUserData(doc.data())\r\n            })\r\n        }\r\n    },[user])\r\n\r\n    const toggleAccordion = (accordionName) => {\r\n        // e.currentTarget.nextElementSibling.classList.toggle('open');\r\n        switch(accordionName) {\r\n            case 'freeAgents':\r\n                setIsFreeAgentsOpen(!isFreeAgentsOpen);\r\n            case 'teams': \r\n                setIsTeamsOpen(!isTeamsOpen);\r\n                return\r\n            case 'results':\r\n                setIsResultsOpen(!isResultsOpen)\r\n                return\r\n            case 'schedule':\r\n                setIsScheduleOpen(!isScheduleOpen)\r\n                return\r\n            case 'prizes':\r\n                setIsPrizesOpen(!isPrizesOpen)\r\n        }\r\n\r\n    }\r\n\r\n    const addFreeAgent = (isSelf, e) => {\r\n        e.currentTarget.disabled = true;\r\n        let player = {}\r\n\r\n        if(isSelf){\r\n            if(!userData.fName || !userData.lName || !(userData.email || userData.phone) || !userData.rpr){\r\n                setProfileAlert(true)\r\n                return;\r\n            }\r\n            player = {\r\n                name: userData.fName + \" \" + userData.lName,\r\n                img: userData.img,\r\n                email: userData.email,\r\n                phone: userData.phone,\r\n                rpr: userData.rpr,\r\n                division: freeAgent.division,\r\n                freeAgentId: generateID(),\r\n                creatorId: user.uid\r\n            }\r\n        }\r\n\r\n        else{\r\n            if(user){\r\n                player = {...freeAgent, freeAgentId: generateID(), creatorId: user.uid}\r\n            }else{\r\n                player = freeAgent\r\n            }\r\n        }\r\n\r\n        if(tournament.data().freeAgents){\r\n            db.doc(`tournaments/${id}`).update({freeAgents: [...tournament.data().freeAgents, player]}).then(()=> {setIsOverlayOpen(false); setManualEntry(false)})\r\n        }\r\n        else{\r\n            db.doc(`tournaments/${id}`).update({freeAgents: [player]}).then(()=> {setIsOverlayOpen(false); setManualEntry(false)})\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const deleteFreeAgent = (faID) => {\r\n\r\n        const updatedFreeAgents = tournament.data().freeAgents.filter((obj) => {\r\n            return !(obj.freeAgentId == faID)\r\n        })\r\n\r\n\r\n        db.doc(`tournaments/${id}`).update({freeAgents: updatedFreeAgents}).then(()=> setIsOverlayOpen(false))\r\n    }\r\n\r\n\r\n    return (\r\n        <div style = {{minHeight: \"calc(100vh - 3rem)\", backgroundColor:'var(--light-gray'}}>\r\n            <div className = \"content\" style = {{padding: '2rem 0rem'}}>\r\n                {tournament && console.log(tournament.data())}\r\n                <h2 className = \"tournament-heading\" >{tournament && tournament.data().name}</h2>\r\n                <h4 className = \"tournament-subheading\">{tournament && `Hosted By ${hostName}`}</h4>\r\n            </div>\r\n            <div className = \"content tournament-info-section\">\r\n                <div className = \"tournament-sidebar\">\r\n                    <img src = {tournament && tournament.data().img || \"https://res.cloudinary.com/dicfhqxoo/image/upload/v1612321575/tournament-icon_ydpdbe.png\"} style = {{width: '95%', margin:'0 auto 1.5rem auto'}}></img>\r\n                    <h3>{tournament && tournament.data().location }</h3>\r\n                    <h3 style = {{fontSize:'1.25rem', marginTop:'.5rem'}}>{tournament && formatDate(new Date(tournament.data().date.seconds*1000))}</h3>\r\n                    <p>{tournament && tournament.data().description}</p>\r\n                    {tournament && new Date(tournament.data().date.seconds*1000) > new Date() &&\r\n                    <>\r\n                        {new Date(tournament.data().regEndDate.seconds*1000) > new Date() ? \r\n                        <>\r\n                            {tournament.data().link ? \r\n                            <a href = {tournament && tournament.data().link} className = \"link\" target = \"_blank\"><Button size = \"large\" color = \"red\" label = \"Register\"></Button></a>\r\n                            :\r\n                            <Button size = \"medium\" color = \"red\" label = \"No Registration Link\" onClick = {tournament && tournament.data().link} isDisabled = {true}></Button>                   \r\n                            }\r\n                            <p style = {{fontSize:'.8rem', margin:'.5rem auto 0 auto'}}>Registration ends on <br/><strong>{formatDate(new Date(tournament.data().regEndDate.seconds * 1000))}</strong></p>\r\n                        </>\r\n                        :\r\n                        <Button size = \"medium\" color = \"light-gray\" label = \"Registration Has Ended\" onClick = {tournament && tournament.data().link} isDisabled = {true}></Button>\r\n                        }\r\n                    </>\r\n                    }\r\n                    \r\n                </div>\r\n                <div className = \"tournament-info\">\r\n                    {tournament && new Date(tournament.data().date.seconds*1000) > new Date() ? \r\n                    (<>\r\n                        <button className= \"accordion-header\" onClick = {() => toggleAccordion('freeAgents')}>\r\n                            <div style = {{display:'flex'}}>\r\n                                <h3 className = \"accordion-header-label\">Free Agents</h3>\r\n                                <Button size = \"medium\" color = \"red\" label = \"Add New\" styles = {{margin:'auto'}} onClick = {(e)=>{e.stopPropagation(); setIsOverlayOpen(true)}}></Button>\r\n                            </div>\r\n                            <h3>{isFreeAgentsOpen ? \"-\" : \"+\"}</h3>\r\n                        </button>\r\n                        <div className = {`accordion-content grid two-column ${isFreeAgentsOpen ? \"open\" : \"\"}`} style = {{gap: '1rem', width: 'calc(100% - 2rem)'}}>\r\n                            {tournament && tournament.data().freeAgents && Object.keys(tournament.data().freeAgents).length > 0 ? \r\n                                tournament.data().freeAgents.map((data) => (<FreeAgentCard data = {data} user = {user} deleteSelf = {() => deleteFreeAgent(data.freeAgentId)}></FreeAgentCard>))\r\n                            :\r\n                            <h4 style = {{margin: '0 1rem'}}>No Free Agents Yet!</h4>\r\n                            }\r\n                        </div>\r\n                        <button className= \"accordion-header\" onClick = {() => toggleAccordion('schedule')}>\r\n                            <div style = {{display:'flex'}}>\r\n                                <h3 className = \"accordion-header-label\">Schedule</h3>\r\n                            </div>\r\n                            <h3>{isScheduleOpen ? \"-\" : \"+\"}</h3>\r\n                        </button>\r\n                        <div className = {`accordion-content grid two-column ${isScheduleOpen ? \"open\" : \"\"}`} style = {{gap: '1rem', width: 'calc(100% - 2rem)'}}>\r\n                            {tournament && tournament.data().schedule && tournament.data().schedule.length > 0 ? \r\n                            <div className = \"grid\" style = {{gridTemplateColumns: 'auto 1fr', columnGap: '1rem', margin:'0 1rem'}}>\r\n                                {tournament.data().schedule.map((data) => (<>\r\n                                    <p className = \"schedule-time\">{data.time}</p>\r\n                                    <p className = \"schedule-event\">{data.event}</p>\r\n                                </>))}\r\n                            </div>\r\n                            :\r\n                            <h4 style = {{margin: '0 1rem'}}>Schedule TBD</h4>\r\n                            }\r\n\r\n                        </div>\r\n                        <button className= \"accordion-header\" onClick = {() => toggleAccordion('prizes')}>\r\n                            <div style = {{display:'flex'}}>\r\n                                <h3 className = \"accordion-header-label\">Prizes</h3>\r\n                            </div>\r\n                            <h3>{isPrizesOpen ? \"-\" : \"+\"}</h3>\r\n                        </button>\r\n                        <div className = {`accordion-content grid two-column ${isPrizesOpen ? \"open\" : \"\"}`} style = {{gap: '1rem', width: 'calc(100% - 2rem)'}}>\r\n                            {(tournament && tournament.data().prizes && Object.keys(tournament.data().prizes).length > 0)  ?\r\n                            <div className = \"grid\" style = {{gridTemplateColumns: 'auto auto 1fr', columnGap: '1rem', margin:'0 1rem'}}>\r\n                                {Object.keys(tournament.data().prizes).map((key) => (<>\r\n                                    <p className = \"schedule-time\" style = {{gridRow: 'span 3'}}>{key}</p>\r\n                                    <p className = \"schedule-event\">1st</p>\r\n                                    <p className = \"schedule-event\">{tournament.data().prizes[key][0]}</p>\r\n                                    <p className = \"schedule-event\">2nd</p>\r\n                                    <p className = \"schedule-event\">{tournament.data().prizes[key][1]}</p>\r\n                                    <p className = \"schedule-event\">3rd</p>\r\n                                    <p className = \"schedule-event\">{tournament.data().prizes[key][2]}</p>\r\n                                </>))}\r\n                            </div>   \r\n                            :\r\n                            <h4 style = {{margin:'0 1rem'}}>Prizes TBD</h4>\r\n                            }\r\n                     \r\n                        </div>\r\n                    </>) \r\n                    :\r\n                    (<>\r\n                        {/* <button className= \"accordion-header\" onClick = {() => toggleAccordion('teams')}>\r\n                            <div style = {{display:'flex'}}>\r\n                                <h3 style = {{display:'inline-block', paddingRight: '1rem'}}>Teams</h3>\r\n                                <Button size = \"medium\" color = \"red\" label = \"Add New\" styles = {{margin:'auto'}}></Button>\r\n                            </div>\r\n                            <h3>{isTeamsOpen ? \"-\":\"+\"}</h3>\r\n                        </button>\r\n                        <div className = {`accordion-content ${isTeamsOpen ? \"open\" : \"\"}`}>\r\n                            Hi\r\n                        </div> */}\r\n                        <button className= \"accordion-header\" onClick = {() => toggleAccordion('results')}>\r\n                            <div style = {{display:'flex'}}>\r\n                                <h3 className = \"accordion-header-label\">Results</h3>\r\n                            </div>\r\n                            <h3>{isResultsOpen ? \"-\":\"+\"}</h3>\r\n                        </button>\r\n                        <div className = {`accordion-content ${isResultsOpen ? \"open\" : \"\"}`}>\r\n                            <div className = \"grid\" style = {{gridTemplateColumns: 'auto auto 1fr 1fr 1fr', columnGap: '1rem', margin:'0 1rem'}}>\r\n                                <p style = {{gridColumn:'3'}}>Team Name</p>\r\n                                <p>Player 1</p>\r\n                                <p>Player 2</p>\r\n                                {tournament && tournament.data().results && Object.keys(tournament.data().results).sort().map((division) => (\r\n                                <>\r\n                                    <p className = \"schedule-time line-above\" style = {{gridRow: 'span 3'}}>{division}</p>\r\n                                    {Object.keys(tournament.data().results[division]).map((place, index) => {\r\n                                        const teamArrs = tournament.data().results[division][place] \r\n                                        \r\n                                        return (<>\r\n                                            <p className = \"schedule-time\" style = {{fontWeight:'500'}}>{place == 1 && \"1st\"}{place == 2 && \"2nd\"}{place == 3 && \"3rd\"}</p>\r\n                                            <p className = \"schedule-event\" >{teamArrs[0]}</p>\r\n                                            <p className = \"schedule-event\">{teamArrs[0]}</p>\r\n                                            <p className = \"schedule-event\">{teamArrs[0]}</p>                                            \r\n                                        </>)})\r\n                                        }\r\n                                </>))}\r\n                            </div>\r\n                        </div>\r\n                    </>)}\r\n                </div>\r\n            </div>\r\n            {isOverlayOpen ? \r\n            (<div style = {{width:'100%',height:'100%', position:'fixed', top:0, left:0, backgroundColor: 'rgba(0,0,0,.5)', display:'flex'}}>\r\n                <div style = {{width:'90%', maxWidth:'15rem', backgroundColor:'white', padding:'2rem', margin:'auto', borderRadius:'.5rem'}}>\r\n                    <h3>Add a Free Agent</h3>\r\n                    {user && !manualEntry ? \r\n                    (<>\r\n                        <div style = {{marginTop: '1rem'}}>\r\n                            <label className = \"dash-label\" style = {{width:'100%', textAlign:'left'}}>Choose a division</label>\r\n                            <select className = \"dash-input\" placeholder = \"division\" style = {{marginBottom:'1rem'}} value = {freeAgent.division} onChange = {(e) => setFreeAgent({...freeAgent, division: e.target.value})}>\r\n                                {tournament && tournament.data().divisions.map((div) => (\r\n                                    <option value = {div}>{div}</option>\r\n                                ))}\r\n                            </select>\r\n                            <Button size = \"medium\" color = \"red\" label = \"Add Yourself\" onClick = {(e)=> addFreeAgent(true, e)} styles = {{marginBottom:'1rem'}}></Button>\r\n                            {profileAlert ? <p style = {{margin:'-.5rem 0 .5rem 0', fontSize: '.7rem'}}>Make sure your profile has enough information!</p>:null}\r\n                            <Button size = \"medium\" color = \"red\" label = \"Enter Player Info\" onClick = {() => setManualEntry(true)} styles = {{marginBottom:'1rem', marginRight:'1rem'}}></Button>\r\n                            <Button size = \"medium\" color = \"dark-gray\" label = \"Cancel\" onClick = {() => {setIsOverlayOpen(false); setProfileAlert(false)}}></Button>\r\n                        </div>\r\n                    </>)\r\n                    :(<>\r\n                        <div style = {{marginTop:'1rem'}}>\r\n                            <label className = \"dash-label\">Name</label>\r\n                            <input className = \"dash-input\" value = {freeAgent.name} onChange = {(e)=> setFreeAgent({...freeAgent, name: e.target.value})}></input>\r\n                            <label className = \"dash-label\">Email</label>\r\n                            <input className = \"dash-input\"  value = {freeAgent.email} onChange = {(e)=> setFreeAgent({...freeAgent, email: e.target.value})}></input>\r\n                            <label className = \"dash-label\">Phone</label>\r\n                            <input className = \"dash-input\"  value = {freeAgent.phone} onChange = {(e)=> setFreeAgent({...freeAgent, phone: e.target.value})}></input>\r\n                            <label className = \"dash-label\">RPR</label>\r\n                            <input className = \"dash-input\"  value = {freeAgent.rpr} onChange = {(e)=> setFreeAgent({...freeAgent, rpr: e.target.value})}></input>\r\n                            <div style = {{textAlign:'right'}}>\r\n                                <Button size = \"medium\" color = \"dark-gray\" label = {user ? \"Back\" : \"Cancel\"} onClick = {() => user ?  setManualEntry(false) : setIsOverlayOpen(false)} styles = {{marginRight:'1rem'}}></Button>\r\n                                <Button size = \"medium\" color = \"red\" label = \"Submit\" onClick = {(e) => addFreeAgent(false, e)} styles = {{marginBottom:'1rem'}}></Button>\r\n                            </div>\r\n                        </div>\r\n                    </>)}\r\n                </div>\r\n            </div>):\r\n            null\r\n            }\r\n        </div>   \r\n    )\r\n}\r\n\r\nexport default TournamentPage","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\pages\\videos.js",["338","339","340","341","342","343"],"import React, {useEffect, useState} from 'react'\r\n\r\nimport Tag from '../components/tag'\r\n\r\nimport {firebase} from '../firebase/config'\r\nimport {useCollection} from 'react-firebase-hooks/firestore'\r\n\r\nconst VideosPage = () => {\r\n\r\n    const db = firebase.firestore()\r\n\r\n    const [videos, loading, error] = useCollection(db.collection('videos'))\r\n\r\n    const [sortedVideos, setSortedVideos] = useState([])\r\n    const [genTags, setGenTags] = useState({})\r\n    const [players, setPlayers] = useState({})\r\n    const [teams, setTeams] = useState({})\r\n    const [tournaments, setTournaments] = useState({})\r\n\r\n    const [selectedTags, setSelectedTags] = useState([])\r\n    const [selectedPlayers, setSelectedPlayers] = useState([])\r\n    const [selectedTeams, setSelectedTeams] = useState([])\r\n    const [selectedTournaments, setSelectedTournaments] = useState([])\r\n\r\n    const videoReducer = (accumulator, currentValue) =>{\r\n        accumulator.genTags = [...accumulator.genTags, ...currentValue.data().tags.general]\r\n        accumulator.players = [...accumulator.players, ...currentValue.data().tags.players]\r\n        accumulator.teams = [...accumulator.teams, ...currentValue.data().tags.teams]\r\n        accumulator.tournaments = [...accumulator.tournaments, ...currentValue.data().tags.tournament]\r\n        return accumulator;\r\n    }\r\n\r\n\r\n    const selectTag = (label, count) => {\r\n        setSelectedTags([...selectedTags, [label, count]])\r\n    }\r\n\r\n    //pass setSelectedX and selectedX to function as parameters to eliminate duplicate code?\r\n    const deselectTag = (tagType, label) => {\r\n        \r\n        let index = 0;\r\n        switch(tagType){\r\n            case \"genTag\":\r\n                index = selectedTags.map((a)=> a[0]).indexOf(label)\r\n                const newSelectedTags = [...selectedTags]\r\n                newSelectedTags.splice(index, 1)\r\n                setSelectedTags(newSelectedTags)\r\n                break\r\n            case \"player\":\r\n                index = selectedPlayers.map((a)=> a[0]).indexOf(label)\r\n                console.log(index)\r\n                console.log(selectedPlayers)\r\n                const newSelectedPlayers = [...selectedPlayers]\r\n                newSelectedPlayers.splice(index, 1)\r\n                console.log(newSelectedPlayers)\r\n                console.log(selectedPlayers)\r\n                setSelectedPlayers(newSelectedPlayers)\r\n                break\r\n            case \"team\":\r\n                index = selectedTeams.map((a)=> a[0]).indexOf(label)\r\n                const newSelectedTeams = [...selectedTeams]\r\n                newSelectedTeams.splice(index, 1)\r\n                setSelectedTeams(newSelectedTeams)\r\n                break\r\n            case \"tournament\":\r\n                index = selectedTournaments.map((a)=> a[0]).indexOf(label)\r\n                const newSelectedTournaments = [...selectedTournaments]\r\n                newSelectedTournaments.splice(index, 1)\r\n                setSelectedTournaments(newSelectedTournaments)\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    useEffect(() =>{\r\n        if(videos){\r\n\r\n            setSortedVideos(videos.docs.sort((a,b) => {\r\n                const dateA = new Date(a.data().date.seconds*1000)\r\n                const dateB = new Date(b.data().date.seconds*1000)\r\n                if(dateA < dateB){\r\n                    return 1\r\n                }\r\n                else{\r\n                    return -1\r\n                }\r\n            }))\r\n\r\n\r\n            const tags = videos.docs.reduce(videoReducer, {genTags:[], players:[], teams:[], tournaments:[]});\r\n            const tagCountsArr = Object.entries(tags).map(([label, values]) => {\r\n                const counts = {}\r\n                values.forEach((val)=> {\r\n                    if(counts[val]){\r\n                        counts[val] += 1;\r\n                    }\r\n                    else{\r\n                        counts[val] = 1;\r\n                    }\r\n                })\r\n                return [label, counts];\r\n            })\r\n            \r\n            const tagCounts = Object.fromEntries(tagCountsArr)\r\n\r\n            setGenTags(tagCounts.genTags);\r\n            setPlayers(tagCounts.players);\r\n            setTeams(tagCounts.teams);\r\n            setTournaments(tagCounts.tournaments)\r\n        }\r\n    }, [videos])\r\n\r\n\r\n    //note: array select values come through as strings with comma separating elements\r\n    const handleChange = (e, category) => {\r\n        switch (category) {\r\n            case \"players\":\r\n                if(!selectedPlayers.map((elt) => elt[0]).includes(e.currentTarget.value)){\r\n                    setSelectedPlayers([...selectedPlayers, [e.currentTarget.value, players[e.currentTarget.value]]])\r\n                }\r\n                break\r\n            case \"teams\":\r\n                if(!selectedTeams.map((elt) => elt[0]).includes(e.currentTarget.value)){\r\n                    setSelectedTeams([...selectedTeams, [e.currentTarget.value, teams[e.currentTarget.value]]])\r\n                }\r\n                break\r\n            case \"tournaments\":\r\n                setSelectedTournaments([[e.currentTarget.value, tournaments[e.currentTarget.value]]])\r\n        }\r\n        e.currentTarget.selectedIndex = 0;\r\n    }\r\n\r\n    return (\r\n        <div style = {{backgroundColor: 'var(--red)', minHeight:'calc(100vh - 3rem)', width:'100%', display:'inline-block'}}>\r\n            <div className = \"content\" style = {{textAlign:'center'}}>\r\n                <h2 style = {{marginTop:'4rem', marginBottom:'.5rem'}}>Explore {videos ? videos.docs.length : \"#\"} Videos</h2>\r\n                <p className = \"small-heading\" style = {{marginTop: '0rem', marginBottom:'4rem'}}>Choose a tag below to filter</p>\r\n            </div>\r\n            <div className = \"content\">\r\n                <div style = {{paddingBottom:'2rem'}}>\r\n                    {genTags && Object.keys(genTags).map((tag)=> {\r\n                        return (<Tag \r\n                                    label = {tag} \r\n                                    count = {genTags[tag]} \r\n                                    select = {()=> selectTag(tag, genTags[tag])} \r\n                                    deselect = {() => deselectTag(\"genTag\", tag)}>\r\n                                </Tag>)\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <div className = \"content\">\r\n                <div className = \"grid three-column\" style = {{gap: '2rem'}}>\r\n                    <div className = \"dropdown-filter-section\">\r\n                        <select className = \"dropdown-filter\" onChange = {(e) => handleChange(e, \"players\")} >\r\n                            <option disabled selected hidden>Choose Players...</option>\r\n                            {players && Object.keys(players).map((label)=> (\r\n                                <option value = {label}>{label} ({players[label]})</option>\r\n                            ))}\r\n                        </select>\r\n                        <div>\r\n                            {selectedPlayers && selectedPlayers.map(([label, count]) => (\r\n                                <Tag label = {label} count = {count} isSelected deselect = {() => deselectTag(\"player\", label)}></Tag>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <select className = \"dropdown-filter\" onChange = {(e) => handleChange(e, \"teams\")}>\r\n                            <option disabled selected hidden>Choose Teams...</option>\r\n                            {teams && Object.keys(teams).map((label)=> (\r\n                                <option value = {label}>{label} ({teams[label]})</option>\r\n                            ))}\r\n                        </select>\r\n                        <div>\r\n                            {selectedTeams && selectedTeams.map(([label, count]) => (\r\n                                <Tag label = {label} count = {count} isSelected deselect = {() => deselectTag(\"team\", label)}></Tag>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <select className = \"dropdown-filter\" onChange = {(e) => handleChange(e, \"tournaments\")}>\r\n                            <option disabled selected hidden>Choose Tournament...</option>\r\n                            {tournaments && Object.keys(tournaments).map((label)=> (\r\n                                <option value = {label}>{label} ({tournaments[label]})</option>\r\n                            ))}\r\n                        </select>\r\n                        <div>\r\n                            {selectedTournaments && selectedTournaments.map(([label, count]) => (\r\n                                <Tag label = {label} count = {count} isSelected deselect = {() => deselectTag(\"tournament\", label)}></Tag>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <section>\r\n                <div className = \"grid three-column\">\r\n                    {videos && sortedVideos.filter((video) => {\r\n                        let keep = true;\r\n                        const {link, tags} = video.data()\r\n                        const tagsArray = Object.values(tags).flat()\r\n                        const filterTags = [...selectedTags.map((a) => a[0]), ...selectedPlayers.map((a)=> a[0]), ...selectedTeams.map((a)=> a[0]), ...selectedTournaments.map((a)=> a[0])]\r\n                        filterTags.forEach((tag) => {\r\n                            if(!tagsArray.includes(tag)){\r\n                                keep = false;\r\n                            }\r\n                        })\r\n                        return keep\r\n                    }).map((video) => {\r\n                        const videoId = video.data().link.split(\"?v=\")[1].split('&')[0];\r\n                        return (<iframe width=\"350\" height=\"197\" style = {{margin:'auto'}} src= {`https://www.youtube.com/embed/${videoId}`} frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>)\r\n                    })\r\n                    }\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideosPage","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\pages\\podcasts.js",["344","345"],"import React, {useState, useEffect} from 'react'\r\n\r\nimport PodcastCard from '../components/podcast-card'\r\n\r\nimport {firebase} from '../firebase/config'\r\nimport {useCollection} from 'react-firebase-hooks/firestore'\r\n\r\nconst PodcastsPage = () => {\r\n\r\n    const db = firebase.firestore()\r\n\r\n    const [podcasts, loading, error] = useCollection(db.collection('podcasts'))\r\n    const [sortedPodcasts, setSortedPodcasts] = useState([])\r\n\r\n\r\n    useEffect(() =>{\r\n        if(podcasts){\r\n\r\n            setSortedPodcasts(podcasts.docs.sort((a,b) => {\r\n                const dateA = new Date(a.data().date.seconds*1000)\r\n                const dateB = new Date(b.data().date.seconds*1000)\r\n                if(dateA < dateB){\r\n                    return 1\r\n                }\r\n                else{\r\n                    return -1\r\n                }\r\n            }))\r\n        }\r\n    },[podcasts])\r\n    \r\n    return (\r\n        <div style = {{backgroundColor: 'var(--red)', minHeight:'calc(100vh - 3rem)', width:'100%', display:'inline-block'}}>\r\n            <div className = \"content\" style = {{textAlign:'center'}}>\r\n                <h2 style = {{marginTop:'4rem'}}>Explore # Podcasts</h2>\r\n                <section>\r\n                    <div className = \"grid three-column\">\r\n                        {sortedPodcasts.map((podcast)=> (\r\n                            <PodcastCard \r\n                                heading = {podcast.data().name} \r\n                                content = {podcast.data().desc} \r\n                                imgSrc = {podcast.data().img} \r\n                                altText = {podcast.data().name}\r\n                                link = {podcast.data().links.spotify}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PodcastsPage","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\pages\\content.js",["346","347","348","349","350","351"],"import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {firebase} from '../firebase/config'\r\nimport {useCollection} from 'react-firebase-hooks/firestore'\r\n\r\nimport Button from '../components/button'\r\n\r\nconst ContentPage = () => {\r\n\r\n    const [allVideos, videosLoading, videosError] = useCollection()\r\n\r\n    return(\r\n        <div style = {{backgroundColor: 'var(--red)', minHeight:'calc(100vh - 3rem)', width:'100%', display:'inline-block'}}>\r\n            <div class = \"content\">\r\n                <p className = \"small-heading\">COMMUNITY CONTENT</p>\r\n                <h2>\r\n                    Everything Roundnet <br/> for your eyes and ears.\r\n                </h2>\r\n            </div>\r\n            <section>\r\n                <h4>Coming Soon!</h4>\r\n            {/*    <h2 className = \"section-header\">Recent Videos</h2>\r\n                <h4 className = \"section-subheader\">See everything you've missed</h4>\r\n                <div className = \"grid two-column\" style = {{padding:'1rem 0'}}>\r\n                    <iframe style = {{margin:'auto'}} width=\"525\" height=\"295\" src=\"https://www.youtube.com/embed/KAPPdgNZenc\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n                    <iframe style = {{margin:'auto'}} width=\"525\" height=\"295\" src=\"https://www.youtube.com/embed/KAPPdgNZenc\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n                </div>\r\n                <Link to = \"/videos\" className = \"link\">\r\n                    <Button size = \"large\" color = \"red\" label = \"More Videos\" styles = {{margin:'1rem'}}></Button>\r\n                </Link>\r\n            </section>\r\n            <section>\r\n                <h2 className = \"section-header\">Recent Podcasts</h2>\r\n                <h4 className = \"section-subheader\">Catch up on your favorite roundnet podcasts</h4>\r\n                <Link to = \"/podcasts\" className = \"link\">\r\n                    <div className = \"grid three-column\" style = {{padding:'1rem 0'}}>\r\n                        <iframe style ={{margin:'auto'}} src=\"https://open.spotify.com/embed-podcast/show/0A1vQ9W7EsrwjM0YmZB2tA\" width=\"90%\" height=\"232\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\r\n                        <iframe style ={{margin:'auto'}} src=\"https://open.spotify.com/embed-podcast/show/0A1vQ9W7EsrwjM0YmZB2tA\" width=\"90%\" height=\"232\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\r\n                        <iframe style ={{margin:'auto'}} src=\"https://open.spotify.com/embed-podcast/show/0A1vQ9W7EsrwjM0YmZB2tA\" width=\"90%\" height=\"232\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\r\n                    </div>\r\n                    <Button size = \"large\" color = \"red\" label = \"More Podcasts\" styles = {{margin:'1rem'}} ></Button>\r\n                </Link>*/}\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContentPage;","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\pages\\account-dashboard.js",["352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371"],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\pages\\sign-in.js",["372","373","374","375","376","377"],"import React, {useState, useEffect} from 'react';\r\nimport {Route, Link, useHistory} from 'react-router-dom'\r\nimport Button from '../components/button'\r\n\r\nimport {firebase} from '../firebase/config'\r\n\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nconst SignInPage = () => {\r\n\r\n    const auth = firebase.auth();\r\n    const db = firebase.firestore();\r\n    let history = useHistory();\r\n\r\n    const logIn = () =>{\r\n        auth.signInWithEmailAndPassword(email,password).then((res) => {\r\n            history.push('/')\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n            setErrMsg(err.code.split('/')[1])\r\n        })\r\n    }\r\n\r\n    const createAccount = () =>{\r\n\r\n\r\n\r\n        auth.createUserWithEmailAndPassword(email, password).then((res) => {\r\n            db.collection('users').doc(res.user.uid).set({email, organizations: [], tournaments: []}).then(() => {\r\n                history.push('/')\r\n            })\r\n        }\r\n        )\r\n        .catch((err) => {\r\n            setErrMsg(err.code.split('/')[1])\r\n        })\r\n\r\n\r\n\r\n        console.log(auth.currentUser)\r\n    }\r\n\r\n    const displayErr = (err) => {\r\n        switch(err) {\r\n            case \"email-already-in-use\":\r\n                return <p className = \"err-msg\">*Email already in use. <Link to = \"/sign-in\" className = \"link\" style = {{textDecoration: 'underline'}}>Sign in?</Link></p>\r\n            case \"invalid-email\":\r\n                return <p className = \"err-msg\">*Invalid email.</p>\r\n            case \"wrong-password\":\r\n                return <p className = \"err-msg\">*Incorrect password</p>\r\n            case \"user-not-found\":\r\n                return <p className = \"err-msg\">*No account with this email. <Link to = \"/sign-in\" className = \"link\" style = {{textDecoration: 'underline'}}>Sign up?</Link></p>\r\n        }\r\n        if(err == \"email-already-in-use\"){\r\n        }\r\n        if(err == \"invalid-email\"){\r\n        }\r\n        if(err == \"wrong-password\"){\r\n        }\r\n    }\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [errMsg, setErrMsg] = useState(\"\")\r\n\r\n    return (\r\n        <div style = {{minHeight: \"calc(100vh - 3rem)\", backgroundColor:'var(--light-gray)', display:'flex'}}>\r\n            <div className = \"login-container\">\r\n                <Route exact path = \"/sign-in\">\r\n                    <h3 style = {{marginBottom: '2rem'}}>Welcome to Spikehub</h3>\r\n                    <Link to = \"/sign-in/login\" className = \"link\">\r\n                        <Button size = 'medium' color = 'red' label = 'Login' styles = {{width:'100%'}} onClick = {() => setErrMsg(\"\")}></Button>\r\n                    </Link>\r\n                    <p style = {{margin: '.5rem auto'}}>or</p>\r\n                    <Link to = \"/sign-in/signup\" className = \"link\">\r\n                        <Button size = 'medium' color = 'red' label = 'Sign Up' styles = {{width:'100%'}} onClick = {() => setErrMsg(\"\")}></Button>\r\n                    </Link>\r\n                </Route>\r\n                        \r\n                <Route path = \"/sign-in/login\">\r\n                    <h4 style = {{marginTop:'0px', marginBottom:'1.5rem'}}>Welcome Back!</h4>\r\n                    <div className = 'login-input-pair'>\r\n                        <label className = \"form-label\">email</label>\r\n                        <input className = \"form-input\" placeholder = \"\" id = \"user\" value = {email} onChange = {(e)=>setEmail(e.target.value)}></input>\r\n                    </div>\r\n                    <div className = 'login-input-pair'>\r\n                        <label className = \"form-label\">password</label>\r\n                        <input className = \"form-input\" placeholder = \"\" id = \"pass\" type = \"password\" value = {password} onChange = {(e)=>setPassword(e.target.value)}></input>\r\n                        <Button size = 'medium' color = 'red' label = 'Login' styles = {{width:'100%'}} onClick = {logIn}></Button>\r\n                        {displayErr(errMsg)}\r\n                    </div>\r\n                </Route>\r\n                <Route path = \"/sign-in/signup\">\r\n                    <h4 style = {{marginTop:'0px', marginBottom:'1.5rem'}}>Register for Spikehub</h4>\r\n                    <div className = 'login-input-pair'>\r\n                        <label className = \"form-label\">email</label>\r\n                        <input className = \"form-input\" placeholder = \"\" id = \"user\" value = {email} onChange = {(e)=>setEmail(e.target.value)}></input>\r\n                    </div>\r\n                    <div className = 'login-input-pair'>\r\n                        <label className = \"form-label\">password</label>\r\n                        <input className = \"form-input\" placeholder = \"\" id = \"pass\" type = \"password\" value = {password} onChange = {(e)=>setPassword(e.target.value)}></input>\r\n                        <Button size = 'medium' color = 'red' label = 'Create Account' styles = {{width:'100%'}} onClick = {createAccount}></Button>\r\n                        {displayErr(errMsg)}\r\n                    </div>\r\n                </Route>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignInPage","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\pages\\admin.js",["378","379","380","381","382","383","384","385"],"import React, {useState, useEffect} from 'react';\r\nimport Button from '../components/button'\r\n\r\nimport {firebase} from '../firebase/config'\r\nimport {useCollection} from 'react-firebase-hooks/firestore'\r\n\r\nimport axios from 'axios'\r\n\r\nconst AdminPage = () => {\r\n    \r\n    const db = firebase.firestore();\r\n\r\n    const [canAddTournament,setCanAddTournament] = useState(false)\r\n    const [canAddVideo,setCanAddVideo] = useState(false)\r\n    const [tournamentPass, setTournamentPass] = useState(\"\")\r\n    const [contentPass, setContentPass] = useState(\"\")\r\n\r\n    const [tournamentFormOpen, setTournamentFormOpen] = useState(false)\r\n\r\n    const tournamentCode = \"hi\";\r\n    const contentCode = \"hello\";\r\n\r\n    useEffect(()=>{\r\n        console.log(tournamentPass)\r\n        if(tournamentPass == tournamentCode){\r\n            setCanAddTournament(true)\r\n        }\r\n    },[tournamentPass])\r\n\r\n    useEffect(() => {\r\n        console.log(contentPass)\r\n        if(contentPass == contentCode){\r\n            setCanAddVideo(true)\r\n        }\r\n    },[contentPass])\r\n\r\n    const submitTournament = (e) =>{\r\n        e.preventDefault();\r\n        const tournament = {}\r\n        const form = e.currentTarget.parentNode\r\n\r\n        Array.from(form.children).forEach((node)=>{\r\n            if(node.nodeName == \"INPUT\"){\r\n                let value = null\r\n                if(node.id == \"date\" || node.id == \"regEndDate\"){\r\n                    value = new Date(node.value)\r\n                } \r\n                else if(node.id == \"img\"){\r\n                    value = node.files[0]\r\n                }\r\n                else{\r\n                    value = node.value\r\n                }\r\n\r\n                tournament[node.id] = value\r\n            }\r\n        })\r\n\r\n        const file = tournament.img\r\n        const formData = new FormData()\r\n        formData.append(\"file\",file)\r\n        formData.append(\"upload_preset\", \"spike_hub_tournament\")\r\n        axios({\r\n            url: \"https://api.cloudinary.com/v1_1/dicfhqxoo/upload\",\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            },\r\n            data: formData\r\n        }).then((res) => {\r\n            tournament.img = res.data.secure_url;\r\n            tournament.bracketLink = null;\r\n            tournament.liveLink = null;\r\n            tournament.numTeams = null;\r\n            tournament.results = null;\r\n            tournament.freeAgents = [];\r\n            tournament.slug = tournament.name.replace(\" \",\"-\").toLowerCase();\r\n            db.collection('tournaments').doc(tournament.slug).set(tournament)\r\n\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div style = {{minHeight: \"calc(100vh - 3rem)\", backgroundColor:'var(--light-gray)', padding:'3rem 0'}}>\r\n            <section style = {{marginTop: \"0\"}}>\r\n                <h3 style = {{marginTop: '1rem'}}>Tournament Host Dashboard</h3>\r\n                {!canAddTournament ? (<>\r\n                <h4 style = {{marginTop: '1rem'}}>Please input the tournament host password</h4>\r\n                <input \r\n                    placeholder = \"Enter Pass\" \r\n                    className = \"search\" \r\n                    value = {tournamentPass}\r\n                    onChange = {(e) => setTournamentPass(e.target.value)}\r\n                    style = {{display:'block', margin: 'auto', marginBottom: '2rem'}}\r\n                ></input>\r\n                </>)\r\n                :\r\n                (<>\r\n                    <h4 style = {{marginTop: '1rem'}}>Welcome! Click the button below to add a tournament</h4>\r\n                    {!tournamentFormOpen ? \r\n                    (<div style = {{margin: '1rem auto'}}>\r\n                        <Button size = \"large\" color = \"red\" label = \"Add A Tournament\" styles = {{margin:'0 1rem'}} onClick = {()=> setTournamentFormOpen(true)}></Button>\r\n                    </div>)\r\n                    :\r\n                    (<form>\r\n                        <label className = \"form-label\">Tournament Name</label>\r\n                        <input className = \"form-input\" placeholder = \"\" id = \"name\"></input>\r\n                        <label className = \"form-label\">Host</label>\r\n                        <input className = \"form-input\" placeholder = \"Host or organization name\" id = \"host\"></input>\r\n                        <label className = \"form-label\">Location</label>\r\n                        <input className = \"form-input\" placeholder = \"City, ST\" id = \"location\"></input>\r\n                        <label className = \"form-label\">Divisions</label>\r\n                        <input className = \"form-input\" placeholder = \"Comma-separated list\" id = \"divisions\"></input>\r\n                        <label className = \"form-label\">Date</label>\r\n                        <input className = \"form-input\" type = \"date\" id = \"date\"></input>\r\n                        <label className = \"form-label\">Registration End Date</label>\r\n                        <input className = \"form-input\" type = \"date\" id = \"regEndDate\"></input>\r\n                        <label className = \"form-label\">Registration Link</label>\r\n                        <input className = \"form-input\" placeholder = \"Link to registration form\" id = \"link\"></input>\r\n                        <label className = \"form-label\">Short Description</label>\r\n                        <input className = \"form-input\" placeholder = \"Blurb about tournament\" id = \"desc\"></input>\r\n                        <label className = \"form-label\">Picture</label>\r\n                        <input className = \"form-input\" type = \"file\" style = {{backgroundColor:'white'}} id = \"img\"></input>\r\n                        <Button size = \"medium\" color = \"red\" label = \"Submit\" styles = {{width: 'fit-content'}} onClick = {submitTournament}></Button>\r\n                    </form>)}\r\n                </>)\r\n                }          \r\n            </section>\r\n\r\n            <section style = {{marginBottom:'0'}}>\r\n                <h3 style = {{marginTop: '1rem'}}>Content Creator Dashboard</h3>\r\n                {!canAddVideo ? (<>\r\n                <h4 style = {{marginTop:'1rem'}}>COMING SOON!</h4>\r\n                {/*<input \r\n                    placeholder = \"Enter Pass\" \r\n                    className = \"search\" \r\n                    value = {contentPass}\r\n                    onChange = {(e) => setContentPass(e.target.value)}\r\n                    style = {{display:'block', margin: 'auto', marginBottom: '2rem'}}\r\n                ></input>*/}\r\n                </>)\r\n                :\r\n                (<div style = {{margin: '1rem auto'}}>\r\n                    <h4 style = {{marginTop: '1rem'}}>Welcome! Click one of the buttons below to add content!</h4>\r\n                    <Button size = \"large\" color = \"red\" label = \"Add A Video\" styles = {{margin:'0 1rem'}}></Button>\r\n                    <Button size = \"large\" color = \"red\" label = \"Add A Podcast\" styles = {{margin:'0 1rem'}}></Button>\r\n                </div>)\r\n                }\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminPage;","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\components\\header.js",["386","387","388"],"import React, {useEffect, useState} from 'react'\r\nimport {Link, useRouteMatch} from 'react-router-dom'\r\n\r\nimport {firebase} from '../firebase/config'\r\n\r\nconst Header = ({mainPath, user}) => {\r\n\r\n    const db = firebase.firestore()\r\n\r\n    const [img, setImg] = useState(null)\r\n\r\n    useEffect(()=>{\r\n        if(user){\r\n            db.collection('users').doc(user.uid).get().then((doc) => {\r\n                setImg(doc.data().img)\r\n            })\r\n\r\n        }\r\n    },[user])\r\n\r\n    return (\r\n        <header>\r\n            <Link to = \"/\" className = \"link\">\r\n                <h1>\r\n                    SPIKEHUB\r\n                </h1>\r\n            </Link>\r\n\r\n            <nav>\r\n                <Link to = \"/tournaments/upcoming\" className = \"link\">\r\n                    <div className = {mainPath === \"tournaments\" ? \"nav-item active\" : \"nav-item\"}>\r\n                        Tournaments\r\n                    </div>\r\n                </Link>\r\n\r\n                <Link to = \"/content\" className = \"link\">\r\n                    <div className = {mainPath === \"content\" ? \"nav-item active\" : \"nav-item\"}>\r\n                        Content\r\n                    </div>\r\n                </Link>\r\n                {user ?\r\n                <Link to = '/account-dashboard/profile'className = 'link'>\r\n                    <div className = \"nav-item\" style = {{height:'1.5rem', padding:'.75rem 1rem'}}>\r\n                        <img style = {{height:'1.5rem', width:'1.5rem', borderRadius:'50%', backgroundColor:'var(--light-gray)'}} src = {img  ? img : \"https://res.cloudinary.com/dicfhqxoo/image/upload/v1611984880/profilepicperson_hdwfcw.png\"}></img>\r\n                    </div>\r\n                </Link>\r\n                :\r\n                (<Link to = \"/sign-in\" className = \"link\">\r\n                    <div className = \"nav-item\">Sign In</div>\r\n                </Link>)\r\n\r\n                }\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\nexport default Header","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\firebase\\config.js",[],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\components\\footer.js",[],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\utilities\\scrollToTop.js",[],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\components\\display-card.js",[],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\utilities\\formatDate.js",[],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\components\\current-card.js",["389","390"],"import React from 'react';\r\nimport Button from './button'\r\n\r\nconst CurrentCard = ({imgSrc, altText, heading, bracketLink, liveLink}) => {\r\n    return(\r\n        <div className = \"gen-card current-card\">\r\n        <div>\r\n            <img src = {imgSrc || \"https://res.cloudinary.com/dicfhqxoo/image/upload/v1612321575/tournament-icon_ydpdbe.png\"} alt = {altText} width = \"50%\" style = {{paddingBottom:'1rem'}}></img>\r\n            <h3 style = {{marginBottom:'3rem', marginTop:'1.5rem'}}>{heading}</h3>\r\n        </div>\r\n        <div style = {{display:'flex', justifyContent: 'space-around'}}>\r\n            <a href = {bracketLink || null} target = \"_blank\" className = \"link\"><Button size = \"large\" color = \"dark-gray\" label = \"See Bracket\" styles = {{fontSize:'1rem', padding:'.75rem 1.25rem'}} isDisabled = {!bracketLink}></Button></a>\r\n            <a href = {liveLink || null} target = \"_blank\" className = \"link\"><Button size = \"large\" color = \"red\" label = \"Livestream\" styles = {{fontSize: '1rem', padding: '.75rem 1.25rem'}} isDisabled = {!liveLink} ></Button> </a>\r\n        </div>\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default CurrentCard;","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\components\\blog-card.js",[],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\components\\upcoming-card.js",["391"],"import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst UpcomingCard = ({tournamentName, date, img, slug, id}) => {\r\n    return (\r\n        <Link className = \"link upcoming-card\" to = {`/tournament?id=${slug + id}`}>\r\n                <div style = {{backgroundColor:'var(--light-gray)'}}> \r\n                    <img src = {img || \"https://res.cloudinary.com/dicfhqxoo/image/upload/v1612321575/tournament-icon_ydpdbe.png\"} style = {{width:'100%', height:'100%', objectFit: 'cover'}}></img>\r\n                </div>\r\n                <div style = {{padding:'.5rem'}}>\r\n                    <h5>{date}</h5>\r\n                    <h4 className = \"upcoming-card--header\">{tournamentName}</h4>\r\n                </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default UpcomingCard","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\components\\button.js",[],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\utilities\\generateID.js",[],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\components\\search-bar.js",["392"],"import React, {useEffect} from 'react'\r\n\r\nconst SearchBar = ({keyword, setKeyword, placeholder}) => {\r\n\r\n\r\n    return (\r\n        <input className = \"search\" value = {keyword} onChange = {(e) => setKeyword(e.target.value)} placeholder = {`Search ${placeholder}`}>\r\n        </input> \r\n    )\r\n}\r\n\r\nexport default SearchBar;","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\components\\free-agent-card.js",["393","394","395"],"import React from 'react';\r\n\r\nimport Button from './button'\r\n\r\nconst FreeAgentCard = ({data, user, deleteSelf}) => {\r\n\r\n    const {name, img, division, description, email, phone, rpr, creatorId} = data\r\n\r\n    return(\r\n        <div className = \"free-agent-card\">\r\n            <img src = {img || \"https://res.cloudinary.com/dicfhqxoo/image/upload/v1611984880/profilepicperson_hdwfcw.png\"} style = {{width: '4rem', height: '4rem', borderRadius: \"50%\"}}></img>\r\n            <div style = {{padding:'0 1rem'}}>\r\n                <h3 style = {{fontSize: '1rem', lineHeight: '1.25rem', color:'#333'}}>{name} ({rpr})</h3>\r\n                <p style = {{fontSize: '.8rem', margin:\"0px\", color: 'var(--red)', fontWeight: '500'}}>{division}</p>\r\n                <p style = {{margin:\".15rem 0\", fontSize:'.5rem'}}>{email}</p>\r\n                <p style = {{margin:\".15rem 0\", fontSize:'.5rem'}}>{phone}</p>\r\n            </div>\r\n            {user && user.uid == creatorId && <Button size = \"small\" color = \"red\" label = \"X\" styles = {{height:'fit-content', margin:'auto'}} onClick = {deleteSelf}></Button>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FreeAgentCard;","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\components\\tag.js",[],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\components\\podcast-card.js",[],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\components\\edit-org-card.js",["396"],"import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst OrgCard = ({orgName, img, id}) => {\r\n\r\n    console.log(orgName)\r\n\r\n    return (\r\n        <Link className = \"link upcoming-card\" to = {`/account-dashboard/organizations/edit?id=${id}`}>\r\n                <div style = {{backgroundColor:'var(--light-gray)'}}> \r\n                    <img src = {img || \"https://res.cloudinary.com/dicfhqxoo/image/upload/v1612321575/tournament-icon_ydpdbe.png\"} style = {{width:'100%', height:'100%', objectFit: 'cover'}}></img>\r\n                </div>\r\n                <div style = {{padding:'.5rem'}}>\r\n                    <h4 className = \"upcoming-card--header\">{orgName}</h4>\r\n                </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default OrgCard","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\components\\edit-tournament-card.js",["397"],"import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst TournamentCard = ({tournamentName, date, img, slug, id}) => {\r\n    return (\r\n        <Link className = \"link upcoming-card\" to = {`/account-dashboard/tournaments/edit?id=${slug + id}`}>\r\n                <div style = {{backgroundColor:'var(--light-gray)'}}> \r\n                    <img src = {img || \"https://res.cloudinary.com/dicfhqxoo/image/upload/v1612321575/tournament-icon_ydpdbe.png\"} style = {{width:'100%', height:'100%', objectFit: 'cover'}}></img>\r\n                </div>\r\n                <div style = {{padding:'.5rem'}}>\r\n                    <h5 style = {{marginBottom:'0', fontSize:'.8rem'}}>{new Date(date.seconds * 1000).toDateString()}</h5>\r\n                    <h4 className = \"upcoming-card--header\">{tournamentName}</h4>\r\n                </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default TournamentCard","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\pages\\edit-organization.js",["398","399","400","401","402","403","404","405","406","407","408","409"],"import React, {useState, useEffect} from 'react';\r\nimport {Route, Link, useLocation, useHistory} from 'react-router-dom'\r\n\r\nimport {firebase} from '../firebase/config'\r\nimport {useCollection} from 'react-firebase-hooks/firestore'\r\nimport generateID from '../utilities/generateID'\r\n\r\nimport Button from '../components/button'\r\nimport OrgCard from '../components/edit-org-card'\r\n\r\nimport axios from 'axios'\r\n\r\nconst EditOrganizationPage = ({user}) =>{\r\n\r\n    const history = useHistory();\r\n    const pathname = useLocation().pathname;\r\n    const query = new URLSearchParams(useLocation().search)\r\n    const db = firebase.firestore();\r\n\r\n\r\n\r\n    //organization state\r\n    const [organizations, loading, error] = useCollection(db.collection('organizations'))\r\n    const [orgList, setOrgList] = useState([])\r\n    const [initialOrg, setInitialOrg] = useState({name: '', location: '', link:'', desc:''})\r\n    const [orgData, setOrgData] = useState({})\r\n    const [changesSaved, setChangesSaved] = useState(true)\r\n    const [dataValidationError,setDataValidationError] = useState(null)\r\n    const [deleteConfirm, setDeleteConfirm] = useState(false)\r\n    const [tempImg, setTempImg] = useState(null)\r\n\r\n    useEffect(()=> {\r\n        if(organizations && pathname.includes('/organizations/edit')){\r\n            setInitialOrg(organizations.docs.find((org) => org.data().id == query.get(\"id\")).data())\r\n            setOrgData(organizations.docs.find((org) => org.data().id == query.get(\"id\")).data())\r\n        }\r\n    },[organizations])\r\n\r\n    useEffect(()=>{\r\n        if(user){\r\n            db.collection('users').doc(user.uid).get().then((doc) => {\r\n                setOrgList(doc.data().organizations)\r\n            })\r\n        }\r\n    },[user])\r\n\r\n\r\n    useEffect(() => {\r\n        let changesMade = false;\r\n\r\n        for(let i of Object.keys(orgData)){\r\n            if(orgData[i] != initialOrg[i]){\r\n                changesMade = true\r\n            }\r\n        }\r\n\r\n        if(tempImg){\r\n            changesMade = true;\r\n        }\r\n\r\n        setChangesSaved(!changesMade)\r\n    },[orgData, tempImg])\r\n\r\n    const updateOrg= (key, value)=>{\r\n        setOrgData({...orgData, [key]: value})\r\n    }\r\n\r\n    const addNewOrg = (e)=>{\r\n        e.preventDefault();\r\n\r\n        //can all be done in validateData\r\n        const missingData = validateData()\r\n        if(missingData.length > 0){\r\n            setDataValidationError(`*Make sure your organization has a ${missingData[0]}`)\r\n            return\r\n        }\r\n\r\n        //better way than storing id inside org's data object?\r\n        if(!orgData.id){\r\n            orgData.id = generateID()\r\n        }\r\n        orgData.owner = user.uid\r\n\r\n        const orgRef = db.collection('organizations').doc(orgData.id)\r\n\r\n        console.log('here')\r\n        db.collection('users').doc(user.uid).update({organizations: [...orgList, orgData.id]})\r\n\r\n        if(tempImg){\r\n            const file = tempImg\r\n            const formData = new FormData()\r\n            formData.append(\"file\",file)\r\n            formData.append(\"upload_preset\", \"spike_hub_organization\")\r\n            axios({\r\n                url: \"https://api.cloudinary.com/v1_1/dicfhqxoo/upload\",\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                },\r\n                data: formData\r\n            }).then((res) => {\r\n                orgRef.get().then((snapshot) => {\r\n                    if(snapshot.exists){\r\n                        orgRef.update({...orgData,img: res.data.secure_url})\r\n                    }\r\n                    else{\r\n                        orgRef.set({...orgData,img: res.data.secure_url})\r\n                    }\r\n                })\r\n                .then(()=>history.push(\"/account-dashboard/organizations\"))\r\n            })\r\n        }\r\n        else{\r\n            orgRef.get().then((snapshot) => {\r\n                if(snapshot.exists){\r\n                    orgRef.update(orgData)\r\n                }\r\n                else{\r\n                    orgRef.set(orgData)\r\n                }\r\n            })\r\n            .then(() => history.push(\"/account-dashboard/organizations\"))\r\n        }\r\n    }\r\n\r\n    const deleteOrg = () => {\r\n        db.collection(\"organizations\").doc(orgData.id).delete()\r\n        .then(() => db.collection('users').doc(user.uid).update({organizations: orgList.filter((orgID) => !(orgID == orgData.id))}))\r\n        .then(history.push(\"/account-dashboard/organizations\"))\r\n\r\n    }\r\n\r\n    const validateData = () => {\r\n        const missingData = []\r\n        \r\n        if(!orgData.name){\r\n            missingData.push(\"name\")\r\n        }\r\n        return missingData\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <> \r\n\r\n                <div className = \"underlined\" style = {{display:'flex', justifyContent: 'space-between', position:'relative'}}>\r\n                    <h3 className = \"dash-header\">{organizations ? (orgData.id ? initialOrg.name : \"New Organization\"):null}</h3>\r\n                </div>\r\n                <input type = 'file' id = \"img\" accept = 'image/*' onChange = {(e)=> {setTempImg(e.target.files[0])}} style = {{marginTop:'3rem'}}></input>\r\n                <img src ={tempImg ? URL.createObjectURL(tempImg) : orgData && orgData.img ? orgData.img : \"https://res.cloudinary.com/dicfhqxoo/image/upload/v1612321575/tournament-icon_ydpdbe.png\" } style = {{width:'10rem', height:'10rem', display:'block', marginTop:'1rem'}} alt = \"Organization Photo Here\"></img>\r\n\r\n                <div className = \"dash-input-grid\" style = {{marginTop:'3rem'}}>\r\n                    <div className = \"input-container\">\r\n                        <label className = \"dash-label\">Organization Name</label>\r\n                        <input className = \"dash-input\" placeholder = \"\" id = \"name\" value = {orgData.name} onChange = {(e) => updateOrg(e.target.id, e.target.value)}></input>\r\n                    </div>\r\n                    <div className = \"input-container\">\r\n                        <label className = \"dash-label\">Location</label>\r\n                        <input className = \"dash-input\" placeholder = \"\" id = \"location\"  value = {orgData.location} onChange = {(e) => updateOrg(e.target.id, e.target.value)}></input>\r\n                    </div>\r\n                    <div className = \"input-container wide\">\r\n                        <label className = \"dash-label\">Website Link</label>\r\n                        <input className = \"dash-input\" placeholder = \"\" id = \"link\" value = {orgData.link} onChange = {(e) => updateOrg(e.target.id, e.target.value)}></input>\r\n                    </div>\r\n                    <div className = \"input-container wide\">\r\n                        <label className = \"dash-label\">Short Description</label>\r\n                        <input className = \"dash-input\" placeholder = \"\" id = \"desc\" value = {orgData.desc} onChange = {(e) => updateOrg(e.target.id, e.target.value)}></input>\r\n                    </div>\r\n                </div>\r\n\r\n                <div style = {{display:'flex', justifyContent:'space-between', width:'100%'}}>\r\n                    <div>\r\n                        <Link className = \"link\" to= \"/account-dashboard/organizations\">\r\n                            <Button size = \"medium\" color = \"dark-gray\" label = \"Cancel\" styles = {{width: 'fit-content', marginTop:'1rem', marginRight:'1rem'}} ></Button>\r\n                        </Link>\r\n                        <Button size = \"medium\" color = \"red\" label = {orgData.id ? \"Save Organization\":\"Add Organization\"} styles = {{width: 'fit-content', marginTop:'1rem'}} onClick = {(e) => addNewOrg(e)} isDisabled = {changesSaved}></Button> \r\n                    </div>\r\n                    {Object.keys(initialOrg).length > 0 && <Button size = \"medium\" color = \"red\" label = {deleteConfirm ? \"Confirm Delete\":\"Delete\"} styles = {{width: 'fit-content', marginTop:'1rem'}} onClick = {deleteConfirm ? deleteOrg : () => setDeleteConfirm(true)}></Button>}\r\n                </div>\r\n\r\n                {dataValidationError && <p style = {{fontSize:'.8rem'}}>{dataValidationError}</p>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditOrganizationPage\r\n","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\pages\\edit-tournament.js",["410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440"],"import React, {useState, useEffect} from 'react';\r\nimport {Route, Link, useLocation, useHistory} from 'react-router-dom'\r\n\r\nimport {firebase} from '../firebase/config'\r\nimport {useCollection} from 'react-firebase-hooks/firestore'\r\nimport generateID from '../utilities/generateID'\r\n\r\nimport Button from '../components/button'\r\nimport OrgCard from '../components/edit-org-card'\r\nimport SelectedItem from '../components/selected-item'\r\n\r\nimport axios from 'axios'\r\nimport areEqual from '../utilities/areEqual';\r\n\r\nconst EditTournamentPage = ({user}) =>{\r\n\r\n    const history = useHistory();\r\n    const pathname = useLocation().pathname;\r\n    const query = new URLSearchParams(useLocation().search)\r\n    const db = firebase.firestore();\r\n\r\n    const [userData, setUserData] = useState({})\r\n\r\n    const [organizations, oLoading, oError] = useCollection(db.collection('organizations'))\r\n\r\n    //tournament state\r\n    const [tournaments, tLoading, tError] = useCollection(db.collection('tournaments'))\r\n    const [tournamentList, setTournamentList] = useState([])\r\n    const [initialTournament, setInitialTournament] = useState({})\r\n    const [tournamentData, setTournamentData] = useState({})\r\n    const [changesSaved, setChangesSaved] = useState(true)\r\n\r\n    const [tempImg, setTempImg] = useState(null)\r\n    const [tempDivision, setTempDivision] = useState(\"\")\r\n    const [tempResults, setTempResults] = useState({})\r\n    const [schedule, setSchedule] = useState([])\r\n    const [results, setResults] = useState({})\r\n    const [prizes, setPrizes] = useState({})\r\n\r\n    const [deleteConfirm, setDeleteConfirm] = useState(false)\r\n    const [dataValidationError, setDataValidationError] = useState(\"\")\r\n\r\n\r\n    useEffect(()=> {\r\n        if(tournaments && pathname.includes('/tournaments/edit')){\r\n\r\n            //in the form of [...slug, id] (slug in multiple parts if \"_\" in it)\r\n            const slugIdArray = query.get('id').split(\"_\");\r\n            \r\n            const id = `_${slugIdArray[slugIdArray.length-1]}`\r\n            const slug = slugIdArray.slice(0,slugIdArray.length-1).join(\"_\")\r\n\r\n            const data = tournaments.docs.find((tournament) => tournament.data().id == id).data()\r\n\r\n            console.log(tournaments.docs)\r\n\r\n            setInitialTournament({...data, date: new Date(data.date.seconds*1000).toISOString().slice(0,10), regEndDate: new Date(data.regEndDate.seconds*1000).toISOString().slice(0,10), prizes: JSON.parse(JSON.stringify(data.prizes)), results: JSON.parse(JSON.stringify(data.results))})\r\n            setTournamentData({...data, date: new Date(data.date.seconds*1000).toISOString().slice(0,10), regEndDate: new Date(data.regEndDate.seconds*1000).toISOString().slice(0,10)})\r\n            if(data.schedule){\r\n                setSchedule(data.schedule)\r\n            }\r\n        }\r\n    },[tournaments])\r\n\r\n    useEffect(()=>{\r\n        if(user){\r\n            db.collection('users').doc(user.uid).get().then((doc) => {\r\n                setTournamentList(doc.data().tournaments)\r\n                setUserData(doc.data())\r\n            })\r\n        }\r\n    },[user])\r\n\r\n    useEffect(() => {\r\n\r\n        let tempPrizes = tournamentData.prizes\r\n        \r\n        if(tournamentData.divisions && tournamentData.prizes){\r\n            if(!areEqual(tournamentData.divisions.sort(), Object.keys(tournamentData.prizes).sort())){\r\n                tournamentData.divisions.forEach((division, index) => {\r\n                    if(!tournamentData.prizes[division]){\r\n                        tempPrizes[division] = [\"\",\"\",\"\"];\r\n                    }\r\n                })\r\n                Object.keys(tournamentData.prizes).forEach((division, index) => {\r\n                    if(!tournamentData.divisions.find((elt) => elt == division)){\r\n                        delete tempPrizes[division]\r\n                    }\r\n                })\r\n                updateTournament(\"prizes\", tempPrizes)\r\n            }\r\n        }\r\n\r\n\r\n        if(tournamentData.divisions && tournamentData.results){\r\n            if(!areEqual(tournamentData.divisions.sort(), Object.keys(tournamentData.results).sort())){\r\n                tournamentData.divisions.forEach((division, index) => {\r\n                    if(!tournamentData.results[division]){\r\n                        tempResults[division] = {1:[\"\",\"\",\"\"],2:[\"\",\"\",\"\"],3:[\"\",\"\",\"\"]}\r\n                    }\r\n                })\r\n                Object.keys(tournamentData.results).forEach((division, index) => {\r\n                    if(!tournamentData.divisions.find((elt) => elt == division)){\r\n                        delete tempResults[division]\r\n                    }\r\n                })\r\n                updateTournament(\"results\", tempResults)\r\n            }\r\n        }\r\n\r\n        if(tournamentData.divisions && !tournamentData.prizes){\r\n            let emptyPrizes = {}\r\n            tournamentData.divisions.forEach((division) => {\r\n                emptyPrizes[division] = [\"\",\"\",\"\"]\r\n            })\r\n            updateTournament(\"prizes\", emptyPrizes)\r\n        }\r\n\r\n        if(tournamentData.divisions && !tournamentData.results){\r\n            let emptyResults = {}\r\n            tournamentData.divisions.forEach((division) => {\r\n                emptyResults[division] = {1:[\"\",\"\",\"\"],2:[\"\",\"\",\"\"],3:[\"\",\"\",\"\"]}\r\n            })\r\n            updateTournament(\"results\", emptyResults)\r\n        }\r\n\r\n        const changesMade = !areEqual(tournamentData, initialTournament) || tempImg\r\n\r\n        setChangesSaved(!changesMade)\r\n    },[tournamentData, tempImg])\r\n\r\n\r\n    useEffect(() => {\r\n        if(tournamentData && schedule){\r\n            setTournamentData({\r\n                ...tournamentData, \r\n                schedule: schedule.filter((val)=> !areEqual(val, {time:'', event:''}))\r\n            })\r\n        }\r\n    }, [schedule])\r\n\r\n    const updateTournament = (key, value)=>{\r\n\r\n        let val = value;\r\n\r\n        console.log('here')\r\n\r\n        if(key == \"host\"){\r\n            if(value == user.uid){\r\n                val = {type: \"user\", id: value}\r\n            }\r\n            else{\r\n                val = {type: \"organization\", id: value}\r\n            }\r\n        }\r\n        // else if(key == \"date\" || key == \"regEndDate\"){\r\n        //     val = new Date(value + \"T00:00:00\")\r\n        // }\r\n        console.log(val)\r\n\r\n        setTournamentData({...tournamentData, [key]: val})\r\n    }\r\n\r\n\r\n    const addDivision = () => {\r\n\r\n        if(tempDivision == \"\" || (tournamentData.divisions && tournamentData.divisions.find((elt) => elt == tempDivision))){\r\n            return\r\n        }\r\n\r\n        let tempDivisions = []\r\n\r\n        if(tournamentData.divisions){\r\n            tempDivisions = [...tournamentData.divisions];\r\n        }\r\n        tempDivisions.push(tempDivision)\r\n\r\n        updateTournament(\"divisions\", tempDivisions)\r\n        setTempDivision(\"\")\r\n    }\r\n\r\n    const deleteDivision = (division) => {\r\n        let tempDivisions = [...tournamentData.divisions]\r\n        let index = tempDivisions.findIndex((elt) => elt == division)\r\n        tempDivisions.splice(index, 1)\r\n\r\n        updateTournament(\"divisions\", tempDivisions)\r\n    }\r\n\r\n    const updateSchedule = (index, time, event) => {\r\n        let tempSched = [...schedule];\r\n        tempSched[index] = {time, event}\r\n\r\n        setSchedule(tempSched)\r\n    }\r\n\r\n    const updatePrizes = (key, index, value) => {\r\n        console.log(initialTournament.prizes) \r\n        console.log(tournamentData.prizes)\r\n        let tempPrizes = {...tournamentData.prizes};\r\n        tempPrizes[key][index] = value;\r\n       updateTournament(\"prizes\", tempPrizes)\r\n    }\r\n\r\n    const updateResults= (key, placement, index, value) => {\r\n        console.log(\"tournament data:\")\r\n        console.log(tournamentData.results)\r\n        console.log(initialTournament.results)\r\n        let tempResults = {...tournamentData.results};\r\n        tempResults[key][placement][index] = value;\r\n        console.log(tempResults)\r\n       updateTournament(\"results\", tempResults)\r\n    }\r\n\r\n    const addNewTournament = (e)=>{\r\n        e.preventDefault();\r\n\r\n        let missingData = validateData()\r\n        if(missingData.length > 0){\r\n            if(missingData.length >= 2){\r\n                missingData[missingData.length-1] = \"and \" + missingData[missingData.length-1]\r\n                if(missingData.length == 2){\r\n                    setDataValidationError(`*Make sure your tournament has a ${missingData.join(\" \")}`)\r\n                }\r\n                else{\r\n                    setDataValidationError(`*Make sure your tournament has a ${missingData.join(\", \")}`)\r\n                }\r\n                return\r\n            }\r\n            if(missingData[0] == \"at least 1 division\"){\r\n                setDataValidationError(`Make sure your tournament has ${missingData[0]}`)\r\n                return\r\n            }\r\n            setDataValidationError(`Make sure your tournament has a ${missingData[0]}`)\r\n            return\r\n        }\r\n\r\n        tournamentData.date = new Date(tournamentData.date + \"T00:00:00\")\r\n        tournamentData.regEndDate = new Date(tournamentData.regEndDate + \"T00:00:00\")\r\n        tournamentData.slug = tournamentData.name.replaceAll(\" \",\"-\").toLowerCase().replaceAll(\"#\",\"\").replaceAll(\"?\",\"\");\r\n        tournamentData.owner = user.uid\r\n\r\n        if(!tournamentData.host){\r\n            tournamentData.host = {type: 'user', id: user.uid}\r\n        }\r\n\r\n        if(!tournamentData.id){\r\n            tournamentData.id = generateID()\r\n        }\r\n\r\n        const tournamentRef = db.collection('tournaments').doc(tournamentData.id)\r\n\r\n        if(tempImg){\r\n            const file = tempImg\r\n            const formData = new FormData()\r\n            formData.append(\"file\",file)\r\n            formData.append(\"upload_preset\", \"spike_hub_tournament\")\r\n            axios({\r\n                url: \"https://api.cloudinary.com/v1_1/dicfhqxoo/upload\",\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                },\r\n                data: formData\r\n            }).then((res) => {\r\n                tournamentRef.get().then((snapshot) => {\r\n                    if(snapshot.exists){\r\n                        tournamentRef.update({...tournamentData,img: res.data.secure_url})\r\n                    }\r\n                    else{\r\n                        db.collection('users').doc(user.uid).update({tournaments: [...tournamentList, tournamentData.id]})\r\n                        tournamentRef.set({...tournamentData,img: res.data.secure_url})\r\n                    }\r\n                })\r\n                .then(()=>history.push(\"/account-dashboard/tournaments\"))\r\n            })\r\n        }\r\n        else{\r\n            tournamentRef.get().then((snapshot) => {\r\n                if(snapshot.exists){\r\n                    tournamentRef.update(tournamentData)\r\n                }\r\n                else{\r\n                    db.collection('users').doc(user.uid).update({tournaments: [...tournamentList, tournamentData.id]})\r\n                    tournamentRef.set(tournamentData)\r\n                }\r\n            })\r\n            .then(() => history.push(\"/account-dashboard/tournaments\"))\r\n        }\r\n    }\r\n\r\n    const deleteTournament = () => {\r\n        db.collection(\"tournaments\").doc(tournamentData.id).delete()\r\n        .then(() => db.collection('users').doc(user.uid).update({tournaments: tournamentList.filter((tournamentID) => !(tournamentID == tournamentData.id))}))\r\n        .then(history.push(\"/account-dashboard/tournaments\"))\r\n\r\n    }\r\n\r\n    const validateData = () => {\r\n        const missingData = []\r\n        \r\n        if(!tournamentData.name){\r\n            missingData.push(\"name\")\r\n        }\r\n        if(!tournamentData.date || !tournamentData.date.match(/^(19|20)\\d\\d-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$/)){\r\n            missingData.push(\"valid date\")\r\n        }\r\n        if(tournamentData.regEndDate && !tournamentData.regEndDate.match(/^(19|20)\\d\\d-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$/)){\r\n            missingData.push(\"valid registration end date\")\r\n        }\r\n        if(!tournamentData.location){\r\n            missingData.push(\"location\")\r\n        }\r\n        if(!tournamentData.regEndDate){\r\n            missingData.push(\"registration end date\")\r\n        }\r\n        if(!tournamentData.divisions || tournamentData.divisions.length == 0){\r\n            missingData.push(\"at least 1 division\")\r\n        }\r\n\r\n        return missingData\r\n    }\r\n\r\n\r\n    return (\r\n        <> \r\n                <div className = \"underlined\" style = {{display:'flex', justifyContent: 'space-between', position:'relative'}}>\r\n                    <h3 className = \"dash-header\">{tournaments ? (Object.keys(initialTournament).length > 0 ? initialTournament.name : \"New Tournament\") : null}</h3>\r\n                </div>\r\n                \r\n                <input type = 'file' id = \"img\" accept = 'image/*' onChange = {(e)=> {setTempImg(e.target.files[0])}} style = {{marginTop:'3rem'}}></input>\r\n                <img src ={tempImg ? URL.createObjectURL(tempImg) : tournamentData && tournamentData.img ? tournamentData.img : \"https://res.cloudinary.com/dicfhqxoo/image/upload/v1612321575/tournament-icon_ydpdbe.png\" } style = {{width:'10rem', height:'10rem', display:'block', marginTop:'1rem'}} alt = \"Tournament Photo Here\"></img>\r\n                <h3 className = \"dash-subheader\">Basic Info</h3>\r\n                <div className = \"dash-input-grid\">\r\n                    <div className = \"input-container\">\r\n                        <label className = \"dash-label\">Tournament Name</label>\r\n                        <input className = \"dash-input\" placeholder = \"\" id = \"name\" maxlength = \"72\" value = {tournamentData.name} onChange = {(e) => updateTournament(e.target.id, e.target.value)}></input>\r\n                    </div>\r\n                    <div className = \"input-container\">\r\n                        <label className = \"dash-label\">Host</label>\r\n                        <select className = \"dash-input\" id = \"host\"  value = {tournamentData.host && tournamentData.host.id} onChange = {(e) => updateTournament(e.target.id, e.target.value)}>\r\n                            <option value = {user && user.uid}>{userData && userData.fName + \" \" + userData.lName}</option>\r\n                            {organizations && Object.keys(userData).length > 0 && userData.organizations.map((orgID) => {\r\n                                const orgData = organizations.docs.find((org) => org.data().id == orgID).data();\r\n                                return (\r\n                                    <option value = {orgID}>{orgData.name}</option>\r\n                                )\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                    <div className = \"input-container\">\r\n                        <label className = \"dash-label\">Date</label>\r\n                        <input className = \"dash-input\" type = \"date\" placeholder = \"yyyy-mm-dd\" id = \"date\"\r\n                            value = {Object.keys(tournamentData).length > 0 && tournamentData.date && tournamentData.date} \r\n                            onChange = {(e) => {updateTournament(e.target.id, e.target.value);}}>\r\n                        </input>\r\n                    </div>\r\n                    <div className = \"input-container\">\r\n                        <label className = \"dash-label\">Registration End Date</label>\r\n                        <input className = \"dash-input\" type = \"date\" id = \"regEndDate\" \r\n                            value = {Object.keys(tournamentData).length > 0 && tournamentData.regEndDate && tournamentData.regEndDate} \r\n                            onChange = {(e) => updateTournament(e.target.id, e.target.value)}>\r\n                        </input>\r\n                    </div>\r\n                    <div className = \"input-container\">\r\n                        <label className = \"dash-label\">Location</label>\r\n                        <input className = \"dash-input\" placeholder = \"\" id = \"location\" maxlength = \"35\" value = {tournamentData.location} onChange = {(e) => updateTournament(e.target.id, e.target.value)}></input>\r\n                    </div>\r\n                    <div className = \"input-container\">\r\n                        <label className = \"dash-label\">Registration Link</label>\r\n                        <input className = \"dash-input\" placeholder = \"\" id = \"link\" value = {tournamentData.link} onChange = {(e) => updateTournament(e.target.id, e.target.value)}></input>\r\n                    </div>\r\n\r\n                    <div className = \"input-container wide\">\r\n                        <label className = \"dash-label\">Description</label>\r\n                        <textarea className = \"dash-input\" placeholder = \"\" id = \"desc\" maxlength = \"255\" value = {tournamentData.desc} onChange = {(e) => updateTournament(e.target.id, e.target.value)}></textarea>\r\n                    </div>\r\n                    <div className = \"input-container wide\">\r\n                        <label className = \"dash-label\">Divisions</label>\r\n                    </div>\r\n                    <div className = 'input-container'>\r\n                        <input className = \"dash-input\" placeholder = \"Division Name\" id = \"divisions\" maxLength = \"20\" value = {tempDivision} onChange = {(e) => setTempDivision(e.target.value)}></input> \r\n                        {tournamentData.divisions && tournamentData.divisions.map((name) =>(\r\n                            <SelectedItem label = {name} remove = {deleteDivision}></SelectedItem>\r\n                        ))\r\n                        }\r\n                    </div>\r\n                    <div className = \"input-container\">\r\n                        <Button label = \"Add Division\" color = 'dark-gray' size = \"medium\" onClick = {addDivision}></Button>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <h3 className = \"dash-subheader\">Schedule</h3>\r\n                <div className = \"dash-input-grid\">\r\n                    {tournamentData && Object.keys(tournamentData).length > 0 && Object.keys(schedule).length > 0 && (\r\n                        <>\r\n                        <div className = \"input-container skinny\">\r\n                            <label className = \"dash-label\">Time</label>\r\n                        </div>\r\n                        <div className = \"input-container three-fourths\">\r\n                            <label className = \"dash-label\">Event</label>\r\n                        </div>\r\n                        </>\r\n                    )}\r\n\r\n                    {/* using value is a bit confusing*/}\r\n                    {schedule && Object.keys(schedule).length > 0 && schedule.map((elt, index)=> (\r\n                        <>\r\n                        <input className = \"dash-input\" value = {elt.time} maxLength = \"13\" onChange = {(e) => updateSchedule(index, e.target.value, elt.event)}></input>\r\n                        <input className = \"dash-input normal\" value = {elt.event} maxLength = \"50\" onChange = {(e) => updateSchedule(index, elt.time, e.target.value)}></input>\r\n                        <div style = {{display:'flex', alignItems:'center', marginBottom:'1rem'}}>\r\n                            <Button label = \"X\" size = 'small' color = 'red' onClick = {() => setSchedule(schedule.filter((val, i) => index != i))}>x</Button>\r\n                        </div>\r\n                        </>\r\n                    ))}\r\n                    <Button color = 'red' size = \"medium\" label = \"Add Scheduled Event\" styles = {{gridColumn: 'span 3'}} onClick = {() =>setSchedule([...schedule, {time:'', event: ''}])}></Button>\r\n                </div>\r\n                <h3 className = \"dash-subheader\">Prizes</h3>\r\n\r\n                    {tournamentData.prizes && Object.keys(tournamentData.prizes).length >0 ?\r\n                    <div className = \"dash-input-grid\">\r\n                        <div style = {{visibility:'hidden'}}></div>\r\n                        <label className = \"dash-label\">1st</label>\r\n                        <label className = \"dash-label\">2nd</label>\r\n                        <label className = \"dash-label\">3rd</label>\r\n                        {tournamentData.prizes && Object.keys(tournamentData.prizes).length > 0 && Object.keys(tournamentData.prizes).map((elt, index) => (\r\n                            <>\r\n                                <label className = \"dash-label\" style = {{margin:'auto 0', paddingBottom:'1rem'}}>{elt}</label>\r\n                                <input className = \"dash-input skinny\" value = {tournamentData.prizes[elt][0]} onChange = {(e) => updatePrizes(elt, 0, e.target.value)}></input>\r\n                                <input className = \"dash-input skinny\" value = {tournamentData.prizes[elt][1]} onChange = {(e) => updatePrizes(elt, 1, e.target.value)}></input>\r\n                                <input className = \"dash-input skinny\" value = {tournamentData.prizes[elt][2]} onChange = {(e) => updatePrizes(elt, 2, e.target.value)}></input>\r\n                            </>\r\n                        ))}\r\n                    </div>\r\n                    :\r\n                    <p className = \"input-container-wide\">Add divisions to edit prizes!</p>}\r\n\r\n                <h3 className = \"dash-subheader\">Happening-Now Links</h3>\r\n                <div className = \"dash-input-grid\">\r\n                    <div className = \"input-container\">\r\n                            <label className = \"dash-label\" >Bracket Link</label>\r\n                            <input className = \"dash-input\" id = \"bracketLink\" value = {tournamentData.bracketLink}  onChange = {(e) => updateTournament(e.target.id, e.target.value)}></input>\r\n                    </div>\r\n                    <div className = \"input-container\">\r\n                            <label className = \"dash-label\"  >Livestream Link</label>\r\n                            <input className = \"dash-input\" id = \"liveLink\" value = {tournamentData.liveLink} onChange = {(e) => updateTournament(e.target.id, e.target.value)}></input>\r\n                    </div>\r\n                </div>\r\n                <h3 className = \"dash-subheader\">Results</h3>\r\n                <div className = \"dash-input-grid\">\r\n                    <div className = \"input-container\">\r\n                        <label className = \"dash-label\">Number of Teams</label>\r\n                        <input className = \"dash-input\" placeholder = \"\" id = \"numTeams\" maxlength = \"3\" value = {tournamentData.numTeams} onChange = {(e) => updateTournament(e.target.id, e.target.value)}></input>\r\n                    </div>\r\n                </div>\r\n                {tournamentData.results && Object.keys(tournamentData.results).length > 0 ? \r\n\r\n                    <>\r\n                    <div className = \"dash-input-grid\" style = {{marginBottom:'1rem'}}>\r\n                        <div className = \"input-container\">\r\n                                <label className = \"dash-label\">Link to Full Results (e.g. bracket)</label>\r\n                                <input className = \"dash-input\"></input>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/*Assignment of value and onChange can be done programatically?*/}\r\n                    {Object.keys(tournamentData.results).map((elt, index) => (\r\n                    <div className = \"dash-input-grid\"  style = {{marginBottom:'2rem'}}>\r\n                        <label className = \"dash-label\" style = {{fontSize:'1rem', marginBottom:'2rem'}}>{elt} Results</label>\r\n                        <label className = \"dash-label\" style = {{marginTop:'2rem'}}>Team Name</label>\r\n                        <label className = \"dash-label\" style = {{marginTop:'2rem'}}>Player 1</label>\r\n                        <label className = \"dash-label\" style = {{marginTop:'2rem'}}>Player 2</label>\r\n    \r\n                        <label className = 'dash-label' style = {{margin:\"auto 0\", paddingBottom:'1rem'}}>1st Place</label>\r\n                        <input className = \"dash-input skinny\" maxLength = \"30\" value = {tournamentData.results[elt][1][0]} onChange = {(e) => updateResults(elt, 1, 0, e.target.value)}></input>\r\n                        <input className = \"dash-input skinny\" maxLength = \"30\" value = {tournamentData.results[elt][1][1]} onChange = {(e) => updateResults(elt, 1, 1, e.target.value)}></input>\r\n                        <input className = \"dash-input skinny\" maxLength = \"30\" value = {tournamentData.results[elt][1][2]} onChange = {(e) => updateResults(elt, 1, 2, e.target.value)}></input>\r\n    \r\n                        <label className = 'dash-label' style = {{margin:\"auto 0\", paddingBottom:'1rem'}}>2nd Place</label>\r\n                        <input className = \"dash-input skinny\" maxLength = \"30\" value = {tournamentData.results[elt][2][0]} onChange = {(e) => updateResults(elt, 2, 0, e.target.value)}></input>\r\n                        <input className = \"dash-input skinny\" maxLength = \"30\" value = {tournamentData.results[elt][2][1]} onChange = {(e) => updateResults(elt, 2, 1, e.target.value)}></input>\r\n                        <input className = \"dash-input skinny\" maxLength = \"30\" value = {tournamentData.results[elt][2][2]} onChange = {(e) => updateResults(elt, 2, 2, e.target.value)}></input>\r\n    \r\n                        <label className = 'dash-label' style = {{margin:\"auto 0\", paddingBottom:'1rem'}}>3rd Place</label>\r\n                        <input className = \"dash-input skinny\" maxLength = \"30\" value = {tournamentData.results[elt][3][0]} onChange = {(e) => updateResults(elt, 3, 0, e.target.value)}></input>\r\n                        <input className = \"dash-input skinny\" maxLength = \"30\" value = {tournamentData.results[elt][3][1]} onChange = {(e) => updateResults(elt, 3, 1, e.target.value)}></input>\r\n                        <input className = \"dash-input skinny\" maxLength = \"30\" value = {tournamentData.results[elt][3][2]} onChange = {(e) => updateResults(elt, 3, 2, e.target.value)}></input>\r\n                    </div>\r\n                    ))}\r\n                    </>\r\n                :\r\n                <p className = \"input-container-wide\" style = {{marginTop:'0'}}>Add divisions to edit results!</p>\r\n                }\r\n\r\n                <div style = {{display:'flex', justifyContent:'space-between', width:'100%'}}>\r\n                    <div>\r\n                        <Link className = \"link\" to= \"/account-dashboard/tournaments\">\r\n                            <Button size = \"medium\" color = \"dark-gray\" label = \"Cancel\" styles = {{width: 'fit-content', marginTop:'1rem', marginRight:'1rem'}} ></Button>\r\n                        </Link>\r\n                        <Button size = \"medium\" color = \"red\" label = {Object.keys(initialTournament).length > 0 ? \"Save\":\"Add Tournament\"} styles = {{width: 'fit-content', marginTop:'1rem', marginRight:'1rem'}} onClick = {(e) => addNewTournament(e)} isDisabled = {changesSaved}></Button> \r\n\r\n                    </div>\r\n                    {Object.keys(initialTournament).length > 0 && <Button size = \"medium\" color = \"red\" label = {deleteConfirm ? \"Confirm Delete\":\"Delete\"} styles = {{width: 'fit-content', marginTop:'1rem'}} onClick = {deleteConfirm ? deleteTournament : () => setDeleteConfirm(true)}></Button>}\r\n                </div>\r\n                {dataValidationError && <p style = {{fontSize:'.8rem'}}>{dataValidationError}</p>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditTournamentPage","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\components\\selected-item.js",["441"],"import React, {useState} from 'react';\r\n\r\nconst SelectedItem = ({label, remove}) => {\r\n\r\n    return(\r\n        <div className = \"selected-item\">\r\n            <p className = \"selected-item-text\">{label}</p>\r\n            <button className = \"selected-item-remove\"  onClick = {() => remove(label)}>X\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectedItem;","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\utilities\\areEqual.js",["442","443"],"const areEqual = (val1,val2) => {\r\n    \r\n    if(typeof val1 != typeof val2){\r\n        return false;\r\n    }\r\n\r\n    if(val1 === val2){\r\n        return true\r\n    }\r\n\r\n    let equal = true;\r\n\r\n    switch (typeof val1){\r\n        case \"object\": \r\n            if(Array.isArray(val1)){\r\n                val1.forEach((elt,index) =>{\r\n                    if(!areEqual(val2[index], elt)){\r\n                        equal = false;\r\n                    }\r\n                })\r\n                val2.forEach((elt,index) =>{\r\n                    if(!areEqual(val1[index], elt)){\r\n                        equal = false;\r\n                    }\r\n                })\r\n                return equal;\r\n            }\r\n            if (val1 instanceof Date){\r\n                return val1.getTime() == val2.getTime()\r\n            }\r\n            for(let i of Object.keys(val1)){\r\n                if(!areEqual(val1[i], val2[i])){\r\n                    equal = false;\r\n                }\r\n            }\r\n            return equal\r\n        case \"array\":\r\n\r\n            return equal\r\n        \r\n    }\r\n}\r\n\r\nexport default areEqual","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\spikehub-v2\\src\\utilities\\useWindowSize.js",[],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\index.js",[],["444","445"],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\App.js",["446","447","448","449","450"],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\pages\\content.js",["451","452","453","454","455","456"],"import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {firebase} from '../firebase/config'\r\nimport {useCollection} from 'react-firebase-hooks/firestore'\r\n\r\nimport Button from '../components/button'\r\n\r\nconst ContentPage = () => {\r\n\r\n    const [allVideos, videosLoading, videosError] = useCollection()\r\n\r\n    return(\r\n        <div style = {{backgroundColor: 'var(--red)', minHeight:'calc(100vh - 3rem)', width:'100%', display:'inline-block'}}>\r\n            <div class = \"content\">\r\n                <p className = \"small-heading\">COMMUNITY CONTENT</p>\r\n                <h2 className = \"large-heading\">\r\n                    Everything roundnet <br/> for your eyes and ears.\r\n                </h2>\r\n            </div>\r\n            <section>\r\n                <h4>Coming Soon!</h4>\r\n            {/*    <h2 className = \"section-header\">Recent Videos</h2>\r\n                <h4 className = \"section-subheader\">See everything you've missed</h4>\r\n                <div className = \"grid two-column\" style = {{padding:'1rem 0'}}>\r\n                    <iframe style = {{margin:'auto'}} width=\"525\" height=\"295\" src=\"https://www.youtube.com/embed/KAPPdgNZenc\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n                    <iframe style = {{margin:'auto'}} width=\"525\" height=\"295\" src=\"https://www.youtube.com/embed/KAPPdgNZenc\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n                </div>\r\n                <Link to = \"/videos\" className = \"link\">\r\n                    <Button size = \"large\" color = \"red\" label = \"More Videos\" styles = {{margin:'1rem'}}></Button>\r\n                </Link>\r\n            </section>\r\n            <section>\r\n                <h2 className = \"section-header\">Recent Podcasts</h2>\r\n                <h4 className = \"section-subheader\">Catch up on your favorite roundnet podcasts</h4>\r\n                <Link to = \"/podcasts\" className = \"link\">\r\n                    <div className = \"grid three-column\" style = {{padding:'1rem 0'}}>\r\n                        <iframe style ={{margin:'auto'}} src=\"https://open.spotify.com/embed-podcast/show/0A1vQ9W7EsrwjM0YmZB2tA\" width=\"90%\" height=\"232\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\r\n                        <iframe style ={{margin:'auto'}} src=\"https://open.spotify.com/embed-podcast/show/0A1vQ9W7EsrwjM0YmZB2tA\" width=\"90%\" height=\"232\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\r\n                        <iframe style ={{margin:'auto'}} src=\"https://open.spotify.com/embed-podcast/show/0A1vQ9W7EsrwjM0YmZB2tA\" width=\"90%\" height=\"232\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\r\n                    </div>\r\n                    <Button size = \"large\" color = \"red\" label = \"More Podcasts\" styles = {{margin:'1rem'}} ></Button>\r\n                </Link>*/}\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContentPage;","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\pages\\index.js",["457","458","459","460","461","462","463","464"],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\pages\\tournaments.js",["465","466","467","468","469","470","471","472","473","474"],"import React, {useState, useEffect} from 'react'\r\nimport {BrowserRouter as Router, Route, Switch, Link, useRouteMatch} from 'react-router-dom'\r\nimport {firebase} from '../firebase/config'\r\nimport {useCollection} from 'react-firebase-hooks/firestore'\r\n\r\nimport SearchBar from '../components/search-bar'\r\nimport Button from '../components/button'\r\nimport UpcomingCard from '../components/upcoming-card'\r\n\r\nimport tourneyIcon from '../assets/ex-tourney-icon.png'\r\n\r\nimport formatDate from '../utilities/formatDate'\r\nimport useWindowSize from '../utilities/useWindowSize'\r\n\r\nconst TournamentsPage = () => {\r\n\r\n    const db = firebase.firestore()\r\n\r\n    const [currentTab, setCurrentTab] = useState(window.location.pathname.split(\"/\")[2])\r\n    const [tournaments, loadingTournaments , error] = useCollection(db.collection('tournaments'))\r\n    const [upcoming, setUpcoming]= useState([])\r\n    const [past, setPast] = useState([])\r\n    const [keyword, setKeyword] = useState(\"\")\r\n    const [searchBy, setSearchBy] = useState(\"Name\")\r\n\r\n    const windowSize = useWindowSize()\r\n\r\n\r\n    //whenever tournaments or search keyword changes, reset upcoming and past\r\n    useEffect(() => {\r\n        if(tournaments){\r\n            let queriedTournaments = tournaments.docs.sort((a,b) => {\r\n                const dateA = a.data().date.seconds\r\n                const dateB = b.data().date.seconds\r\n                if(dateA > dateB){\r\n                    return 1\r\n                }\r\n                else{\r\n                    return -1\r\n                }\r\n            }).filter((tournament) => {\r\n                switch (searchBy){\r\n                    case \"Name\":\r\n                        return tournament.data().name.toLowerCase().includes(keyword.toLowerCase())\r\n                    case \"Location\":\r\n                        return tournament.data().location.toLowerCase().includes(keyword.toLowerCase())\r\n                    // case \"Host\":\r\n                    //     return db.collection(\"users\").doc(tournament.data().host.id).get().then((doc) => {\r\n                    //             if(doc.exists){\r\n                    //                 console.log(doc.data().fName)\r\n                    //                 const name = doc.data().fName + \" \" + doc.data().lName\r\n                    //                 return name.includes(keyword) \r\n                    //             }\r\n                    //         }\r\n                    //     )\r\n\r\n                }\r\n\r\n\r\n            } )\r\n\r\n            const today = new Date()\r\n            const yesterday = new Date()\r\n            yesterday.setDate(today.getDate() - 1)\r\n\r\n            setUpcoming(queriedTournaments.filter((tournament) => {\r\n                return new Date(tournament.data().date.seconds*1000) > today\r\n            }))\r\n\r\n            setPast(queriedTournaments.filter((tournament) => {\r\n                return new Date(tournament.data().date.seconds*1000) < yesterday\r\n            }))\r\n\r\n        }\r\n    },[tournaments,keyword,searchBy])\r\n\r\n    //whenever the keyword or either list changes, filter the respective list\r\n    // useEffect(() => {\r\n    //     if(currentTab == \"upcoming\" && tournaments){\r\n    //         console.log(tournaments)\r\n    //         setUpcoming(tournaments.docs.filter((tournament)=> tournament.data().name.includes(keyword))\r\n    //     }\r\n    // },[keyword])\r\n\r\n\r\n    return (\r\n        <div style = {{backgroundColor: 'var(--red)', minHeight:'calc(100vh - 3rem)', width:'100%', display:'inline-block'}}>\r\n            <section className = \"connected-header\">\r\n                <div className = \"connected-header-content\">\r\n                    <div className = \"tournaments-heading-container\">\r\n                        <Link to = {\"/tournaments/upcoming\"} className = \"link\" onClick = {() => setCurrentTab(\"upcoming\")}>\r\n                            <h3 className = {`tournaments-heading ${currentTab == \"upcoming\" ? \"selected\" : \"\"}`}>Upcoming Events</h3>\r\n                        </Link>\r\n                        <Link to = {\"/tournaments/past\"} className = \"link\" onClick = {() => setCurrentTab(\"past\")}>\r\n                            <h3 className = {`tournaments-heading ${currentTab == \"past\" ? \"selected\" : \"\"}`}>Past Events</h3>\r\n                        </Link>\r\n                    </div>\r\n                    <div className = \"search-container\">\r\n                        <select className = \"search-toggle\" onChange = {(e) => {setSearchBy(e.target.value)}}>\r\n                            <option value = \"Name\">Name</option>\r\n                            {/*<option value = \"Host\">Host</option>*/}\r\n                            <option value = \"Location\">Location</option>\r\n                        </select>\r\n                        <SearchBar keyword = {keyword} setKeyword = {setKeyword} placeholder = {currentTab.charAt(0).toUpperCase() + currentTab.slice(1) + \" Events\"}/>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n                <Route path = \"/tournaments/upcoming\" >\r\n                <section>\r\n                    {upcoming && upcoming.length > 0 ? \r\n                        <div className = \"grid four-column\" style = {{margin: '1rem', gap:'1rem', width: 'calc(100% - 2rem)'}}>\r\n                                {upcoming && upcoming.map((tournament) => (\r\n                                    <>\r\n                                    <UpcomingCard\r\n                                        img = {tournament.data().img}\r\n                                        tournamentName = {tournament.data().name}\r\n                                        date = {new Date(tournament.data().date.seconds*1000).toDateString()}\r\n                                        slug = {tournament.data().slug}\r\n                                        id = {tournament.data().id}\r\n                                    />\r\n                                        {/*<button onClick = {() => db.collection('tournaments').doc('example-current').set(tournament.data())}> BUTTON</button>*/}\r\n                                    </>\r\n                                ))}\r\n                        </div>\r\n                        :\r\n                        <h4 style = {{margin:'2rem auto'}}>No tournaments found!</h4>\r\n                    }\r\n\r\n                </section>\r\n                </Route>\r\n                <Route path = \"/tournaments/past\">\r\n                    <section style = {{padding:0, width: \"calc(90% + 2rem)\"}}>\r\n                        {past && past.length > 0 ? \r\n                            <table className = \"past-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th className = \"name-col\">{windowSize.width > 550 ? \"Event Name\":\"Past Events\"}</th>\r\n                                        <th className = \"loc-col\">Location</th>\r\n                                        <th className = \"date-col\">Date</th>\r\n                                        <th className = \"teams-col\"># Teams</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {past && past.map((tournament)=>(\r\n                                        <tr>\r\n                                            <td className = \"name-col\">{tournament.data().name}</td>\r\n                                            <td className = \"loc-col\" style = {{whiteSpace:'nowrap'}}>{tournament.data().location}</td>\r\n                                            <td className = \"date-col\" style = {{whiteSpace:'nowrap'}}>{formatDate(new Date(tournament.data().date.seconds*1000))}</td>\r\n                                            <td className = \"teams-col\">{tournament.data().numTeams}</td>\r\n                                            <td>\r\n                                                <Link className = \"link\" to = {`/tournament?id=${tournament.data().slug + tournament.data().id}`}>\r\n                                                    <Button\r\n                                                        size = \"medium\"\r\n                                                        color = 'red'\r\n                                                        label = 'See More'\r\n                                                    />\r\n                                                </Link>\r\n                                            </td>\r\n                                        </tr>   \r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                            :\r\n                            <h4 style = {{padding:'2rem 0', margin:'0 auto'}}>No tournaments found!</h4>\r\n                        }\r\n\r\n                    </section>\r\n                </Route>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default TournamentsPage","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\pages\\podcasts.js",["475","476"],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\pages\\tournament.js",["477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496"],"import React, {useState, useEffect} from 'react'\r\nimport {useLocation} from 'react-router-dom'\r\n\r\nimport Button from '../components/button'\r\nimport FreeAgentCard from '../components/free-agent-card'\r\n\r\nimport tourneyIcon from '../assets/ex-tourney-icon.png'\r\n\r\nimport {firebase} from '../firebase/config'\r\nimport {useDocument} from 'react-firebase-hooks/firestore'\r\nimport axios from 'axios'\r\nimport TournamentsPage from './tournaments'\r\n\r\nimport formatDate from '../utilities/formatDate'\r\nimport generateID from '../utilities/generateID'\r\n\r\nconst useQueryString = () =>{\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\n\r\nconst TournamentPage = ({user}) => {\r\n\r\n    const db = firebase.firestore()\r\n\r\n    //in the form of [...slug, id] (slug in multiple parts if \"_\" in it)\r\n    const slugIdArray = useQueryString().get('id').split(\"_\");\r\n    \r\n    console.log(slugIdArray)\r\n\r\n    const id = `_${slugIdArray[slugIdArray.length-1]}`\r\n    const slug = slugIdArray.slice(0,slugIdArray.length-1).join(\"_\")\r\n\r\n    console.log(id)\r\n\r\n    const [tournament, loading, error] = useDocument(db.doc(`tournaments/${id}`))\r\n\r\n    const [isFreeAgentsOpen, setIsFreeAgentsOpen] = useState(true)\r\n    const [isScheduleOpen, setIsScheduleOpen] = useState(false)\r\n    const [isPrizesOpen, setIsPrizesOpen] = useState(false)\r\n    const [isTeamsOpen, setIsTeamsOpen] = useState(false)\r\n    const [isResultsOpen, setIsResultsOpen] = useState(true)\r\n\r\n    const [userData, setUserData] = useState({})\r\n    const [isOverlayOpen, setIsOverlayOpen] = useState(false)\r\n    const [manualEntry, setManualEntry] = useState(false)\r\n    const [freeAgent, setFreeAgent] = useState({})\r\n    const [profileAlert, setProfileAlert] = useState(false)\r\n\r\n    const [hostName, setHostName] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        if(tournament){\r\n            const hostType = tournament.data().host.type;\r\n            const hostId = tournament.data().host.id;\r\n\r\n\r\n            if(hostType == \"organization\"){\r\n                db.collection(\"organizations\").doc(hostId).get().then((doc) => {\r\n                    setHostName(doc.data().name)\r\n                })\r\n            }\r\n            if(hostType == \"user\"){\r\n                db.collection(\"users\").doc(hostId).get().then((doc) => {\r\n                    setHostName(doc.data().fName + \" \" + doc.data().lName)\r\n                })\r\n            }\r\n\r\n            setFreeAgent({...freeAgent, division: tournament.data().divisions[0]})\r\n        }\r\n    },[tournament])\r\n\r\n    useEffect(()=>{\r\n        if(user){\r\n            db.collection('users').doc(user.uid).get().then((doc) => {\r\n                setUserData(doc.data())\r\n            })\r\n        }\r\n    },[user])\r\n\r\n    const toggleAccordion = (accordionName) => {\r\n        // e.currentTarget.nextElementSibling.classList.toggle('open');\r\n        switch(accordionName) {\r\n            case 'freeAgents':\r\n                setIsFreeAgentsOpen(!isFreeAgentsOpen);\r\n            case 'teams': \r\n                setIsTeamsOpen(!isTeamsOpen);\r\n                return\r\n            case 'results':\r\n                setIsResultsOpen(!isResultsOpen)\r\n                return\r\n            case 'schedule':\r\n                setIsScheduleOpen(!isScheduleOpen)\r\n                return\r\n            case 'prizes':\r\n                setIsPrizesOpen(!isPrizesOpen)\r\n        }\r\n\r\n    }\r\n\r\n    const addFreeAgent = (isSelf, e) => {\r\n        e.currentTarget.disabled = true;\r\n        let player = {}\r\n\r\n        if(isSelf){\r\n            if(!userData.fName || !userData.lName || !(userData.email || userData.phone) || !userData.rpr){\r\n                setProfileAlert(true)\r\n                return;\r\n            }\r\n            player = {\r\n                name: userData.fName + \" \" + userData.lName,\r\n                img: userData.img,\r\n                email: userData.email,\r\n                phone: userData.phone,\r\n                rpr: userData.rpr,\r\n                division: freeAgent.division,\r\n                freeAgentId: generateID(),\r\n                creatorId: user.uid\r\n            }\r\n        }\r\n\r\n        else{\r\n            if(user){\r\n                player = {...freeAgent, freeAgentId: generateID(), creatorId: user.uid}\r\n            }else{\r\n                player = freeAgent\r\n            }\r\n        }\r\n\r\n        if(tournament.data().freeAgents){\r\n            db.doc(`tournaments/${id}`).update({freeAgents: [...tournament.data().freeAgents, player]}).then(()=> {setIsOverlayOpen(false); setManualEntry(false)})\r\n        }\r\n        else{\r\n            db.doc(`tournaments/${id}`).update({freeAgents: [player]}).then(()=> {setIsOverlayOpen(false); setManualEntry(false)})\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const deleteFreeAgent = (faID) => {\r\n\r\n        const updatedFreeAgents = tournament.data().freeAgents.filter((obj) => {\r\n            return !(obj.freeAgentId == faID)\r\n        })\r\n\r\n\r\n        db.doc(`tournaments/${id}`).update({freeAgents: updatedFreeAgents}).then(()=> setIsOverlayOpen(false))\r\n    }\r\n\r\n\r\n    return (\r\n        <div style = {{minHeight: \"calc(100vh - 3rem)\", backgroundColor:'var(--light-gray'}}>\r\n            <div className = \"content\" style = {{padding: '2rem 0rem'}}>\r\n                {tournament && console.log(tournament.data())}\r\n                <h2 className = \"tournament-heading\" >{tournament && tournament.data().name}</h2>\r\n                <h4 className = \"tournament-subheading\">{tournament && `Hosted By ${hostName}`}</h4>\r\n            </div>\r\n            <div className = \"content tournament-info-section\">\r\n                <div className = \"tournament-sidebar\">\r\n                    <img src = {tournament && tournament.data().img || \"https://res.cloudinary.com/dicfhqxoo/image/upload/v1612321575/tournament-icon_ydpdbe.png\"} style = {{width: '95%', margin:'0 auto 1.5rem auto'}}></img>\r\n                    <h3>{tournament && tournament.data().location }</h3>\r\n                    <h3 style = {{fontSize:'1.25rem', marginTop:'.5rem'}}>{tournament && formatDate(new Date(tournament.data().date.seconds*1000))}</h3>\r\n                    <p>{tournament && tournament.data().description}</p>\r\n                    {tournament && new Date(tournament.data().date.seconds*1000) > new Date() &&\r\n                    <>\r\n                        {new Date(tournament.data().regEndDate.seconds*1000) > new Date() ? \r\n                        <>\r\n                            {tournament.data().link ? \r\n                            <a href = {tournament && tournament.data().link} className = \"link\" target = \"_blank\"><Button size = \"large\" color = \"red\" label = \"Register\"></Button></a>\r\n                            :\r\n                            <Button size = \"medium\" color = \"red\" label = \"No Registration Link\" onClick = {tournament && tournament.data().link} isDisabled = {true}></Button>                   \r\n                            }\r\n                            <p style = {{fontSize:'.8rem', margin:'.5rem auto 0 auto'}}>Registration ends on <br/><strong>{formatDate(new Date(tournament.data().regEndDate.seconds * 1000))}</strong></p>\r\n                        </>\r\n                        :\r\n                        <Button size = \"medium\" color = \"light-gray\" label = \"Registration Has Ended\" onClick = {tournament && tournament.data().link} isDisabled = {true}></Button>\r\n                        }\r\n                    </>\r\n                    }\r\n                    \r\n                </div>\r\n                <div className = \"tournament-info\">\r\n                    {tournament && new Date(tournament.data().date.seconds*1000) > new Date() ? \r\n                    (<>\r\n                        <button className= \"accordion-header\" onClick = {() => toggleAccordion('freeAgents')}>\r\n                            <div style = {{display:'flex'}}>\r\n                                <h3 className = \"accordion-header-label\">Free Agents</h3>\r\n                                <Button size = \"medium\" color = \"red\" label = \"Add New\" styles = {{margin:'auto'}} onClick = {(e)=>{e.stopPropagation(); setIsOverlayOpen(true)}}></Button>\r\n                            </div>\r\n                            <h3>{isFreeAgentsOpen ? \"-\" : \"+\"}</h3>\r\n                        </button>\r\n                        <div className = {`accordion-content grid two-column ${isFreeAgentsOpen ? \"open\" : \"\"}`} style = {{gap: '1rem', width: 'calc(100% - 2rem)'}}>\r\n                            {tournament && tournament.data().freeAgents && Object.keys(tournament.data().freeAgents).length > 0 ? \r\n                                tournament.data().freeAgents.map((data) => (<FreeAgentCard data = {data} user = {user} deleteSelf = {() => deleteFreeAgent(data.freeAgentId)}></FreeAgentCard>))\r\n                            :\r\n                            <h4 style = {{margin: '0 1rem'}}>No Free Agents Yet!</h4>\r\n                            }\r\n                        </div>\r\n                        <button className= \"accordion-header\" onClick = {() => toggleAccordion('schedule')}>\r\n                            <div style = {{display:'flex'}}>\r\n                                <h3 className = \"accordion-header-label\">Schedule</h3>\r\n                            </div>\r\n                            <h3>{isScheduleOpen ? \"-\" : \"+\"}</h3>\r\n                        </button>\r\n                        <div className = {`accordion-content grid two-column ${isScheduleOpen ? \"open\" : \"\"}`} style = {{gap: '1rem', width: 'calc(100% - 2rem)'}}>\r\n                            {tournament && tournament.data().schedule && tournament.data().schedule.length > 0 ? \r\n                            <div className = \"grid\" style = {{gridTemplateColumns: 'auto 1fr', columnGap: '1rem', margin:'0 1rem'}}>\r\n                                {tournament.data().schedule.map((data) => (<>\r\n                                    <p className = \"schedule-time\">{data.time}</p>\r\n                                    <p className = \"schedule-event\">{data.event}</p>\r\n                                </>))}\r\n                            </div>\r\n                            :\r\n                            <h4 style = {{margin: '0 1rem'}}>Schedule TBD</h4>\r\n                            }\r\n\r\n                        </div>\r\n                        <button className= \"accordion-header\" onClick = {() => toggleAccordion('prizes')}>\r\n                            <div style = {{display:'flex'}}>\r\n                                <h3 className = \"accordion-header-label\">Prizes</h3>\r\n                            </div>\r\n                            <h3>{isPrizesOpen ? \"-\" : \"+\"}</h3>\r\n                        </button>\r\n                        <div className = {`accordion-content grid two-column ${isPrizesOpen ? \"open\" : \"\"}`} style = {{gap: '1rem', width: 'calc(100% - 2rem)'}}>\r\n                            {(tournament && tournament.data().prizes && Object.keys(tournament.data().prizes).length > 0)  ?\r\n                            <div className = \"grid\" style = {{gridTemplateColumns: 'auto auto 1fr', columnGap: '1rem', margin:'0 1rem'}}>\r\n                                {Object.keys(tournament.data().prizes).map((key) => (<>\r\n                                    <p className = \"schedule-time\" style = {{gridRow: 'span 3'}}>{key}</p>\r\n                                    <p className = \"schedule-event\">1st</p>\r\n                                    <p className = \"schedule-event\">{tournament.data().prizes[key][0]}</p>\r\n                                    <p className = \"schedule-event\">2nd</p>\r\n                                    <p className = \"schedule-event\">{tournament.data().prizes[key][1]}</p>\r\n                                    <p className = \"schedule-event\">3rd</p>\r\n                                    <p className = \"schedule-event\">{tournament.data().prizes[key][2]}</p>\r\n                                </>))}\r\n                            </div>   \r\n                            :\r\n                            <h4 style = {{margin:'0 1rem'}}>Prizes TBD</h4>\r\n                            }\r\n                     \r\n                        </div>\r\n                    </>) \r\n                    :\r\n                    (<>\r\n                        {/* <button className= \"accordion-header\" onClick = {() => toggleAccordion('teams')}>\r\n                            <div style = {{display:'flex'}}>\r\n                                <h3 style = {{display:'inline-block', paddingRight: '1rem'}}>Teams</h3>\r\n                                <Button size = \"medium\" color = \"red\" label = \"Add New\" styles = {{margin:'auto'}}></Button>\r\n                            </div>\r\n                            <h3>{isTeamsOpen ? \"-\":\"+\"}</h3>\r\n                        </button>\r\n                        <div className = {`accordion-content ${isTeamsOpen ? \"open\" : \"\"}`}>\r\n                            Hi\r\n                        </div> */}\r\n                        <button className= \"accordion-header\" onClick = {() => toggleAccordion('results')}>\r\n                            <div style = {{display:'flex'}}>\r\n                                <h3 className = \"accordion-header-label\">Results</h3>\r\n                            </div>\r\n                            <h3>{isResultsOpen ? \"-\":\"+\"}</h3>\r\n                        </button>\r\n                        <div className = {`accordion-content ${isResultsOpen ? \"open\" : \"\"}`}>\r\n                            <div className = \"grid\" style = {{gridTemplateColumns: 'auto auto 1fr 1fr 1fr', columnGap: '1rem', margin:'0 1rem'}}>\r\n                                <p style = {{gridColumn:'3'}}>Team Name</p>\r\n                                <p>Player 1</p>\r\n                                <p>Player 2</p>\r\n                                {tournament && tournament.data().results && Object.keys(tournament.data().results).sort().map((division) => (\r\n                                <>\r\n                                    <p className = \"schedule-time line-above\" style = {{gridRow: 'span 3'}}>{division}</p>\r\n                                    {Object.keys(tournament.data().results[division]).map((place, index) => {\r\n                                        const teamArrs = tournament.data().results[division][place] \r\n                                        \r\n                                        return (<>\r\n                                            <p className = \"schedule-time\" style = {{fontWeight:'500'}}>{place == 1 && \"1st\"}{place == 2 && \"2nd\"}{place == 3 && \"3rd\"}</p>\r\n                                            <p className = \"schedule-event\" >{teamArrs[0]}</p>\r\n                                            <p className = \"schedule-event\">{teamArrs[0]}</p>\r\n                                            <p className = \"schedule-event\">{teamArrs[0]}</p>                                            \r\n                                        </>)})\r\n                                        }\r\n                                </>))}\r\n                            </div>\r\n                        </div>\r\n                    </>)}\r\n                </div>\r\n            </div>\r\n            {isOverlayOpen ? \r\n            (<div style = {{width:'100%',height:'100%', position:'fixed', top:0, left:0, backgroundColor: 'rgba(0,0,0,.5)', display:'flex'}}>\r\n                <div style = {{width:'90%', maxWidth:'15rem', backgroundColor:'white', padding:'2rem', margin:'auto', borderRadius:'.5rem'}}>\r\n                    <h3>Add a Free Agent</h3>\r\n                    {user && !manualEntry ? \r\n                    (<>\r\n                        <div style = {{marginTop: '1rem'}}>\r\n                            <label className = \"dash-label\" style = {{width:'100%', textAlign:'left'}}>Choose a division</label>\r\n                            <select className = \"dash-input\" placeholder = \"division\" style = {{marginBottom:'1rem'}} value = {freeAgent.division} onChange = {(e) => setFreeAgent({...freeAgent, division: e.target.value})}>\r\n                                {tournament && tournament.data().divisions.map((div) => (\r\n                                    <option value = {div}>{div}</option>\r\n                                ))}\r\n                            </select>\r\n                            <Button size = \"medium\" color = \"red\" label = \"Add Yourself\" onClick = {(e)=> {e.currentTarget.classList.add(\"loading\"); addFreeAgent(true, e)}} styles = {{marginBottom:'1rem'}}></Button>\r\n                            {profileAlert ? <p style = {{margin:'-.5rem 0 .5rem 0', fontSize: '.7rem'}}>Make sure your profile has enough information!</p>:null}\r\n                            <Button size = \"medium\" color = \"red\" label = \"Enter Player Info\" onClick = {() => setManualEntry(true)} styles = {{marginBottom:'1rem', marginRight:'1rem'}}></Button>\r\n                            <Button size = \"medium\" color = \"dark-gray\" label = \"Cancel\" onClick = {() => {setIsOverlayOpen(false); setProfileAlert(false)}}></Button>\r\n                        </div>\r\n                    </>)\r\n                    :(<>\r\n                        <div style = {{marginTop:'1rem'}}>\r\n                            <label className = \"dash-label\">Name</label>\r\n                            <input className = \"dash-input\" value = {freeAgent.name} onChange = {(e)=> setFreeAgent({...freeAgent, name: e.target.value})}></input>\r\n                            <label className = \"dash-label\">Email</label>\r\n                            <input className = \"dash-input\"  value = {freeAgent.email} onChange = {(e)=> setFreeAgent({...freeAgent, email: e.target.value})}></input>\r\n                            <label className = \"dash-label\">Phone</label>\r\n                            <input className = \"dash-input\"  value = {freeAgent.phone} onChange = {(e)=> setFreeAgent({...freeAgent, phone: e.target.value})}></input>\r\n                            <label className = \"dash-label\">RPR</label>\r\n                            <input className = \"dash-input\"  value = {freeAgent.rpr} onChange = {(e)=> setFreeAgent({...freeAgent, rpr: e.target.value})}></input>\r\n                            <div style = {{textAlign:'right'}}>\r\n                                <Button size = \"medium\" color = \"dark-gray\" label = {user ? \"Back\" : \"Cancel\"} onClick = {() => user ?  setManualEntry(false) : setIsOverlayOpen(false)} styles = {{marginRight:'1rem'}}></Button>\r\n                                <Button size = \"medium\" color = \"red\" label = \"Submit\" onClick = {(e) => {e.currentTarget.classList.add(\"loading\"); addFreeAgent(false, e)}} styles = {{marginBottom:'1rem'}}></Button>\r\n                            </div>\r\n                        </div>\r\n                    </>)}\r\n                </div>\r\n            </div>):\r\n            null\r\n            }\r\n        </div>   \r\n    )\r\n}\r\n\r\nexport default TournamentPage","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\pages\\videos.js",["497","498","499","500","501","502"],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\pages\\admin.js",["503","504","505","506","507","508","509","510"],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\pages\\sign-in.js",["511","512","513","514","515","516"],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\pages\\account-dashboard.js",["517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535"],"import React, {useState, useEffect} from 'react';\r\nimport {Route, Link, useLocation, useHistory} from 'react-router-dom'\r\n\r\n\r\nimport {firebase} from '../firebase/config'\r\nimport {useCollection} from 'react-firebase-hooks/firestore'\r\nimport {useAuthState} from 'react-firebase-hooks/auth'\r\n\r\nimport generateID from '../utilities/generateID'\r\nimport useWindowSize from '../utilities/useWindowSize'\r\nimport areEqual from \"../utilities/areEqual\"\r\n\r\nimport EditTournamentPage from './edit-tournament'\r\nimport EditOrganizationPage from './edit-organization'\r\nimport Button from '../components/button'\r\nimport OrgCard from '../components/edit-org-card'\r\nimport TournamentCard from '../components/edit-tournament-card'\r\n\r\nimport axios from 'axios'\r\nimport { unstable_concurrentAct } from 'react-dom/test-utils';\r\n\r\n//TODO: Break into components for each sub-page\r\n\r\nconst AcctDashPage = ({user}) => {\r\n\r\n    const location = useLocation().pathname\r\n    const history = useHistory()\r\n    const db = firebase.firestore()\r\n    const auth = firebase.auth()\r\n\r\n\r\n    //application state\r\n    const [isSidebarOpen, setIsSidebarOpen] = useState(false)\r\n    const window = useWindowSize()\r\n\r\n    //profile state\r\n    const [initialUser, setInitialUser] = useState({})\r\n    const [userData, setUserData] = useState({})\r\n    const [tempImg, setTempImg] = useState(null)\r\n    const [changesSaved, setChangesSaved] = useState(true)\r\n\r\n    //tournament state\r\n\r\n    const [tournaments, tLoading, tError] = useCollection(db.collection('tournaments'))\r\n    const [organizations, oLoading, oError] = useCollection(db.collection('organizations'))\r\n\r\n    //when profile loads, set temporary local state\r\n    useEffect(()=>{\r\n        if(user){\r\n            db.collection('users').doc(user.uid).get().then((doc) => {\r\n                setInitialUser(doc.data())\r\n                setUserData(doc.data())\r\n            })\r\n        }\r\n    },[user])\r\n\r\n\r\n    useEffect(() => {\r\n        setChangesSaved(areEqual(userData, initialUser))\r\n    },[userData])\r\n\r\n    useEffect(() => {\r\n        if(window.width < 800){\r\n            setIsSidebarOpen(false)\r\n        }\r\n        else{\r\n            if(!isSidebarOpen){\r\n                setIsSidebarOpen(true)\r\n            }\r\n        }\r\n    },[window])\r\n\r\n\r\n    const updateUser = (key, value)=>{\r\n        setUserData({...userData, [key]: value})\r\n    }\r\n\r\n    const submitChanges = () =>{\r\n        user.updateProfile({\r\n            email: userData.email\r\n        })\r\n\r\n        if(tempImg){\r\n            const file = tempImg\r\n            const formData = new FormData()\r\n            formData.append(\"file\",file)\r\n            formData.append(\"upload_preset\", \"spike_hub\")\r\n            axios({\r\n                url: \"https://api.cloudinary.com/v1_1/dicfhqxoo/upload\",\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                },\r\n                data: formData\r\n            }).then((res) => {\r\n    \r\n                db.collection('users').doc(user.uid).update({... userData, img: res.data.secure_url}).then(()=>history.go(0))\r\n            })\r\n        }\r\n\r\n        else{\r\n            console.log(userData.fName)\r\n            db.collection('users').doc(user.uid).update(userData).then(() => history.go(0))\r\n\r\n        }\r\n    }\r\n\r\n    const getTimePeriod = (tournament) => {\r\n\r\n        const tournamentDate = new Date(tournament.data().date.seconds*1000) \r\n        const today = new Date()\r\n        const yesterday = new Date()\r\n        yesterday.setDate(today.getDate() - 1)\r\n\r\n        if(tournamentDate > today){\r\n            return \"upcoming\"\r\n        }\r\n\r\n        else if(tournamentDate < yesterday){\r\n            return \"past\"\r\n        }\r\n\r\n        else {\r\n            return \"current\"\r\n        }\r\n    }\r\n\r\n    const signOut = () => {\r\n        auth.signOut().then(() => history.push('/'))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <nav className = \"sidebar-toggle\">\r\n                <span onClick = {() => setIsSidebarOpen(true)} style = {{cursor:'pointer'}}>☰</span>\r\n            </nav>\r\n            <div style = {{minHeight: \"calc(100vh - 6.5rem)\", display:'flex'}}>\r\n                {isSidebarOpen &&\r\n                    (\r\n                    <>\r\n                    <aside>\r\n                        <div className = \"sidebar-tab main\">Account Dashboard</div>\r\n                        <Link to = \"/account-dashboard/profile\" onClick = {()=> {if(window.width < 800){setIsSidebarOpen(false) }}}>\r\n                            <div className = {`sidebar-tab ${location.includes(\"profile\")? \"active\":\"\"}`}>Profile</div>\r\n                        </Link>\r\n                        <Link to = \"/account-dashboard/tournaments\" onClick = {()=> {if(window.width < 800){setIsSidebarOpen(false) }}}>\r\n                            <div className = {`sidebar-tab ${location.includes(\"tournaments\")? \"active\":\"\"}`}>Tournaments</div>\r\n                        </Link>\r\n                        <Link to = \"/account-dashboard/organizations\" onClick = {()=> {if(window.width < 800){setIsSidebarOpen(false) }}}>\r\n                            <div className = {`sidebar-tab ${location.includes(\"organizations\")? \"active\":\"\"}`}>Organizations</div>\r\n                        </Link>\r\n                        <div className = {`sidebar-tab`} style = {{cursor:'pointer'}} onClick = {signOut}>Sign Out</div>\r\n                    </aside>\r\n                    {window.width < 800 && (\r\n                        <div className = \"clickable-shadow\" onClick = {() => setIsSidebarOpen(false)}></div>\r\n                    )}\r\n                    </>\r\n                    )\r\n                }\r\n                <div className = \"dashboard-content\">\r\n                    <Route path = \"/account-dashboard/profile\">\r\n                        <h3 className = \"dash-header\">Profile</h3>\r\n                        <h3 className = \"dash-subheader\">Profile Picture</h3>\r\n                        <input type = 'file' id = \"img\" accept = 'image/*' onChange = {(e)=> {setTempImg(e.target.files[0])}}></input>\r\n                        <img src ={tempImg ? URL.createObjectURL(tempImg) : userData && userData.img ? userData.img : \"https://res.cloudinary.com/dicfhqxoo/image/upload/v1611984880/profilepicperson_hdwfcw.png\" } style = {{width:'10rem', display:'block', marginTop:'1rem'}} alt = \"Your Profile Picture Here\"></img>\r\n                        <h3 className = \"dash-subheader\">Personal Information</h3>\r\n                        <div className = \"dash-input-grid\">\r\n                            <div className = \"input-container\">\r\n                                <label className = \"dash-label\">First Name</label>\r\n                                <input className = \"dash-input\" placeholder = \"\" id = \"fName\" value = {userData.fName} onChange = {(e) => updateUser(e.target.id, e.target.value)}></input>\r\n                            </div>\r\n                            <div className = \"input-container\">\r\n                                <label className = \"dash-label\">Last Name</label>\r\n                                <input className = \"dash-input\" placeholder = \"\" id = \"lName\" value = {userData.lName}  onChange = {(e) => updateUser(e.target.id, e.target.value)}></input>\r\n                            </div>\r\n                            <div className = \"input-container\">\r\n                                <label className = \"dash-label\">Email</label>\r\n                                <input className = \"dash-input\" placeholder = \"\" id = \"email\" value = {userData.email}  onChange = {(e) => updateUser(e.target.id, e.target.value)}></input>\r\n                            </div>\r\n                            <div className = \"input-container-skinny\">\r\n                                <label className = \"dash-label\">Phone #</label>\r\n                                <input className = \"dash-input\" placeholder = \"\" id = \"phone\" maxLength = \"16\" value = {userData.phone} onChange = {(e) => updateUser(e.target.id, e.target.value)}></input>\r\n                            </div>\r\n                            <div className = \"input-container-skinny\">\r\n                                <label className = \"dash-label\">RPR</label>\r\n                                <input className = \"dash-input\" placeholder = \"\" id = \"rpr\" maxLength = \"3\" value = {userData.rpr} onChange = {(e) => updateUser(e.target.id, e.target.value)}></input>\r\n                            </div> \r\n                            <Button size = \"medium\" color = \"red\" label = \"Save Changes\" styles = {{width: 'fit-content', marginTop:'2rem'}} onClick = {(e) => {e.currentTarget.classList.add(\"loading\"); submitChanges(); }} isDisabled = {changesSaved}></Button>\r\n                        </div>\r\n                    </Route>\r\n                    <Route exact path = \"/account-dashboard/tournaments\">\r\n                        <div className = \"underlined\" style = {{display:'flex', justifyContent: 'space-between', position:'relative'}}>\r\n                            <h3 className = \"dash-header\">Tournaments</h3>\r\n                            <Link className = 'link' to = \"/account-dashboard/tournaments/new\">\r\n                                <Button color = \"red\" size = \"medium\" label = \"Add New\" styles = {{marginBottom:'1rem'}}></Button>\r\n                            </Link>\r\n                        </div>\r\n                        <h3 className = \"dash-subheader\">Current Tournaments</h3>\r\n                        <div className = \"grid \" style = {{margin: '2rem 0', gap: '2rem', maxWidth:'800px'}}>\r\n                            {user && tournaments && tournaments.docs\r\n                                .filter((tournament)=> getTimePeriod(tournament) == \"current\" && tournament.data().owner == user.uid)\r\n                                .map((tournament) => (\r\n                                    <TournamentCard tournamentName = {tournament.data().name} date = {tournament.data().date} slug = {tournament.data().slug} img = {tournament.data().img} id = {tournament.data().id}></TournamentCard>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                        <h3 className = \"dash-subheader\">Upcoming Tournaments</h3>\r\n                        <div className = \"grid three-column\" style = {{margin: '2rem 0', gap: '2rem', maxWidth:'800px'}}>\r\n                            {user && tournaments && tournaments.docs\r\n                                .filter((tournament)=> getTimePeriod(tournament) == \"upcoming\" && tournament.data().owner == user.uid)\r\n                                .map((tournament) => (\r\n                                    <TournamentCard tournamentName = {tournament.data().name} date = {tournament.data().date} slug = {tournament.data().slug} img = {tournament.data().img} id = {tournament.data().id}></TournamentCard>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                        <h3 className = \"dash-subheader\">Past Tournaments</h3>\r\n                        <div className = \"grid three-column\" style = {{margin: '2rem 0', gap: '1rem', maxWidth:'800px'}}>\r\n                            {user && tournaments && tournaments.docs\r\n                                .filter((tournament)=> getTimePeriod(tournament) == \"past\" && tournament.data().owner == user.uid)\r\n                                .map((tournament) => (\r\n                                    <TournamentCard tournamentName = {tournament.data().name} date = {tournament.data().date} slug = {tournament.data().slug} img = {tournament.data().img} id = {tournament.data().id}></TournamentCard>\r\n                                ))\r\n                            }\r\n                        </div>\r\n\r\n                    </Route>\r\n                    <Route path = {[\"/account-dashboard/tournaments/new\",\"/account-dashboard/tournaments/edit\"]}>\r\n                        <EditTournamentPage user = {user}></EditTournamentPage>\r\n                    </Route>\r\n                    <Route exact path = \"/account-dashboard/organizations\">\r\n                        <div className = \"underlined\" style = {{display:'flex', justifyContent: 'space-between', position:'relative'}}>\r\n                            <h3 className = \"dash-header\">Organizations</h3>\r\n                            <Link className = 'link' to = \"/account-dashboard/organizations/new\">\r\n                                <Button color = \"red\" size = \"medium\" label = \"Add New\" styles = {{marginBottom:'1rem'}}></Button>\r\n                            </Link>\r\n                        </div>\r\n                        <div className = \"grid three-column\" style = {{margin: '2rem 0', gap: '2rem', maxWidth:'800px'}}>\r\n                            {user && organizations && organizations.docs\r\n                                .filter((org)=> org.data().owner == user.uid)\r\n                                .map((org) => (\r\n                                    <OrgCard orgName = {org.data().name} id = {org.data().id} img = {org.data().img}></OrgCard>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </Route>\r\n                    <Route path = {[\"/account-dashboard/organizations/new\",\"/account-dashboard/organizations/edit\"]}>\r\n                        <EditOrganizationPage user = {user}></EditOrganizationPage>\r\n                    </Route>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AcctDashPage;","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\components\\header.js",["536","537","538"],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\utilities\\scrollToTop.js",[],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\firebase\\config.js",[],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\components\\footer.js",[],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\components\\button.js",[],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\components\\blog-card.js",[],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\components\\display-card.js",[],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\components\\search-bar.js",["539"],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\components\\current-card.js",["540","541"],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\utilities\\generateID.js",[],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\components\\upcoming-card.js",["542"],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\components\\podcast-card.js",[],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\utilities\\formatDate.js",[],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\components\\free-agent-card.js",["543","544","545"],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\components\\tag.js",[],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\utilities\\useWindowSize.js",[],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\pages\\edit-organization.js",["546","547","548","549","550","551","552","553","554","555","556","557"],"import React, {useState, useEffect} from 'react';\r\nimport {Route, Link, useLocation, useHistory} from 'react-router-dom'\r\n\r\nimport {firebase} from '../firebase/config'\r\nimport {useCollection} from 'react-firebase-hooks/firestore'\r\nimport generateID from '../utilities/generateID'\r\n\r\nimport Button from '../components/button'\r\nimport OrgCard from '../components/edit-org-card'\r\n\r\nimport axios from 'axios'\r\n\r\nconst EditOrganizationPage = ({user}) =>{\r\n\r\n    const history = useHistory();\r\n    const pathname = useLocation().pathname;\r\n    const query = new URLSearchParams(useLocation().search)\r\n    const db = firebase.firestore();\r\n\r\n\r\n\r\n    //organization state\r\n    const [organizations, loading, error] = useCollection(db.collection('organizations'))\r\n    const [orgList, setOrgList] = useState([])\r\n    const [initialOrg, setInitialOrg] = useState({name: '', location: '', link:'', desc:''})\r\n    const [orgData, setOrgData] = useState({})\r\n    const [changesSaved, setChangesSaved] = useState(true)\r\n    const [dataValidationError,setDataValidationError] = useState(null)\r\n    const [deleteConfirm, setDeleteConfirm] = useState(false)\r\n    const [tempImg, setTempImg] = useState(null)\r\n\r\n    useEffect(()=> {\r\n        if(organizations && pathname.includes('/organizations/edit')){\r\n            setInitialOrg(organizations.docs.find((org) => org.data().id == query.get(\"id\")).data())\r\n            setOrgData(organizations.docs.find((org) => org.data().id == query.get(\"id\")).data())\r\n        }\r\n    },[organizations])\r\n\r\n    useEffect(()=>{\r\n        if(user){\r\n            db.collection('users').doc(user.uid).get().then((doc) => {\r\n                setOrgList(doc.data().organizations)\r\n            })\r\n        }\r\n    },[user])\r\n\r\n\r\n    useEffect(() => {\r\n        let changesMade = false;\r\n\r\n        for(let i of Object.keys(orgData)){\r\n            if(orgData[i] != initialOrg[i]){\r\n                changesMade = true\r\n            }\r\n        }\r\n\r\n        if(tempImg){\r\n            changesMade = true;\r\n        }\r\n\r\n        setChangesSaved(!changesMade)\r\n    },[orgData, tempImg])\r\n\r\n    const updateOrg= (key, value)=>{\r\n        setOrgData({...orgData, [key]: value})\r\n    }\r\n\r\n    const addNewOrg = (e)=>{\r\n        e.preventDefault();\r\n\r\n        //can all be done in validateData\r\n        const missingData = validateData()\r\n        if(missingData.length > 0){\r\n            setDataValidationError(`*Make sure your organization has a ${missingData[0]}`)\r\n            return\r\n        }\r\n\r\n        //better way than storing id inside org's data object?\r\n        if(!orgData.id){\r\n            orgData.id = generateID()\r\n        }\r\n        orgData.owner = user.uid\r\n\r\n        const orgRef = db.collection('organizations').doc(orgData.id)\r\n\r\n        console.log('here')\r\n        db.collection('users').doc(user.uid).update({organizations: [...orgList, orgData.id]})\r\n\r\n        if(tempImg){\r\n            const file = tempImg\r\n            const formData = new FormData()\r\n            formData.append(\"file\",file)\r\n            formData.append(\"upload_preset\", \"spike_hub_organization\")\r\n            axios({\r\n                url: \"https://api.cloudinary.com/v1_1/dicfhqxoo/upload\",\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                },\r\n                data: formData\r\n            }).then((res) => {\r\n                orgRef.get().then((snapshot) => {\r\n                    if(snapshot.exists){\r\n                        orgRef.update({...orgData,img: res.data.secure_url})\r\n                    }\r\n                    else{\r\n                        orgRef.set({...orgData,img: res.data.secure_url})\r\n                    }\r\n                })\r\n                .then(()=>history.push(\"/account-dashboard/organizations\"))\r\n            })\r\n        }\r\n        else{\r\n            orgRef.get().then((snapshot) => {\r\n                if(snapshot.exists){\r\n                    orgRef.update(orgData)\r\n                }\r\n                else{\r\n                    orgRef.set(orgData)\r\n                }\r\n            })\r\n            .then(() => history.push(\"/account-dashboard/organizations\"))\r\n        }\r\n    }\r\n\r\n    const deleteOrg = () => {\r\n        db.collection(\"organizations\").doc(orgData.id).delete()\r\n        .then(() => db.collection('users').doc(user.uid).update({organizations: orgList.filter((orgID) => !(orgID == orgData.id))}))\r\n        .then(history.push(\"/account-dashboard/organizations\"))\r\n\r\n    }\r\n\r\n    const validateData = () => {\r\n        const missingData = []\r\n        \r\n        if(!orgData.name){\r\n            missingData.push(\"name\")\r\n        }\r\n        return missingData\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <> \r\n\r\n                <div className = \"underlined\" style = {{display:'flex', justifyContent: 'space-between', position:'relative'}}>\r\n                    <h3 className = \"dash-header\">{organizations ? (orgData.id ? initialOrg.name : \"New Organization\"):null}</h3>\r\n                </div>\r\n                <input type = 'file' id = \"img\" accept = 'image/*' onChange = {(e)=> {setTempImg(e.target.files[0])}} style = {{marginTop:'3rem'}}></input>\r\n                <img src ={tempImg ? URL.createObjectURL(tempImg) : orgData && orgData.img ? orgData.img : \"https://res.cloudinary.com/dicfhqxoo/image/upload/v1612321575/tournament-icon_ydpdbe.png\" } style = {{width:'10rem', height:'10rem', display:'block', marginTop:'1rem'}} alt = \"Organization Photo Here\"></img>\r\n\r\n                <div className = \"dash-input-grid\" style = {{marginTop:'3rem'}}>\r\n                    <div className = \"input-container\">\r\n                        <label className = \"dash-label\">Organization Name</label>\r\n                        <input className = \"dash-input\" placeholder = \"\" id = \"name\" value = {orgData.name} onChange = {(e) => updateOrg(e.target.id, e.target.value)}></input>\r\n                    </div>\r\n                    <div className = \"input-container\">\r\n                        <label className = \"dash-label\">Location</label>\r\n                        <input className = \"dash-input\" placeholder = \"\" id = \"location\"  value = {orgData.location} onChange = {(e) => updateOrg(e.target.id, e.target.value)}></input>\r\n                    </div>\r\n                    <div className = \"input-container wide\">\r\n                        <label className = \"dash-label\">Website Link</label>\r\n                        <input className = \"dash-input\" placeholder = \"\" id = \"link\" value = {orgData.link} onChange = {(e) => updateOrg(e.target.id, e.target.value)}></input>\r\n                    </div>\r\n                    <div className = \"input-container wide\">\r\n                        <label className = \"dash-label\">Short Description</label>\r\n                        <input className = \"dash-input\" placeholder = \"\" id = \"desc\" value = {orgData.desc} onChange = {(e) => updateOrg(e.target.id, e.target.value)}></input>\r\n                    </div>\r\n                </div>\r\n\r\n                <div style = {{display:'flex', justifyContent:'space-between', width:'100%'}}>\r\n                    <div>\r\n                        <Link className = \"link\" to= \"/account-dashboard/organizations\">\r\n                            <Button size = \"medium\" color = \"dark-gray\" label = \"Cancel\" styles = {{width: 'fit-content', marginTop:'1rem', marginRight:'1rem'}} ></Button>\r\n                        </Link>\r\n                        <Button size = \"medium\" color = \"red\" label = {orgData.id ? \"Save Organization\":\"Add Organization\"} styles = {{width: 'fit-content', marginTop:'1rem'}} onClick = {(e) =>{e.currentTarget.classList.add(\"loading\"); addNewOrg(e)}} isDisabled = {changesSaved}></Button> \r\n                    </div>\r\n                    {Object.keys(initialOrg).length > 0 && <Button size = \"medium\" color = \"red\" label = {deleteConfirm ? \"Confirm Delete\":\"Delete\"} styles = {{width: 'fit-content', marginTop:'1rem'}} onClick = {deleteConfirm ? (e) => {e.currentTarget.classList.add(\"loading\"); deleteOrg()} : () => setDeleteConfirm(true)}></Button>}\r\n                </div>\r\n\r\n                {dataValidationError && <p style = {{fontSize:'.8rem'}}>{dataValidationError}</p>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditOrganizationPage\r\n","C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\components\\edit-org-card.js",["558"],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\pages\\edit-tournament.js",["559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594"],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\components\\edit-tournament-card.js",["595"],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\components\\selected-item.js",["596"],"C:\\Users\\btbunze\\Documents\\spikehub-2.0\\Spikehub-v2\\src\\utilities\\areEqual.js",["597","598"],{"ruleId":"599","replacedBy":"600"},{"ruleId":"601","replacedBy":"602"},{"ruleId":"603","severity":1,"message":"604","line":1,"column":9,"nodeType":"605","messageId":"606","endLine":1,"endColumn":17},{"ruleId":"603","severity":1,"message":"607","line":1,"column":18,"nodeType":"605","messageId":"606","endLine":1,"endColumn":27},{"ruleId":"603","severity":1,"message":"608","line":13,"column":8,"nodeType":"605","messageId":"606","endLine":13,"endColumn":14},{"ruleId":"603","severity":1,"message":"609","line":25,"column":16,"nodeType":"605","messageId":"606","endLine":25,"endColumn":23},{"ruleId":"603","severity":1,"message":"610","line":25,"column":25,"nodeType":"605","messageId":"606","endLine":25,"endColumn":30},{"ruleId":"603","severity":1,"message":"611","line":19,"column":25,"nodeType":"605","messageId":"606","endLine":19,"endColumn":43},{"ruleId":"603","severity":1,"message":"612","line":19,"column":45,"nodeType":"605","messageId":"606","endLine":19,"endColumn":61},{"ruleId":"603","severity":1,"message":"613","line":20,"column":12,"nodeType":"605","messageId":"606","endLine":20,"endColumn":21},{"ruleId":"603","severity":1,"message":"614","line":20,"column":23,"nodeType":"605","messageId":"606","endLine":20,"endColumn":35},{"ruleId":"603","severity":1,"message":"615","line":20,"column":37,"nodeType":"605","messageId":"606","endLine":20,"endColumn":47},{"ruleId":"616","severity":1,"message":"617","line":31,"column":38,"nodeType":"618","messageId":"619","endLine":31,"endColumn":40},{"ruleId":"616","severity":1,"message":"617","line":52,"column":80,"nodeType":"618","messageId":"619","endLine":52,"endColumn":82},{"ruleId":"620","severity":1,"message":"621","line":114,"column":37,"nodeType":"622","endLine":114,"endColumn":115},{"ruleId":"603","severity":1,"message":"623","line":2,"column":26,"nodeType":"605","messageId":"606","endLine":2,"endColumn":32},{"ruleId":"603","severity":1,"message":"624","line":2,"column":41,"nodeType":"605","messageId":"606","endLine":2,"endColumn":47},{"ruleId":"603","severity":1,"message":"625","line":2,"column":55,"nodeType":"605","messageId":"606","endLine":2,"endColumn":68},{"ruleId":"603","severity":1,"message":"626","line":10,"column":8,"nodeType":"605","messageId":"606","endLine":10,"endColumn":19},{"ruleId":"603","severity":1,"message":"611","line":19,"column":25,"nodeType":"605","messageId":"606","endLine":19,"endColumn":43},{"ruleId":"603","severity":1,"message":"610","line":19,"column":46,"nodeType":"605","messageId":"606","endLine":19,"endColumn":51},{"ruleId":"627","severity":1,"message":"628","line":55,"column":7,"nodeType":"629","endLine":55,"endColumn":28,"suggestions":"630"},{"ruleId":"616","severity":1,"message":"617","line":75,"column":80,"nodeType":"618","messageId":"619","endLine":75,"endColumn":82},{"ruleId":"616","severity":1,"message":"617","line":78,"column":80,"nodeType":"618","messageId":"619","endLine":78,"endColumn":82},{"ruleId":"603","severity":1,"message":"626","line":7,"column":8,"nodeType":"605","messageId":"606","endLine":7,"endColumn":19},{"ruleId":"603","severity":1,"message":"631","line":11,"column":8,"nodeType":"605","messageId":"606","endLine":11,"endColumn":13},{"ruleId":"603","severity":1,"message":"632","line":12,"column":8,"nodeType":"605","messageId":"606","endLine":12,"endColumn":23},{"ruleId":"603","severity":1,"message":"633","line":32,"column":11,"nodeType":"605","messageId":"606","endLine":32,"endColumn":15},{"ruleId":"603","severity":1,"message":"609","line":36,"column":24,"nodeType":"605","messageId":"606","endLine":36,"endColumn":31},{"ruleId":"603","severity":1,"message":"610","line":36,"column":33,"nodeType":"605","messageId":"606","endLine":36,"endColumn":38},{"ruleId":"616","severity":1,"message":"617","line":58,"column":25,"nodeType":"618","messageId":"619","endLine":58,"endColumn":27},{"ruleId":"616","severity":1,"message":"617","line":63,"column":25,"nodeType":"618","messageId":"619","endLine":63,"endColumn":27},{"ruleId":"627","severity":1,"message":"634","line":71,"column":7,"nodeType":"629","endLine":71,"endColumn":19,"suggestions":"635"},{"ruleId":"627","severity":1,"message":"636","line":79,"column":7,"nodeType":"629","endLine":79,"endColumn":13,"suggestions":"637"},{"ruleId":"638","severity":1,"message":"639","line":83,"column":9,"nodeType":"640","messageId":"641","endLine":97,"endColumn":10},{"ruleId":"642","severity":1,"message":"643","line":86,"column":13,"nodeType":"644","messageId":"645","endLine":88,"endColumn":23},{"ruleId":"616","severity":1,"message":"617","line":143,"column":38,"nodeType":"618","messageId":"619","endLine":143,"endColumn":40},{"ruleId":"620","severity":1,"message":"621","line":160,"column":21,"nodeType":"622","endLine":160,"endColumn":218},{"ruleId":"646","severity":1,"message":"647","line":160,"column":44,"nodeType":"648","messageId":"649","endLine":160,"endColumn":46},{"ruleId":"646","severity":1,"message":"647","line":160,"column":69,"nodeType":"648","messageId":"649","endLine":160,"endColumn":71},{"ruleId":"650","severity":1,"message":"651","line":169,"column":29,"nodeType":"622","endLine":169,"endColumn":115},{"ruleId":"616","severity":1,"message":"617","line":273,"column":112,"nodeType":"618","messageId":"619","endLine":273,"endColumn":114},{"ruleId":"616","severity":1,"message":"617","line":273,"column":133,"nodeType":"618","messageId":"619","endLine":273,"endColumn":135},{"ruleId":"616","severity":1,"message":"617","line":273,"column":154,"nodeType":"618","messageId":"619","endLine":273,"endColumn":156},{"ruleId":"603","severity":1,"message":"609","line":12,"column":20,"nodeType":"605","messageId":"606","endLine":12,"endColumn":27},{"ruleId":"603","severity":1,"message":"610","line":12,"column":29,"nodeType":"605","messageId":"606","endLine":12,"endColumn":34},{"ruleId":"638","severity":1,"message":"639","line":42,"column":9,"nodeType":"640","messageId":"641","endLine":71,"endColumn":10},{"ruleId":"638","severity":1,"message":"639","line":118,"column":9,"nodeType":"640","messageId":"641","endLine":131,"endColumn":10},{"ruleId":"603","severity":1,"message":"652","line":200,"column":32,"nodeType":"605","messageId":"606","endLine":200,"endColumn":36},{"ruleId":"653","severity":1,"message":"654","line":211,"column":33,"nodeType":"622","endLine":211,"endColumn":271},{"ruleId":"603","severity":1,"message":"609","line":12,"column":22,"nodeType":"605","messageId":"606","endLine":12,"endColumn":29},{"ruleId":"603","severity":1,"message":"610","line":12,"column":31,"nodeType":"605","messageId":"606","endLine":12,"endColumn":36},{"ruleId":"603","severity":1,"message":"655","line":2,"column":9,"nodeType":"605","messageId":"606","endLine":2,"endColumn":13},{"ruleId":"603","severity":1,"message":"656","line":4,"column":9,"nodeType":"605","messageId":"606","endLine":4,"endColumn":17},{"ruleId":"603","severity":1,"message":"657","line":7,"column":8,"nodeType":"605","messageId":"606","endLine":7,"endColumn":14},{"ruleId":"603","severity":1,"message":"658","line":11,"column":12,"nodeType":"605","messageId":"606","endLine":11,"endColumn":21},{"ruleId":"603","severity":1,"message":"659","line":11,"column":23,"nodeType":"605","messageId":"606","endLine":11,"endColumn":36},{"ruleId":"603","severity":1,"message":"660","line":11,"column":38,"nodeType":"605","messageId":"606","endLine":11,"endColumn":49},{"ruleId":"603","severity":1,"message":"661","line":7,"column":9,"nodeType":"605","messageId":"606","endLine":7,"endColumn":21},{"ruleId":"603","severity":1,"message":"662","line":9,"column":8,"nodeType":"605","messageId":"606","endLine":9,"endColumn":18},{"ruleId":"603","severity":1,"message":"663","line":19,"column":10,"nodeType":"605","messageId":"606","endLine":19,"endColumn":32},{"ruleId":"603","severity":1,"message":"664","line":43,"column":25,"nodeType":"605","messageId":"606","endLine":43,"endColumn":33},{"ruleId":"603","severity":1,"message":"665","line":43,"column":35,"nodeType":"605","messageId":"606","endLine":43,"endColumn":41},{"ruleId":"603","severity":1,"message":"666","line":44,"column":27,"nodeType":"605","messageId":"606","endLine":44,"endColumn":35},{"ruleId":"603","severity":1,"message":"667","line":44,"column":37,"nodeType":"605","messageId":"606","endLine":44,"endColumn":43},{"ruleId":"627","severity":1,"message":"636","line":54,"column":7,"nodeType":"629","endLine":54,"endColumn":13,"suggestions":"668"},{"ruleId":"616","severity":1,"message":"669","line":60,"column":28,"nodeType":"618","messageId":"619","endLine":60,"endColumn":30},{"ruleId":"627","severity":1,"message":"670","line":65,"column":7,"nodeType":"629","endLine":65,"endColumn":17,"suggestions":"671"},{"ruleId":"627","severity":1,"message":"672","line":76,"column":7,"nodeType":"629","endLine":76,"endColumn":15,"suggestions":"673"},{"ruleId":"674","severity":1,"message":"675","line":102,"column":65,"nodeType":"676","messageId":"677","endLine":102,"endColumn":66,"fix":"678"},{"ruleId":"679","severity":1,"message":"680","line":170,"column":25,"nodeType":"622","endLine":170,"endColumn":308},{"ruleId":"616","severity":1,"message":"617","line":206,"column":82,"nodeType":"618","messageId":"619","endLine":206,"endColumn":84},{"ruleId":"616","severity":1,"message":"617","line":206,"column":124,"nodeType":"618","messageId":"619","endLine":206,"endColumn":126},{"ruleId":"616","severity":1,"message":"617","line":215,"column":82,"nodeType":"618","messageId":"619","endLine":215,"endColumn":84},{"ruleId":"616","severity":1,"message":"617","line":215,"column":125,"nodeType":"618","messageId":"619","endLine":215,"endColumn":127},{"ruleId":"616","severity":1,"message":"617","line":224,"column":82,"nodeType":"618","messageId":"619","endLine":224,"endColumn":84},{"ruleId":"616","severity":1,"message":"617","line":224,"column":121,"nodeType":"618","messageId":"619","endLine":224,"endColumn":123},{"ruleId":"616","severity":1,"message":"617","line":244,"column":66,"nodeType":"618","messageId":"619","endLine":244,"endColumn":68},{"ruleId":"603","severity":1,"message":"607","line":1,"column":26,"nodeType":"605","messageId":"606","endLine":1,"endColumn":35},{"ruleId":"603","severity":1,"message":"631","line":7,"column":8,"nodeType":"605","messageId":"606","endLine":7,"endColumn":13},{"ruleId":"638","severity":1,"message":"639","line":47,"column":9,"nodeType":"640","messageId":"641","endLine":56,"endColumn":10},{"ruleId":"616","severity":1,"message":"617","line":57,"column":16,"nodeType":"618","messageId":"619","endLine":57,"endColumn":18},{"ruleId":"616","severity":1,"message":"617","line":59,"column":16,"nodeType":"618","messageId":"619","endLine":59,"endColumn":18},{"ruleId":"616","severity":1,"message":"617","line":61,"column":16,"nodeType":"618","messageId":"619","endLine":61,"endColumn":18},{"ruleId":"603","severity":1,"message":"681","line":5,"column":9,"nodeType":"605","messageId":"606","endLine":5,"endColumn":22},{"ruleId":"603","severity":1,"message":"682","line":16,"column":25,"nodeType":"605","messageId":"606","endLine":16,"endColumn":39},{"ruleId":"616","severity":1,"message":"617","line":25,"column":27,"nodeType":"618","messageId":"619","endLine":25,"endColumn":29},{"ruleId":"616","severity":1,"message":"617","line":32,"column":24,"nodeType":"618","messageId":"619","endLine":32,"endColumn":26},{"ruleId":"616","severity":1,"message":"617","line":43,"column":30,"nodeType":"618","messageId":"619","endLine":43,"endColumn":32},{"ruleId":"616","severity":1,"message":"617","line":45,"column":28,"nodeType":"618","messageId":"619","endLine":45,"endColumn":30},{"ruleId":"616","severity":1,"message":"617","line":45,"column":49,"nodeType":"618","messageId":"619","endLine":45,"endColumn":51},{"ruleId":"616","severity":1,"message":"617","line":48,"column":33,"nodeType":"618","messageId":"619","endLine":48,"endColumn":35},{"ruleId":"603","severity":1,"message":"625","line":2,"column":15,"nodeType":"605","messageId":"606","endLine":2,"endColumn":28},{"ruleId":"627","severity":1,"message":"636","line":19,"column":7,"nodeType":"629","endLine":19,"endColumn":13,"suggestions":"683"},{"ruleId":"620","severity":1,"message":"621","line":44,"column":25,"nodeType":"622","endLine":44,"endColumn":244},{"ruleId":"650","severity":1,"message":"651","line":12,"column":13,"nodeType":"622","endLine":12,"endColumn":82},{"ruleId":"650","severity":1,"message":"651","line":13,"column":13,"nodeType":"622","endLine":13,"endColumn":79},{"ruleId":"620","severity":1,"message":"621","line":8,"column":21,"nodeType":"622","endLine":8,"endColumn":192},{"ruleId":"603","severity":1,"message":"607","line":1,"column":16,"nodeType":"605","messageId":"606","endLine":1,"endColumn":25},{"ruleId":"603","severity":1,"message":"684","line":7,"column":33,"nodeType":"605","messageId":"606","endLine":7,"endColumn":44},{"ruleId":"620","severity":1,"message":"621","line":11,"column":13,"nodeType":"622","endLine":11,"endColumn":188},{"ruleId":"616","severity":1,"message":"617","line":18,"column":31,"nodeType":"618","messageId":"619","endLine":18,"endColumn":33},{"ruleId":"620","severity":1,"message":"621","line":11,"column":21,"nodeType":"622","endLine":11,"endColumn":192},{"ruleId":"620","severity":1,"message":"621","line":8,"column":21,"nodeType":"622","endLine":8,"endColumn":192},{"ruleId":"603","severity":1,"message":"685","line":2,"column":9,"nodeType":"605","messageId":"606","endLine":2,"endColumn":14},{"ruleId":"603","severity":1,"message":"686","line":9,"column":8,"nodeType":"605","messageId":"606","endLine":9,"endColumn":15},{"ruleId":"603","severity":1,"message":"609","line":23,"column":27,"nodeType":"605","messageId":"606","endLine":23,"endColumn":34},{"ruleId":"603","severity":1,"message":"610","line":23,"column":36,"nodeType":"605","messageId":"606","endLine":23,"endColumn":41},{"ruleId":"616","severity":1,"message":"617","line":34,"column":74,"nodeType":"618","messageId":"619","endLine":34,"endColumn":76},{"ruleId":"616","severity":1,"message":"617","line":35,"column":71,"nodeType":"618","messageId":"619","endLine":35,"endColumn":73},{"ruleId":"627","severity":1,"message":"687","line":37,"column":7,"nodeType":"629","endLine":37,"endColumn":22,"suggestions":"688"},{"ruleId":"627","severity":1,"message":"636","line":45,"column":7,"nodeType":"629","endLine":45,"endColumn":13,"suggestions":"689"},{"ruleId":"616","severity":1,"message":"669","line":52,"column":27,"nodeType":"618","messageId":"619","endLine":52,"endColumn":29},{"ruleId":"627","severity":1,"message":"690","line":62,"column":7,"nodeType":"629","endLine":62,"endColumn":25,"suggestions":"691"},{"ruleId":"616","severity":1,"message":"617","line":128,"column":115,"nodeType":"618","messageId":"619","endLine":128,"endColumn":117},{"ruleId":"679","severity":1,"message":"680","line":151,"column":17,"nodeType":"622","endLine":151,"endColumn":310},{"ruleId":"603","severity":1,"message":"685","line":2,"column":9,"nodeType":"605","messageId":"606","endLine":2,"endColumn":14},{"ruleId":"603","severity":1,"message":"686","line":9,"column":8,"nodeType":"605","messageId":"606","endLine":9,"endColumn":15},{"ruleId":"603","severity":1,"message":"666","line":24,"column":27,"nodeType":"605","messageId":"606","endLine":24,"endColumn":35},{"ruleId":"603","severity":1,"message":"667","line":24,"column":37,"nodeType":"605","messageId":"606","endLine":24,"endColumn":43},{"ruleId":"603","severity":1,"message":"664","line":27,"column":25,"nodeType":"605","messageId":"606","endLine":27,"endColumn":33},{"ruleId":"603","severity":1,"message":"665","line":27,"column":35,"nodeType":"605","messageId":"606","endLine":27,"endColumn":41},{"ruleId":"603","severity":1,"message":"692","line":35,"column":25,"nodeType":"605","messageId":"606","endLine":35,"endColumn":39},{"ruleId":"603","severity":1,"message":"693","line":37,"column":12,"nodeType":"605","messageId":"606","endLine":37,"endColumn":19},{"ruleId":"603","severity":1,"message":"694","line":37,"column":21,"nodeType":"605","messageId":"606","endLine":37,"endColumn":31},{"ruleId":"603","severity":1,"message":"695","line":38,"column":12,"nodeType":"605","messageId":"606","endLine":38,"endColumn":18},{"ruleId":"603","severity":1,"message":"696","line":38,"column":20,"nodeType":"605","messageId":"606","endLine":38,"endColumn":29},{"ruleId":"603","severity":1,"message":"633","line":51,"column":19,"nodeType":"605","messageId":"606","endLine":51,"endColumn":23},{"ruleId":"616","severity":1,"message":"617","line":53,"column":85,"nodeType":"618","messageId":"619","endLine":53,"endColumn":87},{"ruleId":"627","severity":1,"message":"687","line":63,"column":7,"nodeType":"629","endLine":63,"endColumn":20,"suggestions":"697"},{"ruleId":"627","severity":1,"message":"636","line":72,"column":7,"nodeType":"629","endLine":72,"endColumn":13,"suggestions":"698"},{"ruleId":"616","severity":1,"message":"617","line":86,"column":68,"nodeType":"618","messageId":"619","endLine":86,"endColumn":70},{"ruleId":"616","severity":1,"message":"617","line":103,"column":68,"nodeType":"618","messageId":"619","endLine":103,"endColumn":70},{"ruleId":"627","severity":1,"message":"699","line":130,"column":7,"nodeType":"629","endLine":130,"endColumn":32,"suggestions":"700"},{"ruleId":"627","severity":1,"message":"701","line":140,"column":8,"nodeType":"629","endLine":140,"endColumn":18,"suggestions":"702"},{"ruleId":"616","severity":1,"message":"617","line":148,"column":16,"nodeType":"618","messageId":"619","endLine":148,"endColumn":18},{"ruleId":"616","severity":1,"message":"617","line":149,"column":22,"nodeType":"618","messageId":"619","endLine":149,"endColumn":24},{"ruleId":"616","severity":1,"message":"617","line":167,"column":25,"nodeType":"618","messageId":"619","endLine":167,"endColumn":27},{"ruleId":"616","severity":1,"message":"617","line":167,"column":106,"nodeType":"618","messageId":"619","endLine":167,"endColumn":108},{"ruleId":"616","severity":1,"message":"617","line":184,"column":58,"nodeType":"618","messageId":"619","endLine":184,"endColumn":60},{"ruleId":"616","severity":1,"message":"617","line":222,"column":39,"nodeType":"618","messageId":"619","endLine":222,"endColumn":41},{"ruleId":"616","severity":1,"message":"617","line":230,"column":31,"nodeType":"618","messageId":"619","endLine":230,"endColumn":33},{"ruleId":"616","severity":1,"message":"617","line":294,"column":134,"nodeType":"618","messageId":"619","endLine":294,"endColumn":136},{"ruleId":"616","severity":1,"message":"617","line":317,"column":73,"nodeType":"618","messageId":"619","endLine":317,"endColumn":75},{"ruleId":"679","severity":1,"message":"680","line":332,"column":17,"nodeType":"622","endLine":332,"endColumn":329},{"ruleId":"616","severity":1,"message":"617","line":344,"column":96,"nodeType":"618","messageId":"619","endLine":344,"endColumn":98},{"ruleId":"616","severity":1,"message":"669","line":413,"column":141,"nodeType":"618","messageId":"619","endLine":413,"endColumn":143},{"ruleId":"603","severity":1,"message":"604","line":1,"column":16,"nodeType":"605","messageId":"606","endLine":1,"endColumn":24},{"ruleId":"638","severity":1,"message":"639","line":13,"column":5,"nodeType":"640","messageId":"641","endLine":41,"endColumn":6},{"ruleId":"616","severity":1,"message":"617","line":29,"column":39,"nodeType":"618","messageId":"619","endLine":29,"endColumn":41},{"ruleId":"599","replacedBy":"703"},{"ruleId":"601","replacedBy":"704"},{"ruleId":"603","severity":1,"message":"604","line":1,"column":9,"nodeType":"605","messageId":"606","endLine":1,"endColumn":17},{"ruleId":"603","severity":1,"message":"607","line":1,"column":18,"nodeType":"605","messageId":"606","endLine":1,"endColumn":27},{"ruleId":"603","severity":1,"message":"608","line":13,"column":8,"nodeType":"605","messageId":"606","endLine":13,"endColumn":14},{"ruleId":"603","severity":1,"message":"609","line":25,"column":16,"nodeType":"605","messageId":"606","endLine":25,"endColumn":23},{"ruleId":"603","severity":1,"message":"610","line":25,"column":25,"nodeType":"605","messageId":"606","endLine":25,"endColumn":30},{"ruleId":"603","severity":1,"message":"655","line":2,"column":9,"nodeType":"605","messageId":"606","endLine":2,"endColumn":13},{"ruleId":"603","severity":1,"message":"656","line":4,"column":9,"nodeType":"605","messageId":"606","endLine":4,"endColumn":17},{"ruleId":"603","severity":1,"message":"657","line":7,"column":8,"nodeType":"605","messageId":"606","endLine":7,"endColumn":14},{"ruleId":"603","severity":1,"message":"658","line":11,"column":12,"nodeType":"605","messageId":"606","endLine":11,"endColumn":21},{"ruleId":"603","severity":1,"message":"659","line":11,"column":23,"nodeType":"605","messageId":"606","endLine":11,"endColumn":36},{"ruleId":"603","severity":1,"message":"660","line":11,"column":38,"nodeType":"605","messageId":"606","endLine":11,"endColumn":49},{"ruleId":"603","severity":1,"message":"611","line":19,"column":25,"nodeType":"605","messageId":"606","endLine":19,"endColumn":43},{"ruleId":"603","severity":1,"message":"612","line":19,"column":45,"nodeType":"605","messageId":"606","endLine":19,"endColumn":61},{"ruleId":"603","severity":1,"message":"613","line":20,"column":12,"nodeType":"605","messageId":"606","endLine":20,"endColumn":21},{"ruleId":"603","severity":1,"message":"614","line":20,"column":23,"nodeType":"605","messageId":"606","endLine":20,"endColumn":35},{"ruleId":"603","severity":1,"message":"615","line":20,"column":37,"nodeType":"605","messageId":"606","endLine":20,"endColumn":47},{"ruleId":"616","severity":1,"message":"617","line":31,"column":38,"nodeType":"618","messageId":"619","endLine":31,"endColumn":40},{"ruleId":"616","severity":1,"message":"617","line":52,"column":80,"nodeType":"618","messageId":"619","endLine":52,"endColumn":82},{"ruleId":"620","severity":1,"message":"621","line":114,"column":37,"nodeType":"622","endLine":114,"endColumn":115},{"ruleId":"603","severity":1,"message":"623","line":2,"column":26,"nodeType":"605","messageId":"606","endLine":2,"endColumn":32},{"ruleId":"603","severity":1,"message":"624","line":2,"column":41,"nodeType":"605","messageId":"606","endLine":2,"endColumn":47},{"ruleId":"603","severity":1,"message":"625","line":2,"column":55,"nodeType":"605","messageId":"606","endLine":2,"endColumn":68},{"ruleId":"603","severity":1,"message":"626","line":10,"column":8,"nodeType":"605","messageId":"606","endLine":10,"endColumn":19},{"ruleId":"603","severity":1,"message":"611","line":20,"column":25,"nodeType":"605","messageId":"606","endLine":20,"endColumn":43},{"ruleId":"603","severity":1,"message":"610","line":20,"column":46,"nodeType":"605","messageId":"606","endLine":20,"endColumn":51},{"ruleId":"705","severity":1,"message":"706","line":41,"column":36,"nodeType":"707","messageId":"708","endLine":41,"endColumn":38},{"ruleId":"638","severity":1,"message":"639","line":42,"column":17,"nodeType":"640","messageId":"641","endLine":57,"endColumn":18},{"ruleId":"616","severity":1,"message":"617","line":92,"column":80,"nodeType":"618","messageId":"619","endLine":92,"endColumn":82},{"ruleId":"616","severity":1,"message":"617","line":95,"column":80,"nodeType":"618","messageId":"619","endLine":95,"endColumn":82},{"ruleId":"603","severity":1,"message":"609","line":12,"column":22,"nodeType":"605","messageId":"606","endLine":12,"endColumn":29},{"ruleId":"603","severity":1,"message":"610","line":12,"column":31,"nodeType":"605","messageId":"606","endLine":12,"endColumn":36},{"ruleId":"603","severity":1,"message":"626","line":7,"column":8,"nodeType":"605","messageId":"606","endLine":7,"endColumn":19},{"ruleId":"603","severity":1,"message":"631","line":11,"column":8,"nodeType":"605","messageId":"606","endLine":11,"endColumn":13},{"ruleId":"603","severity":1,"message":"632","line":12,"column":8,"nodeType":"605","messageId":"606","endLine":12,"endColumn":23},{"ruleId":"603","severity":1,"message":"633","line":32,"column":11,"nodeType":"605","messageId":"606","endLine":32,"endColumn":15},{"ruleId":"603","severity":1,"message":"609","line":36,"column":24,"nodeType":"605","messageId":"606","endLine":36,"endColumn":31},{"ruleId":"603","severity":1,"message":"610","line":36,"column":33,"nodeType":"605","messageId":"606","endLine":36,"endColumn":38},{"ruleId":"616","severity":1,"message":"617","line":58,"column":25,"nodeType":"618","messageId":"619","endLine":58,"endColumn":27},{"ruleId":"616","severity":1,"message":"617","line":63,"column":25,"nodeType":"618","messageId":"619","endLine":63,"endColumn":27},{"ruleId":"627","severity":1,"message":"634","line":71,"column":7,"nodeType":"629","endLine":71,"endColumn":19,"suggestions":"709"},{"ruleId":"627","severity":1,"message":"636","line":79,"column":7,"nodeType":"629","endLine":79,"endColumn":13,"suggestions":"710"},{"ruleId":"638","severity":1,"message":"639","line":83,"column":9,"nodeType":"640","messageId":"641","endLine":97,"endColumn":10},{"ruleId":"642","severity":1,"message":"643","line":86,"column":13,"nodeType":"644","messageId":"645","endLine":88,"endColumn":23},{"ruleId":"616","severity":1,"message":"617","line":143,"column":38,"nodeType":"618","messageId":"619","endLine":143,"endColumn":40},{"ruleId":"620","severity":1,"message":"621","line":160,"column":21,"nodeType":"622","endLine":160,"endColumn":218},{"ruleId":"646","severity":1,"message":"647","line":160,"column":44,"nodeType":"648","messageId":"649","endLine":160,"endColumn":46},{"ruleId":"646","severity":1,"message":"647","line":160,"column":69,"nodeType":"648","messageId":"649","endLine":160,"endColumn":71},{"ruleId":"650","severity":1,"message":"651","line":169,"column":29,"nodeType":"622","endLine":169,"endColumn":115},{"ruleId":"616","severity":1,"message":"617","line":273,"column":112,"nodeType":"618","messageId":"619","endLine":273,"endColumn":114},{"ruleId":"616","severity":1,"message":"617","line":273,"column":133,"nodeType":"618","messageId":"619","endLine":273,"endColumn":135},{"ruleId":"616","severity":1,"message":"617","line":273,"column":154,"nodeType":"618","messageId":"619","endLine":273,"endColumn":156},{"ruleId":"603","severity":1,"message":"609","line":12,"column":20,"nodeType":"605","messageId":"606","endLine":12,"endColumn":27},{"ruleId":"603","severity":1,"message":"610","line":12,"column":29,"nodeType":"605","messageId":"606","endLine":12,"endColumn":34},{"ruleId":"638","severity":1,"message":"639","line":42,"column":9,"nodeType":"640","messageId":"641","endLine":71,"endColumn":10},{"ruleId":"638","severity":1,"message":"639","line":118,"column":9,"nodeType":"640","messageId":"641","endLine":131,"endColumn":10},{"ruleId":"603","severity":1,"message":"652","line":200,"column":32,"nodeType":"605","messageId":"606","endLine":200,"endColumn":36},{"ruleId":"653","severity":1,"message":"654","line":211,"column":33,"nodeType":"622","endLine":211,"endColumn":271},{"ruleId":"603","severity":1,"message":"681","line":5,"column":9,"nodeType":"605","messageId":"606","endLine":5,"endColumn":22},{"ruleId":"603","severity":1,"message":"682","line":16,"column":25,"nodeType":"605","messageId":"606","endLine":16,"endColumn":39},{"ruleId":"616","severity":1,"message":"617","line":25,"column":27,"nodeType":"618","messageId":"619","endLine":25,"endColumn":29},{"ruleId":"616","severity":1,"message":"617","line":32,"column":24,"nodeType":"618","messageId":"619","endLine":32,"endColumn":26},{"ruleId":"616","severity":1,"message":"617","line":43,"column":30,"nodeType":"618","messageId":"619","endLine":43,"endColumn":32},{"ruleId":"616","severity":1,"message":"617","line":45,"column":28,"nodeType":"618","messageId":"619","endLine":45,"endColumn":30},{"ruleId":"616","severity":1,"message":"617","line":45,"column":49,"nodeType":"618","messageId":"619","endLine":45,"endColumn":51},{"ruleId":"616","severity":1,"message":"617","line":48,"column":33,"nodeType":"618","messageId":"619","endLine":48,"endColumn":35},{"ruleId":"603","severity":1,"message":"607","line":1,"column":26,"nodeType":"605","messageId":"606","endLine":1,"endColumn":35},{"ruleId":"603","severity":1,"message":"631","line":7,"column":8,"nodeType":"605","messageId":"606","endLine":7,"endColumn":13},{"ruleId":"638","severity":1,"message":"639","line":47,"column":9,"nodeType":"640","messageId":"641","endLine":56,"endColumn":10},{"ruleId":"616","severity":1,"message":"617","line":57,"column":16,"nodeType":"618","messageId":"619","endLine":57,"endColumn":18},{"ruleId":"616","severity":1,"message":"617","line":59,"column":16,"nodeType":"618","messageId":"619","endLine":59,"endColumn":18},{"ruleId":"616","severity":1,"message":"617","line":61,"column":16,"nodeType":"618","messageId":"619","endLine":61,"endColumn":18},{"ruleId":"603","severity":1,"message":"661","line":7,"column":9,"nodeType":"605","messageId":"606","endLine":7,"endColumn":21},{"ruleId":"603","severity":1,"message":"662","line":9,"column":8,"nodeType":"605","messageId":"606","endLine":9,"endColumn":18},{"ruleId":"603","severity":1,"message":"663","line":20,"column":10,"nodeType":"605","messageId":"606","endLine":20,"endColumn":32},{"ruleId":"603","severity":1,"message":"664","line":44,"column":25,"nodeType":"605","messageId":"606","endLine":44,"endColumn":33},{"ruleId":"603","severity":1,"message":"665","line":44,"column":35,"nodeType":"605","messageId":"606","endLine":44,"endColumn":41},{"ruleId":"603","severity":1,"message":"666","line":45,"column":27,"nodeType":"605","messageId":"606","endLine":45,"endColumn":35},{"ruleId":"603","severity":1,"message":"667","line":45,"column":37,"nodeType":"605","messageId":"606","endLine":45,"endColumn":43},{"ruleId":"627","severity":1,"message":"636","line":55,"column":7,"nodeType":"629","endLine":55,"endColumn":13,"suggestions":"711"},{"ruleId":"627","severity":1,"message":"712","line":60,"column":7,"nodeType":"629","endLine":60,"endColumn":17,"suggestions":"713"},{"ruleId":"627","severity":1,"message":"672","line":71,"column":7,"nodeType":"629","endLine":71,"endColumn":15,"suggestions":"714"},{"ruleId":"674","severity":1,"message":"675","line":97,"column":65,"nodeType":"676","messageId":"677","endLine":97,"endColumn":66,"fix":"715"},{"ruleId":"679","severity":1,"message":"680","line":165,"column":25,"nodeType":"622","endLine":165,"endColumn":308},{"ruleId":"616","severity":1,"message":"617","line":201,"column":82,"nodeType":"618","messageId":"619","endLine":201,"endColumn":84},{"ruleId":"616","severity":1,"message":"617","line":201,"column":122,"nodeType":"618","messageId":"619","endLine":201,"endColumn":124},{"ruleId":"616","severity":1,"message":"617","line":210,"column":82,"nodeType":"618","messageId":"619","endLine":210,"endColumn":84},{"ruleId":"616","severity":1,"message":"617","line":210,"column":123,"nodeType":"618","messageId":"619","endLine":210,"endColumn":125},{"ruleId":"616","severity":1,"message":"617","line":219,"column":82,"nodeType":"618","messageId":"619","endLine":219,"endColumn":84},{"ruleId":"616","severity":1,"message":"617","line":219,"column":119,"nodeType":"618","messageId":"619","endLine":219,"endColumn":121},{"ruleId":"616","severity":1,"message":"617","line":239,"column":66,"nodeType":"618","messageId":"619","endLine":239,"endColumn":68},{"ruleId":"603","severity":1,"message":"625","line":2,"column":15,"nodeType":"605","messageId":"606","endLine":2,"endColumn":28},{"ruleId":"627","severity":1,"message":"636","line":19,"column":7,"nodeType":"629","endLine":19,"endColumn":13,"suggestions":"716"},{"ruleId":"620","severity":1,"message":"621","line":44,"column":25,"nodeType":"622","endLine":44,"endColumn":244},{"ruleId":"603","severity":1,"message":"607","line":1,"column":16,"nodeType":"605","messageId":"606","endLine":1,"endColumn":25},{"ruleId":"650","severity":1,"message":"651","line":12,"column":13,"nodeType":"622","endLine":12,"endColumn":82},{"ruleId":"650","severity":1,"message":"651","line":13,"column":13,"nodeType":"622","endLine":13,"endColumn":79},{"ruleId":"620","severity":1,"message":"621","line":8,"column":21,"nodeType":"622","endLine":8,"endColumn":192},{"ruleId":"603","severity":1,"message":"684","line":7,"column":33,"nodeType":"605","messageId":"606","endLine":7,"endColumn":44},{"ruleId":"620","severity":1,"message":"621","line":11,"column":13,"nodeType":"622","endLine":11,"endColumn":188},{"ruleId":"616","severity":1,"message":"617","line":18,"column":31,"nodeType":"618","messageId":"619","endLine":18,"endColumn":33},{"ruleId":"603","severity":1,"message":"685","line":2,"column":9,"nodeType":"605","messageId":"606","endLine":2,"endColumn":14},{"ruleId":"603","severity":1,"message":"686","line":9,"column":8,"nodeType":"605","messageId":"606","endLine":9,"endColumn":15},{"ruleId":"603","severity":1,"message":"609","line":23,"column":27,"nodeType":"605","messageId":"606","endLine":23,"endColumn":34},{"ruleId":"603","severity":1,"message":"610","line":23,"column":36,"nodeType":"605","messageId":"606","endLine":23,"endColumn":41},{"ruleId":"616","severity":1,"message":"617","line":34,"column":74,"nodeType":"618","messageId":"619","endLine":34,"endColumn":76},{"ruleId":"616","severity":1,"message":"617","line":35,"column":71,"nodeType":"618","messageId":"619","endLine":35,"endColumn":73},{"ruleId":"627","severity":1,"message":"687","line":37,"column":7,"nodeType":"629","endLine":37,"endColumn":22,"suggestions":"717"},{"ruleId":"627","severity":1,"message":"636","line":45,"column":7,"nodeType":"629","endLine":45,"endColumn":13,"suggestions":"718"},{"ruleId":"616","severity":1,"message":"669","line":52,"column":27,"nodeType":"618","messageId":"619","endLine":52,"endColumn":29},{"ruleId":"627","severity":1,"message":"690","line":62,"column":7,"nodeType":"629","endLine":62,"endColumn":25,"suggestions":"719"},{"ruleId":"616","severity":1,"message":"617","line":128,"column":115,"nodeType":"618","messageId":"619","endLine":128,"endColumn":117},{"ruleId":"679","severity":1,"message":"680","line":151,"column":17,"nodeType":"622","endLine":151,"endColumn":310},{"ruleId":"620","severity":1,"message":"621","line":11,"column":21,"nodeType":"622","endLine":11,"endColumn":192},{"ruleId":"603","severity":1,"message":"685","line":2,"column":9,"nodeType":"605","messageId":"606","endLine":2,"endColumn":14},{"ruleId":"603","severity":1,"message":"686","line":10,"column":8,"nodeType":"605","messageId":"606","endLine":10,"endColumn":15},{"ruleId":"603","severity":1,"message":"666","line":26,"column":27,"nodeType":"605","messageId":"606","endLine":26,"endColumn":35},{"ruleId":"603","severity":1,"message":"667","line":26,"column":37,"nodeType":"605","messageId":"606","endLine":26,"endColumn":43},{"ruleId":"603","severity":1,"message":"664","line":29,"column":25,"nodeType":"605","messageId":"606","endLine":29,"endColumn":33},{"ruleId":"603","severity":1,"message":"665","line":29,"column":35,"nodeType":"605","messageId":"606","endLine":29,"endColumn":41},{"ruleId":"603","severity":1,"message":"692","line":37,"column":25,"nodeType":"605","messageId":"606","endLine":37,"endColumn":39},{"ruleId":"603","severity":1,"message":"693","line":39,"column":12,"nodeType":"605","messageId":"606","endLine":39,"endColumn":19},{"ruleId":"603","severity":1,"message":"694","line":39,"column":21,"nodeType":"605","messageId":"606","endLine":39,"endColumn":31},{"ruleId":"603","severity":1,"message":"695","line":41,"column":12,"nodeType":"605","messageId":"606","endLine":41,"endColumn":18},{"ruleId":"603","severity":1,"message":"696","line":41,"column":20,"nodeType":"605","messageId":"606","endLine":41,"endColumn":29},{"ruleId":"603","severity":1,"message":"633","line":54,"column":19,"nodeType":"605","messageId":"606","endLine":54,"endColumn":23},{"ruleId":"616","severity":1,"message":"617","line":56,"column":85,"nodeType":"618","messageId":"619","endLine":56,"endColumn":87},{"ruleId":"627","severity":1,"message":"687","line":69,"column":7,"nodeType":"629","endLine":69,"endColumn":20,"suggestions":"720"},{"ruleId":"627","severity":1,"message":"636","line":78,"column":7,"nodeType":"629","endLine":78,"endColumn":13,"suggestions":"721"},{"ruleId":"616","severity":1,"message":"617","line":92,"column":68,"nodeType":"618","messageId":"619","endLine":92,"endColumn":70},{"ruleId":"616","severity":1,"message":"617","line":109,"column":68,"nodeType":"618","messageId":"619","endLine":109,"endColumn":70},{"ruleId":"627","severity":1,"message":"699","line":136,"column":7,"nodeType":"629","endLine":136,"endColumn":32,"suggestions":"722"},{"ruleId":"627","severity":1,"message":"701","line":146,"column":8,"nodeType":"629","endLine":146,"endColumn":18,"suggestions":"723"},{"ruleId":"616","severity":1,"message":"617","line":154,"column":16,"nodeType":"618","messageId":"619","endLine":154,"endColumn":18},{"ruleId":"616","severity":1,"message":"617","line":155,"column":22,"nodeType":"618","messageId":"619","endLine":155,"endColumn":24},{"ruleId":"616","severity":1,"message":"617","line":173,"column":25,"nodeType":"618","messageId":"619","endLine":173,"endColumn":27},{"ruleId":"616","severity":1,"message":"617","line":173,"column":106,"nodeType":"618","messageId":"619","endLine":173,"endColumn":108},{"ruleId":"616","severity":1,"message":"617","line":190,"column":58,"nodeType":"618","messageId":"619","endLine":190,"endColumn":60},{"ruleId":"616","severity":1,"message":"617","line":228,"column":39,"nodeType":"618","messageId":"619","endLine":228,"endColumn":41},{"ruleId":"616","severity":1,"message":"617","line":236,"column":31,"nodeType":"618","messageId":"619","endLine":236,"endColumn":33},{"ruleId":"616","severity":1,"message":"617","line":300,"column":134,"nodeType":"618","messageId":"619","endLine":300,"endColumn":136},{"ruleId":"616","severity":1,"message":"617","line":323,"column":73,"nodeType":"618","messageId":"619","endLine":323,"endColumn":75},{"ruleId":"679","severity":1,"message":"680","line":338,"column":17,"nodeType":"622","endLine":338,"endColumn":329},{"ruleId":"616","severity":1,"message":"617","line":350,"column":96,"nodeType":"618","messageId":"619","endLine":350,"endColumn":98},{"ruleId":"646","severity":1,"message":"647","line":360,"column":100,"nodeType":"648","messageId":"649","endLine":360,"endColumn":102},{"ruleId":"646","severity":1,"message":"647","line":360,"column":123,"nodeType":"648","messageId":"649","endLine":360,"endColumn":125},{"ruleId":"646","severity":1,"message":"647","line":367,"column":106,"nodeType":"648","messageId":"649","endLine":367,"endColumn":108},{"ruleId":"646","severity":1,"message":"647","line":367,"column":135,"nodeType":"648","messageId":"649","endLine":367,"endColumn":137},{"ruleId":"616","severity":1,"message":"669","line":419,"column":141,"nodeType":"618","messageId":"619","endLine":419,"endColumn":143},{"ruleId":"616","severity":1,"message":"617","line":517,"column":97,"nodeType":"618","messageId":"619","endLine":517,"endColumn":99},{"ruleId":"620","severity":1,"message":"621","line":8,"column":21,"nodeType":"622","endLine":8,"endColumn":192},{"ruleId":"603","severity":1,"message":"604","line":1,"column":16,"nodeType":"605","messageId":"606","endLine":1,"endColumn":24},{"ruleId":"638","severity":1,"message":"639","line":13,"column":5,"nodeType":"640","messageId":"641","endLine":41,"endColumn":6},{"ruleId":"616","severity":1,"message":"617","line":29,"column":39,"nodeType":"618","messageId":"619","endLine":29,"endColumn":41},"no-native-reassign",["724"],"no-negated-in-lhs",["725"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Footer' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'loadingTournaments' is assigned a value but never used.","'tournamentsError' is assigned a value but never used.","'blogPosts' is assigned a value but never used.","'loadingPosts' is assigned a value but never used.","'postsError' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Router' is defined but never used.","'Switch' is defined but never used.","'useRouteMatch' is defined but never used.","'tourneyIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'past' and 'upcoming'. Either include them or remove the dependency array.","ArrayExpression",["726"],"'axios' is defined but never used.","'TournamentsPage' is defined but never used.","'slug' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'db' and 'freeAgent'. Either include them or remove the dependency array. You can also do a functional update 'setFreeAgent(f => ...)' if you only need 'freeAgent' in the 'setFreeAgent' call.",["727"],"React Hook useEffect has a missing dependency: 'db'. Either include it or remove the dependency array.",["728"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'link' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'Link' is defined but never used.","'firebase' is defined but never used.","'Button' is defined but never used.","'allVideos' is assigned a value but never used.","'videosLoading' is assigned a value but never used.","'videosError' is assigned a value but never used.","'useAuthState' is defined but never used.","'generateID' is defined but never used.","'unstable_concurrentAct' is defined but never used.","'tLoading' is assigned a value but never used.","'tError' is assigned a value but never used.","'oLoading' is assigned a value but never used.","'oError' is assigned a value but never used.",["729"],"Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'initialUser'. Either include it or remove the dependency array.",["730"],"React Hook useEffect has a missing dependency: 'isSidebarOpen'. Either include it or remove the dependency array.",["731"],"rest-spread-spacing","Unexpected whitespace after spread property operator.","ExperimentalSpreadProperty","unexpectedWhitespace",{"range":"732","text":"733"},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'useCollection' is defined but never used.","'setContentPass' is assigned a value but never used.",["734"],"'description' is assigned a value but never used.","'Route' is defined but never used.","'OrgCard' is defined but never used.","React Hook useEffect has missing dependencies: 'pathname' and 'query'. Either include them or remove the dependency array.",["735"],["736"],"React Hook useEffect has a missing dependency: 'initialOrg'. Either include it or remove the dependency array.",["737"],"'setTempResults' is assigned a value but never used.","'results' is assigned a value but never used.","'setResults' is assigned a value but never used.","'prizes' is assigned a value but never used.","'setPrizes' is assigned a value but never used.",["738"],["739"],"React Hook useEffect has missing dependencies: 'initialTournament', 'tempResults', and 'updateTournament'. Either include them or remove the dependency array.",["740"],"React Hook useEffect has a missing dependency: 'tournamentData'. Either include it or remove the dependency array. You can also do a functional update 'setTournamentData(t => ...)' if you only need 'tournamentData' in the 'setTournamentData' call.",["741"],["724"],["725"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["742"],["743"],["744"],"React Hook useEffect has a missing dependency: 'initialUser'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setChangesSaved' needs the current value of 'initialUser'.",["745"],["746"],{"range":"747","text":"733"},["748"],["749"],["750"],["751"],["752"],["753"],["754"],["755"],"no-global-assign","no-unsafe-negation",{"desc":"756","fix":"757"},{"desc":"758","fix":"759"},{"desc":"760","fix":"761"},{"desc":"760","fix":"762"},{"desc":"763","fix":"764"},{"desc":"765","fix":"766"},[3184,3185],"",{"desc":"760","fix":"767"},{"desc":"768","fix":"769"},{"desc":"760","fix":"770"},{"desc":"771","fix":"772"},{"desc":"773","fix":"774"},{"desc":"760","fix":"775"},{"desc":"776","fix":"777"},{"desc":"778","fix":"779"},{"desc":"758","fix":"780"},{"desc":"760","fix":"781"},{"desc":"760","fix":"782"},{"desc":"763","fix":"783"},{"desc":"765","fix":"784"},[3059,3060],{"desc":"760","fix":"785"},{"desc":"768","fix":"786"},{"desc":"760","fix":"787"},{"desc":"771","fix":"788"},{"desc":"773","fix":"789"},{"desc":"760","fix":"790"},{"desc":"776","fix":"791"},{"desc":"778","fix":"792"},"Update the dependencies array to be: [tournaments, keyword, upcoming, past]",{"range":"793","text":"794"},"Update the dependencies array to be: [db, freeAgent, tournament]",{"range":"795","text":"796"},"Update the dependencies array to be: [db, user]",{"range":"797","text":"798"},{"range":"799","text":"798"},"Update the dependencies array to be: [initialUser, userData]",{"range":"800","text":"801"},"Update the dependencies array to be: [isSidebarOpen, window]",{"range":"802","text":"803"},{"range":"804","text":"798"},"Update the dependencies array to be: [organizations, pathname, query]",{"range":"805","text":"806"},{"range":"807","text":"798"},"Update the dependencies array to be: [initialOrg, orgData, tempImg]",{"range":"808","text":"809"},"Update the dependencies array to be: [pathname, query, tournaments]",{"range":"810","text":"811"},{"range":"812","text":"798"},"Update the dependencies array to be: [tournamentData, tempImg, initialTournament, updateTournament, tempResults]",{"range":"813","text":"814"},"Update the dependencies array to be: [schedule, tournamentData]",{"range":"815","text":"816"},{"range":"817","text":"796"},{"range":"818","text":"798"},{"range":"819","text":"798"},{"range":"820","text":"801"},{"range":"821","text":"803"},{"range":"822","text":"798"},{"range":"823","text":"806"},{"range":"824","text":"798"},{"range":"825","text":"809"},{"range":"826","text":"811"},{"range":"827","text":"798"},{"range":"828","text":"814"},{"range":"829","text":"816"},[2112,2133],"[tournaments, keyword, upcoming, past]",[2485,2497],"[db, freeAgent, tournament]",[2688,2694],"[db, user]",[1862,1868],[2133,2143],"[initialUser, userData]",[2372,2380],"[isSidebarOpen, window]",[465,471],[1506,1521],"[organizations, pathname, query]",[1725,1731],[2065,2083],"[initialOrg, orgData, tempImg]",[2821,2834],"[pathname, query, tournaments]",[3084,3090],[5472,5497],"[tournamentData, tempImg, initialTournament, updateTournament, tempResults]",[5760,5770],"[schedule, tournamentData]",[2485,2497],[2688,2694],[1908,1914],[2008,2018],[2247,2255],[465,471],[1506,1521],[1725,1731],[2065,2083],[3092,3105],[3355,3361],[5743,5768],[6031,6041]]